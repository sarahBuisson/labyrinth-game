{"version":3,"sources":["webpack:///src/app/utils/kotlinUtils.ts","webpack:///src/app/music-view/music.module.ts","webpack:///src/app/labyrinth/service/sound/sound.service.ts","webpack:///src/app/labyrinth/menu/menu.component.ts","webpack:///src/app/labyrinth/menu/menu.component.html","webpack:///src/app/labyrinth/game-view/labyrinth-game.module.ts","webpack:///src/app/music-view/partition-view/temp-view/temp-view.component.ts","webpack:///src/app/music-view/partition-view/temp-view/temp-view.component.html","webpack:///src/app/music-view/music-view.component.ts","webpack:///src/app/music-view/music-view.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-inside-grid.component.ts","webpack:///src/app/utils/ascii/ascii-line/ascii-line.component.ts","webpack:///src/app/utils/ascii/ascii-line/ascii-line.component.html","webpack:///src/app/utils/ascii/ascii-button/ascii-button.component.ts","webpack:///src/app/labyrinth/service/render/resources/border.ts","webpack:///src/app/labyrinth/service/generate-lab.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.ts","webpack:///src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.html","webpack:///src/app/utils/ui/atom/sliding/sliding.component.ts","webpack:///src/app/utils/ui/atom/sliding/sliding.component.html","webpack:///src/app/characterEditor/character-form/character-form.component.ts","webpack:///src/app/characterEditor/character-form/character-form.component.html","webpack:///src/app/labyrinth/service/sound/tone.service.ts","webpack:///src/app/labyrinth/game-view/inventory-view/inventory-view.component.ts","webpack:///src/app/labyrinth/game-view/inventory-view/inventory-view.component.html","webpack:///src/app/utils/ascii/ascii-modal/ascii-modal.component.ts","webpack:///src/app/utils/ascii/ascii-modal/ascii-modal.component.html","webpack:///src/app/utils/ascii/ascii-generator.service.ts","webpack:///src/app/utils/ascii/component/ascii.component.ts","webpack:///src/app/utils/ascii/component/ascii.component.html","webpack:///src/app/labyrinth/service/render/map-ascii-render.service.ts","webpack:///src/app/utils/ascii/ascii.module.ts","webpack:///src/app/labyrinth/service/data-storage.service.ts","webpack:///src/app/labyrinth/service/highscores.service.ts","webpack:///src/app/labyrinth/new-form/new-labyrinth-form.component.ts","webpack:///src/app/labyrinth/new-form/new-labyrinth-form.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/labyrinth/game-view/map-view/map-view.component.ts","webpack:///src/app/labyrinth/game-view/map-view/map-view.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-grid.module.ts","webpack:///src/app/utils/ascii/ascii-border/ascii-border.component.ts","webpack:///src/app/utils/ascii/ascii-border/ascii-border.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/labyrinth/service/render/ascii-render.service.ts","webpack:///src/app/labyrinth/service/render/resources/border-compute.ts","webpack:///src/app/utils/ui/atom/sound/sound.component.ts","webpack:///src/app/utils/ui/atom/sound/sound.component.html","webpack:///src/app/labyrinth/loading/loading.component.ts","webpack:///src/app/labyrinth/loading/loading.component.html","webpack:///src/app/utils/ascii/AsciiConst.ts","webpack:///src/app/labyrinth/game-view/level-view/level-view.component.ts","webpack:///src/app/labyrinth/game-view/level-view/level-view.component.html","webpack:///src/app/labyrinth/game-view/keypad-form/keypad-form.component.ts","webpack:///src/app/labyrinth/game-view/keypad-form/keypad-form.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-on-grid-div.component.ts","webpack:///src/app/music-view/partition-view/partition-view.component.ts","webpack:///src/app/labyrinth/service/render/character-render.service.ts","webpack:///src/app/labyrinth/service/render/fullsize-ascii-render.service.ts","webpack:///src/app/utils/ascii/ascii-character/ascii-character.component.ts","webpack:///src/app/utils/ascii/ascii-character/ascii-character.component.html","webpack:///src/app/labyrinth/game-view/labyrinth-game.component.ts","webpack:///src/app/labyrinth/game-view/labyrinth-game.component.html","webpack:///src/app/labyrinth/service/gameplay-lab.service.ts","webpack:///src/app/ascii-gallery/ascii-gallery.component.ts","webpack:///src/app/ascii-gallery/ascii-gallery.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/labyrinth/service/sound/game-musique.service.ts","webpack:///src/app/labyrinth/loading/loading.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["standardizeName","oldName","replace","instanceWithSimplifiedField","kotlinInstance","maxDeep","autoProxyMethod","newkotlinInstance","Object","getOwnPropertyNames","forEach","propertyclassName","__proto__","constructor","name","newName","isNaN","parseInt","Array","isArray","isNewNameAlreadyUsed","getOwnPropertyDescriptor","parseKotlinToJsView","e","console","error","undefined","map","item","className","args","retourMethod","apply","toArray","protoMap","internalMap","backingMap","values","protoEntry","protoEntryProxy","key","name$","value","printProxyModel","obj","indentation","keys","endsWith","parseKotlinPathToJsView","instance","path","getFromKotlin","length","slice","field","find","fieldName","MusicModule","declarations","exports","imports","SoundService","gameMusiqueService","toneService","soundOnSubject$","soundOn$","pipe","previousValue","forcedValue","soundOn","warn","mute","toneHaveBeenInitialized","document","querySelector","addEventListener","start","log","forceSoundOn","menuInstrument","Synth","gameInstrument","soundInstrument","toDestination","volume","moveSound","moveMusic","takeSound","takeMusic","noSound","noMusic","observer","subscribe","tryNTimes","menuMusic","createLoop","menuMusicRandom","gameMusic","gameMusicRandom","numberOfTry","callback","play","playAmbiantMusic","newMusic","instrument","currentAmbiance","loop","stop","ambiantInstrument","music","next","dispose","providedIn","partition","tempo","flatpartition","flatPartition","timeC","part","time","note","decalage","duration","triggerAttackRelease","tune","now","i","n","playNote","MenuComponent","router","highscoresService","soundService","subscriptionHighscores","getScores","scores","highscores","generateMenuMusic","playMove","newFormModal","show","navigateByUrl","characterFormModal","saveScore","Math","random","unsubscribe","playMenuMusic","clickNew","clickCharacter","saveHighScore","clickMusic","selector","templateUrl","styles","highScoreModal","loadingModal","LabyrinthGameModule","TempViewComponent","scale","temp","minWidth","width","display","color","styleUrls","MusicViewComponent","musiqueService","instrument2","changeMusic","currentPart","currentInstrument","newPartition","currentMusicPartition","clear","generateGameMusic","pause","AsciiInsideGridDivComponent","contentSplited","content","child","textContent","split","gridColumn","gridRow","HTMLElement","hostStyle","AsciiLineComponent","size","line","AsciiButtonComponent","defaultButtonBorderTemplate","template","paperRaw","paperGridTemplate","paperExitRaw","paperExitGridTemplate","mapZoneRaw","mapGridTemplate","abcRaw","abcGridTemplate","defaultBorderRaw","defaultGridTemplate","doubleBorderRaw","doubleGridTemplate","buttonBorderRaw","titleBorderRaw","defaultTitleBorderTemplate","loadingBorderRaw","loadingBorderGridTemplate","viewCloseDoorZoneRaw","viewOpenDoorZoneRaw","viewWallZoneRaw","defaultZoneCornerWidth","defaultZoneSideWidth","defaultZoneCornerHeight","defaultZoneSideHeight","viewCloseDoorGridTemplate","viewEmptyZoneRawOld","viewEmptyZoneRawOld2","viewEmptyZoneRaw3","viewEmptyZoneRaw4","viewWallZoneRaw2","viewEmptyDeepZoneRaw","viewEmptyDeepOmbreZoneRaw","viewEmptyDeepWaterZoneRaw","viewEmptySpikeZoneRaw","viewEmptyObstructedZoneRaw","viewObstructed2lZoneRaw","viewObstructed3lZoneRaw","viewEmptyZoneRaw5","viewEmptyZoneGridTemplate","viewEmptyZones","viewEmptyZoneGridTemplates","z","viewOpenDoorGridTemplate","viewWallGridTemplate","exitTemplate","startTemplate","bagRaw","handRaw","bigHandRaw","otherHandRaw","bagGridTemplate","inventoryBox","inventoryBoxGridTemplate","labeatGeneration","perso","labyrinth","labeat","generation","GenerateLabService","dataStorageService","generateSpirale","playerName","party","initPartieMapLabWithKey","saveParty","level","connectAllZoneOfBoard","generateEmptyBoard","initPartieSpiral","environment","production","backgroundTemplate","shuffle","ZoneViewComponent","gameplayLabService","renderService","clickOnBorder","direction","event","hasPlayer","zone","move","preventDefault","clickOnZone","takeObj","take","moveAtCase","proxy","borderRendered","directions","door","doorAt","toUpperCase","computeTooltip","x","y","renderObj","destination","inventory","levelContent","defaultData","top","bottom","left","right","marginTop","marginBottom","marginLeft","marginRight","position","transform","generateStyle","dataName","tokenStyle","generateDefaultParams","SlidingComponent","openData","closeData","slideOnlyOnClick","isOpen","ngOnChanges","$event","params","open","close","toggle","mouseOver","mouseLeave","click","onAnimationEvent","animations","CharacterFormComponent","dataStorage","ngZone","data","render","saveCharacter","update","initCharacterRotation","runOutsideAngular","interval","setInterval","rotate","clearInterval","ToneService","InventoryViewComponent","_renderService","borderDatas","player","AsciiModalComponent","_show","closable","AsciiGeneratorService","reverseChar","str","partsKey","row","reversedRow","filter","s","word","includes","reverse","join","ret","reverseString","_","AsciiComponent","asciiClass","tooltip","MapAsciiRenderService","asciiGeneratorService","dir","leftBottomCornerTemplate","rightBottomCornerTemplate","leftTopCornerTemplate","rightTopCornerTemplate","characterData","it","location","exit","templateName","toLowerCase","doorName","nameReversed","closedLeftReversed","closedLeft","closedTop","closedBottom","templateString","characterRenderData","classname","AsciiModule","DataStorageService","currentParty$","lastMessage$","characterDirection$","currentCharaRenderData$","chardata","HighscoresService","http","score","objectObservable","post","headers","get","NewLabyrinthFormComponent","labService","route","queryParams","timer","Promise","resolve","setTimeout","generate","all","then","hide","generateEmpty","AppComponent","title","mapBorderData","MapViewComponent","rangeArroundPlayer","borderData","currentPartyProxy","currentParty","levelCase","abs","levelCaseInput","nbrOfConnections","connected","AsciiGridModule","AsciiBorderComponent","_changeDetectorRef","hostRef","renderer","computeRenderEachTime","haveAlreadyBeComputed","xComputedRepeat","yComputedRepeat","renders","borderClasses","computedData","borderSizePx","computed","toClear","borderClick","debug","borderTemplateName","nativeElement","nodeName","borderTemplate","getAsciiBorderForName","computeData","xRepeat","yRepeat","computeBorderDimension","topPartHeight","bottomPartHeight","rightPartWidth","leftPartWidth","array","push","computeAndUpdateDimension","timeout","detectChanges","clearTimeout","mainElement","height","clientWidth","clientHeight","offsetWidth","offsetHeight","hostHaveChanged","widthPx","heightPx","shouldCompute","oldX","oldY","floor","leftSideHeight","topSideWidth","allDataPresent","computedDataHaveChange","splitTop","topTemplate","splitBottom","bottomTemplate","counterX","counter","counterY","l","leftTemplate","rightTemplate","style","border","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","JSON","stringify","changeDetection","OnPush","contentClass","compJson","AppModule","providers","bootstrap","AsciiRenderService","partsKeys","topDoorTemplate","bottomDoorTemplate","leftDoorTemplate","rightDoorTemplate","leftWallTemplate","rightWallTemplate","topWallTemplate","bottomWallTemplate","reverseTemplate","dir1","dir2","capitalize","charAt","BorderTemplate","topLeftTemplate","topRightTemplate","bottomLeftTemplate","bottomRightTemplate","asciiStringToGridObject","leftCornerWidth","leftCornerHeight","templates","strR","k","topRightFirstLine","SoundComponent","on","off","subscribeSoundOn","soundSubscription","toogleSound","toogle","LoadingComponent","fullViewRenderService","currentLoadingMessage","maxNumberOfMessage","clickDuringLoading","CHARACTER_FONT_SIZE","LINE_HEIGHT","CHARACTER_HEIGHT","CHARACTER_SPACING","LevelViewComponent","changes","updateFieldOfView","fieldOfView","dy","dx","ix","iy","getXY","index","KeypadFormComponent","dataService","message","subscription","m","takeAll","handleKey","AsciiOnGridDivComponent","PartitionViewComponent","borderColor","round","initscale","partitionForms","tunes","getSuroundingTunes","sort","a","b","getLevel","form","CharacterRenderData","eye","hair","torso","hat","leg","TemplateAnimation","CharacterRenderService","templateLeft","templateFront","templateBack","assign","bodyPartsKey","templateRight","reverseData","FullsizeAsciiRenderService","characterRenderService","dirSub","getPlayerDirection","c","playerDirection","playerRenderDataSub","getCurrentCharaRenderData","playerRenderData","renderPlayer","type","AsciiCharacterComponent","contentDiv","ceil","getBoundingClientRect","ngAfterViewInit","LabyrinthGameComponent","mapRenderService","subscribeCurrentParty","playGameMusic","subscriptionCurrentParty","getCurrentParty","nextParty","currentLevel","status","winModal","computePartieScore","levelView","GameplayLabService","serviceLabService","gameplay","saveCharacterDirection","connectionsMap","nextLocation","interaction","result","playNo","objToTake","playTake","interactionResult","playerInteractWith","saveLastMessages","isDoor","doorDestination","p","AsciiGalleryComponent","abc","outsideZone","parchemin","emptyParty","initPartieEmpty","emptyZone","defaultZone","routes","component","redirectTo","AppRoutingModule","forRoot","GameMusiqueService","choseNoteFromRandomNWhoRespect","sizeOfChoice","chooseNoteWhoRespect","possibilites","filters","newNote","every","f","bind","randomFromArray","generateMusicDeprimante","getFirstTuneWhoRespect","getRandomFromBestsWhoRespect","generateMusicAngoissante","getFirstFromBestsWhoRespect","mainNotes","getNNextDescendante","mainRhytme","concat","firstNoteTheme","mainTheme","fillPatternWithNoteDescendantes","firstNoteIntro","intro","beforeLastNoteIntro","lastNoteIntro","isConsonnanteOf","n2","variation1","variation2","conclusion","fillWithNotesRespecting","mainRhytmePart1","mainRhytmePart2","lastNotePreviousPattern","mainThemePart1","previousPattern","pattern","indexP","firstNote","getTunesBeetween","maxNoteIndex","firstNoteIndex","findIndex","currentNotes","fillWithNotesRespecting2","isDescendanceOf","isDiffOf","insertResolutionAtEndIfNeed","getTuneAt","flatMainThemePart1","noteFromPart1","noteForPart2","mainThemePart2","shufflePattern","rythme","newPattern","fillWithRandomNote","insertDisconnanceAndResolutionAtEnd","mainThemeNotes","isInIntervalDegres","flatIntro","noteForVariation","last","LoadingModule","KotlinLoggingConfiguration","LOG_LEVEL","KotlinLoggingLevel","ERROR","bootstrapModule","err","webpackEmptyAsyncContext","req","Error","code","module","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,eAASA,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,eAAOA,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,EAA4BA,OAA5B,CAAoC,SAApC,EAA+C,EAA/C,EAAmDA,OAAnD,CAA2D,MAA3D,EAAmE,EAAnE,CAAP;AACD;;AAED,eAASC,2BAAT,CAAqCC,cAArC,EAAqDC,OAArD,EAA8DC,eAA9D,EAA6E;AAC3E,YAAIC,iBAAiB,GAAG,EAAxB;AACAC,cAAM,CAACC,mBAAP,CAA2BL,cAA3B,EAA2CM,OAA3C,CACE,UAACT,OAAD,EAAqB;AACnBM,2BAAiB,CAACN,OAAD,CAAjB,GAA6BG,cAAc,CAACH,OAAD,CAA3C;AACA,cAAIU,iBAAiB,GAAG,CAAC,CAACP,cAAc,CAACH,OAAD,CAAhB,IAA6B,CAAC,CAACG,cAAc,CAACH,OAAD,CAAd,CAAwBW,SAAvD,IAAoE,CAAC,CAACR,cAAc,CAACH,OAAD,CAAd,CAAwBW,SAAxB,CAAkCC,WAAxG,IAAuHT,cAAc,CAACH,OAAD,CAAd,CAAwBW,SAAxB,CAAkCC,WAAlC,CAA8CC,IAA7L;AACA,cAAIC,OAAJ;;AACA,cAAI,CAACC,KAAK,CAACC,QAAQ,CAAChB,OAAD,CAAT,CAAV,EAA+B;AAC7Bc,mBAAO,GAAGd,OAAV;AACD,WAFD,MAEO;AACLc,mBAAO,GAAGf,eAAe,CAACC,OAAD,CAAzB;;AAEA,gBAAIU,iBAAiB,KAAK,WAAtB,IAAqC,CAACO,KAAK,CAACC,OAAN,CAAcf,cAAc,CAACH,OAAD,CAA5B,CAA1C,EAAkF;AAChFc,qBAAO,IAAI,OAAX;AACD;;AACD,gBAAIJ,iBAAiB,KAAK,SAAtB,IAAmCA,iBAAiB,IAAI,eAA5D,EAA6E;AAC3EI,qBAAO,IAAI,KAAX;AACD;;AACD,gBAAIJ,iBAAiB,KAAK,UAA1B,EAAsC;AACpCI,qBAAO,IAAI,UAAX;AACD;AACF;;AACD,cAAIK,oBAAoB,GAAGZ,MAAM,CAACa,wBAAP,CAAgCd,iBAAhC,EAAmDQ,OAAnD,CAA3B;;AACA,cAAI,CAACX,cAAc,CAACQ,SAApB,EAA+B;AAC7B;AACAL,6BAAiB,CAACQ,OAAD,CAAjB,GAA6BX,cAAc,CAACH,OAAD,CAA3C;AACD;;AACD,cAAI,CAACG,cAAc,CAACQ,SAAf,CAAyBG,OAAzB,CAAL,EAAwC;AACtC,gBAAI;AACF,kBAAIV,OAAO,IAAI,CAAf,EAAkB;AAChBE,iCAAiB,CAACQ,OAAD,CAAjB,GAA6BO,mBAAmB,CAAClB,cAAc,CAACH,OAAD,CAAf,EAA0BI,OAAO,GAAG,CAApC,EAAuCC,eAAvC,CAAhD;AACD,eAFD,MAEO;AACLC,iCAAiB,CAACQ,OAAD,CAAjB,GAA6BX,cAAc,CAACH,OAAD,CAA3C;AACD;AACF,aAND,CAME,OAAOsB,CAAP,EAAU;AACVC,qBAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AAEF;AAEF,SAtCH;AAwCA,eAAOhB,iBAAP;AACD;;AAEM,eAASe,mBAAT,CAA6BlB,cAA7B,EAA8F;AAAA,YAAjDC,OAAiD,uEAA/B,KAA+B;AAAA,YAAxBC,eAAwB,uEAAN,IAAM;;AACnG,YAAI,CAAC,CAACD,OAAF,IAAaA,OAAO,GAAG,CAA3B,EAA8B;AAC5B,iBAAOD,cAAP;AACD,SAFD,MAEO,IAAIA,cAAc,KAAKsB,SAAnB,IAAgCtB,cAAc,KAAK,IAAvD,EAA6D;AAClE,iBAAOA,cAAP;AACD,SAFM,MAEA,IAAI,OAAOA,cAAP,KAA0B,QAA9B,EAAwC;AAC7C,iBAAOA,cAAP;AACD,SAFM,MAEA,IAAIc,KAAK,CAACC,OAAN,CAAcf,cAAd,CAAJ,EAAmC;AACxC,iBAAOA,cAAc,CAACuB,GAAf,CAAmB,UAACC,IAAD,EAAU;AAClC,mBAAON,mBAAmB,CAACM,IAAD,EAAOvB,OAAP,EAAgBC,eAAhB,CAA1B;AACD,WAFM,CAAP;AAID,SALM,MAKA;AACL,cAAIuB,SAAS,GAAGzB,cAAc,CAACQ,SAAf,CAAyBC,WAAzB,CAAqCC,IAArD;;AACA,cAAIe,SAAS,KAAK,UAAlB,EAA8B;AAE5B,mBAAO,YAAa;AAAA,gDAATC,IAAS;AAATA,oBAAS;AAAA;;AAClB,kBAAMC,YAAY,GAAG3B,cAAc,CAAC4B,KAAf,CAAqB,IAArB,EAA2BF,IAA3B,CAArB;;AACA,kBAAIxB,eAAJ,EAAqB;AACnB,uBAAOgB,mBAAmB,CAACS,YAAD,EAAe1B,OAAO,GAAG,CAAzB,EAA4BC,eAA5B,CAA1B;AACD,eAFD,MAEO;AACL,uBAAOyB,YAAP;AACD;AACF,aAPD;AASD,WAXD,MAWO,IAAIF,SAAS,KAAK,WAAd,IAA6BA,SAAS,KAAK,SAA/C,EAA0D;AAC/D,mBAAOzB,cAAc,CAAC6B,OAAf,GAAyBN,GAAzB,CAA6B,UAACC,IAAD,EAAU;AAC5C,kBAAIvB,OAAO,IAAI,CAAf,EAAkB;AAChB,uBAAOiB,mBAAmB,CAACM,IAAD,EAAOvB,OAAO,GAAG,CAAjB,EAAoBC,eAApB,CAA1B;AACD,eAFD,MAEO;AACL,uBAAOsB,IAAP;AAED;AACF,aAPM,CAAP;AAQD,WATM,MASA,IAAIC,SAAS,KAAK,SAAd,IAA2BA,SAAS,IAAI,eAA5C,EAA6D;AAClE,gBAAItB,iBAAiB,GAAG,EAAxB;AACA,gBAAI2B,QAAQ,GAAG/B,2BAA2B,CAACC,cAAD,EAAiB,CAAjB,EAAoB,KAApB,CAA1C;;AACA,gBAAI8B,QAAQ,CAACC,WAAb,EAA0B;AACxBD,sBAAQ,GAAG/B,2BAA2B,CAAC+B,QAAQ,CAACC,WAAV,EAAuB,CAAvB,EAA0B,KAA1B,CAAtC;;AACA,kBAAID,QAAQ,CAACE,UAAb,EAAyB;AACvB5B,sBAAM,CAAC6B,MAAP,CAAcH,QAAQ,CAACE,UAAvB,EACG1B,OADH,CACW,UAAC4B,UAAD,EAA0C;AACjD,sBAAIC,eAAe,GAAGpC,2BAA2B,CAACmC,UAAD,EAAa,CAAb,EAAgB,KAAhB,CAAjD,CADiD,CAEjD;;AACA,sBAAIE,GAAG,GAAWD,eAAe,CAACC,GAAhB,CAAoBC,KAApB,GAA4BF,eAAe,CAACC,GAAhB,CAAoBC,KAAhD,GAAwDF,eAAe,CAACC,GAA1F;AACAjC,mCAAiB,CAACiC,GAAD,CAAjB,GAAyBlB,mBAAmB,CAACiB,eAAe,CAACG,KAAjB,EAAwBrC,OAAO,GAAG,CAAlC,EAAqC,KAArC,CAA5C;AACD,iBANH;AAOD;AACF;;AACD,mBAAOE,iBAAP;AACD,WAhBM,MAgBA;AAEL,gBAAIA,kBAAiB,GAAGJ,2BAA2B,CAACC,cAAD,EAAiBC,OAAjB,EAA0BC,eAA1B,CAAnD;;AACAC,8BAAiB,CAACsB,SAAlB,GAA8BA,SAA9B;AACA,mBAAOtB,kBAAP;AACD;AACF;;AACD,eAAOH,cAAP;AACD;;AAEM,eAASuC,eAAT,CAAyBC,GAAzB,EAAgD;AAAA,YAAlBC,WAAkB,uEAAJ,EAAI;AAErD,eAAOrC,MAAM,CAACsC,IAAP,CAAYF,GAAZ,EAAiBjB,GAAjB,CAAqB,UAAAa,GAAG,EAAI;AAEjC,cAAIA,GAAG,CAACO,QAAJ,CAAa,OAAb,CAAJ,EAA2B;AACzB,mBAAOJ,eAAe,CAACC,GAAG,CAACJ,GAAD,CAAH,CAAS,CAAT,CAAD,CAAtB;AACD;;AACD,iBAAOA,GAAP;AAED,SAPM,CAAP;AAQD;;AAEM,eAASQ,uBAAT,CAAiCC,QAAjC,EAAoD;AAAA,2CAANC,IAAM;AAANA,cAAM;AAAA;;AAEzD,eAAO5B,mBAAmB,CAAC6B,aAAa,MAAb,UAAcF,QAAd,SAA2BC,IAA3B,EAAD,EAAmC,CAAnC,EAAsC,KAAtC,CAA1B;AACD;;AAEM,eAASC,aAAT,CAAuBF,QAAvB,EAAyD;AAAA,2CAAhBC,IAAgB;AAAhBA,cAAgB;AAAA;;AAC9D,YAAIA,IAAI,CAACE,MAAL,IAAe,CAAf,IAAoB,CAACH,QAAzB,EAAmC;AACjC,iBAAOA,QAAP;AACD,SAFD,MAEO;AACL,cAAItC,iBAAiB,GAAGsC,QAAQ,CAACrC,SAAT,CAAmBC,WAAnB,CAA+BC,IAAvD;;AACA,cAAImC,QAAQ,CAAChB,OAAb,EAAsB;AACpB,mBAAOkB,aAAa,MAAb,UAAcF,QAAQ,CAAChB,OAAT,GAAmBiB,IAAI,CAAC,CAAD,CAAvB,CAAd,4BAA8CA,IAAI,CAACG,KAAL,CAAW,CAAX,CAA9C,GAAP;AACD,WAFD,MAEO,IAAI1C,iBAAiB,KAAK,SAAtB,IAAmCA,iBAAiB,IAAI,eAA5D,EAA6E;AAClF,mBAAOwC,aAAa,MAAb,UAAc7B,mBAAmB,CAAC2B,QAAD,EAAW,CAAX,EAAc,KAAd,CAAnB,CAAwCC,IAAI,CAAC,CAAD,CAA5C,CAAd,4BAAmEA,IAAI,CAACG,KAAL,CAAW,CAAX,CAAnE,GAAP;AACD,WAFM,MAEA;AACL,gBAAIC,KAAK,GAAW9C,MAAM,CAACsC,IAAP,CAAYG,QAAZ,EAAsBM,IAAtB,CAA2B,UAAAC,SAAS,EAAI;AAC1D,qBAAOxD,eAAe,CAACwD,SAAD,CAAf,IAA8BN,IAAI,CAAC,CAAD,CAAzC,CAD0D,CACb;AAC9C,aAFmB,CAApB;;AAGA,gBAAID,QAAQ,CAACK,KAAD,CAAZ,EAAqB;AACnB,qBAAOH,aAAa,MAAb,UAAcF,QAAQ,CAACK,KAAD,CAAtB,4BAAkCJ,IAAI,CAACG,KAAL,CAAW,CAAX,CAAlC,GAAP;AACD,aAFD,MAEO;AACL,qBAAOJ,QAAQ,CAACK,KAAD,CAAf;AACD;AACF;AACF;AACF;;;;;;;;;;;;;;;;;AClJD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA;AAAA;AAAA;AAAA,YAUaG,WAVb;AAAA;AAAA;;;gBAUaA;;;;6BAAAA,W;AAAW,W;AAAA,oBALb,CACP,4DADO,EAEP,qEAFO,CAKa;;;OAVxB;;;4HAUaA,W,EAAW;AAAA,yBATP,wEASO,EATa,+FASb,EATqC,+FASrC;AATsD,oBAK1E,4DAL0E,EAM1E,qEAN0E,CAStD;AAHT,oBAJX,+FAIW;AAGS,S;AAPE,O;;;;;wEAObA,W,EAAW;gBAVvB,sDAUuB;iBAVd;AACRC,wBAAY,EAAE,CAAC,wEAAD,EAAqB,+FAArB,EAA6C,+FAA7C,CADN;AAERC,mBAAO,EAAE,CACP,+FADO,CAFD;AAKRC,mBAAO,EAAE,CACP,4DADO,EAEP,qEAFO;AALD,W;AAUc,U;;;;;;;;;;;;;;;;;;AClBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA;AAAA;AAAA;AAAA,YAGaC,YAHb;AA0CE,gCAAoBC,kBAApB,EAAoEC,WAApE,EAA6F;AAAA;;AAAA;;AAC3F;AADkB,iBAAAD,kBAAA,GAAAA,kBAAA;AAAgD,iBAAAC,WAAA,GAAAA,WAAA;AArCpE,iBAAAC,eAAA,GAAoC,IAAI,oDAAJ,CAA6B,KAA7B,CAApC;AACA,iBAAAC,QAAA,GAAW,KAAKD,eAAL,CAAqBE,IAArB,CAA0B,4DAAK,UAACC,aAAD,EAAgBC,WAAhB,EAAgC;AAGxE,kBAAIC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,CAACD,aAA3C;;AACA,kBAAI,CAACE,OAAL,EAAc;AACZ7C,uBAAO,CAAC8C,IAAR,CAAa,MAAb;AACA,iEAAiBC,IAAjB,GAAwB,IAAxB;AAED,eAJD,MAIO;AACL/C,uBAAO,CAAC8C,IAAR,CAAa,QAAb;AACA,iEAAiBC,IAAjB,GAAwB,KAAxB;AACD;;AACD,mBAAI,CAACF,OAAL,GAAeA,OAAf;AACA,qBAAOA,OAAP;AACD,aAdoC,CAA1B,CAAX;AAiBQ,iBAAAG,uBAAA,GAAmC,KAAnC;AAuBNC,oBAAQ,CAACC,aAAT,CAAuB,MAAvB,KAAkCD,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,gBAA/B,CAAgD,OAAhD,uEAAyD;AAAA;AAAA;AAAA;AAAA;AACzF,0BAAI,iCAAI,IAAI,CAAC,KAAI,CAACH,uBAAlB,EAA2C;AACzC,6BAAI,CAACT,WAAL,CAAiBa,KAAjB,GADyC,CAEzC;;;AACApD,+BAAO,CAACqD,GAAR,CAAY,gBAAZ;;AACA,6BAAI,CAACC,YAAL;;AACA,6BAAI,CAACN,uBAAL,GAA+B,IAA/B;AACA,uEAAeI,KAAf;AACD,uBAPD,MAOO,IAAI,KAAI,CAACJ,uBAAT,EAAkC;AACvChD,+BAAO,CAACqD,GAAR,CAAY,qBAAZ;AACD,uBAFM,MAEA;AAELrD,+BAAO,CAACC,KAAR,CAAc,iBAAd;AACD;;AAbwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzD,GAAlC;AAiBA,iBAAKsD,cAAL,GAAsBhB,WAAW,CAACiB,KAAZ,EAAtB;AAEA,iBAAKC,cAAL,GAAqBlB,WAAW,CAACiB,KAAZ,EAArB;AACA,iBAAKE,eAAL,GAAuBnB,WAAW,CAACiB,KAAZ,EAAvB;AACA,iBAAKC,cAAL,CAAoBE,aAApB;AACA,iBAAKJ,cAAL,CAAoBI,aAApB;AACA,iBAAKD,eAAL,CAAqBC,aAArB;AACA,iBAAKD,eAAL,CAAqBE,MAArB,CAA4B1C,KAA5B,IAAqC,EAArC;AACA,iBAAK2C,SAAL,GAAiB,KAAKvB,kBAAL,CAAwBwB,SAAxB,EAAjB;AACA,iBAAKC,SAAL,GAAiB,KAAKzB,kBAAL,CAAwB0B,SAAxB,EAAjB;AACA,iBAAKC,OAAL,GAAe,KAAK3B,kBAAL,CAAwB4B,OAAxB,EAAf;AACD;;AA1EH;AAAA;AAAA,6CAsCmBC,QAtCnB,EAsC2B;AACvB,qBAAO,KAAK1B,QAAL,CAAc2B,SAAd,CAAwBD,QAAxB,CAAP;AACD;AAxCH;AAAA;AAAA,gDA4EsB;AAAA;;AAClB,mBAAKE,SAAL,CAAe,CAAf,EAAkB,YAAM;AACtB,oBAAI,CAAC,MAAI,CAACC,SAAV,EACE,MAAI,CAACA,SAAL,GAAiBC,UAAU,CAAC,MAAI,CAAChB,cAAN,EAAsB,MAAI,CAACjB,kBAAL,CAAwBkC,eAAxB,EAAtB,EAAiE,GAAjE,CAA3B;AACH,eAHD;AAID;AAjFH;AAAA;AAAA,gDAmFsB;AAAA;;AAClB,mBAAKH,SAAL,CAAe,CAAf,EAAkB,YAAM;AACtB,oBAAI,CAAC,MAAI,CAACI,SAAV,EACE,MAAI,CAACA,SAAL,GAAiBF,UAAU,CAAC,MAAI,CAACd,cAAN,EAAsB,MAAI,CAACnB,kBAAL,CAAwBoC,eAAxB,EAAtB,EAAiE,GAAjE,CAA3B;AACH,eAHD;AAID;AAxFH;AAAA;AAAA,sCA0FoBC,WA1FpB,EA0FiCC,QA1FjC,EA0F2C;AACvC,qBAAOD,WAAW,GAAG,CAArB,EAAwB;AACtB3E,uBAAO,CAACqD,GAAR,CAAY,yBAAZ;;AACA,oBAAI;AACFsB,6BAAW;AACXC,0BAAQ;AACT,iBAHD,CAGE,OAAO7E,CAAP,EAAU;AACVC,yBAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;AACF;AApGH;AAAA;AAAA,uCAsGa;AACT8E,kBAAI,CAAC,KAAKnB,eAAN,EAAuB,KAAKG,SAA5B,EAAuC,GAAvC,CAAJ;AACD;AAxGH;AAAA;AAAA,uCA0Ga;AACTgB,kBAAI,CAAC,KAAKnB,eAAN,EAAuB,KAAKK,SAA5B,EAAuC,GAAvC,CAAJ;AACD;AA5GH;AAAA;AAAA,qCA8GW;AACPc,kBAAI,CAAC,KAAKnB,eAAN,EAAuB,KAAKO,OAA5B,EAAqC,GAArC,CAAJ;AACD;AAhHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAmHW,KAAKa,gBAAL,CAAsB,KAAKR,SAA3B,EAAsC,KAAKf,cAA3C,CAnHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAuHgCwB,QAvHhC,EAuHyDC,UAvHzD;AAAA;AAAA;AAAA;AAAA;AAwHIhF,+BAAO,CAACqD,GAAR,CAAY,mBAAZ;;AAxHJ,6BAyHQ,KAAK4B,eAzHb;AAAA;AAAA;AAAA;;AA0HM,6BAAKA,eAAL,CAAqBC,IAArB,GAA4B,KAA5B;AACA,6BAAKD,eAAL,CAAqBlC,IAArB,GAA4B,IAA5B;AA3HN;AAAA,+BA4HY,KAAKkC,eAAL,CAAqBE,IAArB,CAA0B,0CAA1B,CA5HZ;;AAAA;AA6HM,6BAAKC,iBAAL,CAAuBxB,MAAvB,CAA8B1C,KAA9B,IAAqC,GAArC;;AA7HN;AA+HI6D,gCAAQ,CAACG,IAAT,GAAgB,IAAhB;AACA,6BAAKD,eAAL,GAAuBF,QAAvB;AACA,6BAAKK,iBAAL,GAAyBJ,UAAzB;AACA,6BAAKI,iBAAL,CAAuBxB,MAAvB,CAA8B1C,KAA9B,GAAoC,CAAC,EAArC;AAlIJ,0DAmIW6D,QAAQ,CAAC3B,KAAT,EAnIX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAsIkCiC,KAtIlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DA2IW,KAAKP,gBAAL,CAAsB,KAAKL,SAA3B,EAAsC,KAAKhB,cAA3C,CA3IX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0CA+IgB;AACZ,mBAAKjB,eAAL,CAAqB8C,IAArB;AACD;AAjJH;AAAA;AAAA,2CAmJiB;AACb,mBAAK9C,eAAL,CAAqB8C,IAArB,CAA0B,IAA1B;AAED;AAtJH;AAAA;AAAA,0CAwJa;AACT,kBAAI,KAAKhB,SAAT,EAAoB;AAClB,qBAAKA,SAAL,CAAeiB,OAAf;AACD;;AACD,kBAAI,KAAKd,SAAT,EAAoB;AAClB,qBAAKA,SAAL,CAAec,OAAf;AACD;;AACD,mBAAKtB,OAAL,CAAasB,OAAb;AACA,mBAAKxB,SAAL,CAAewB,OAAf;AACA,mBAAK1B,SAAL,CAAe0B,OAAf;AACA,mBAAKH,iBAAL,CAAuBG,OAAvB;AACD;AAnKH;;AAAA;AAAA;;;2BAGalD,Y,EAAY,gI,EAAA,iH;AAAA,S;;;iBAAZA,Y;AAAY,mBAAZA,YAAY,K;AAAA,sBAFX;;;OADd;;;;;wEAGaA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVmD,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;AAmKlB,eAASjB,UAAT,CAAoBS,UAApB,EAAgCS,SAAhC,EAAgE;AAAA,YAATC,KAAS,uEAAD,CAAC;AACrE,YAAIC,aAAa,GAAG,iEAAiBC,aAAjB,CAA+BH,SAA/B,CAApB;AACA,YAAII,KAAK,GAAG,CAAZ;AAEA,YAAIC,IAAI,GAAG,IAAI,yCAAJ,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAsB;AAC7C,cAAIC,QAAQ,GAAG,4DAAYC,QAAZ,CAAqBF,IAAI,CAAC9E,KAA1B,IAAmCwE,KAAlD;AACAV,oBAAU,CAACmB,oBAAX,CAAgCH,IAAI,CAACI,IAArC,EAA2CJ,IAAI,CAAC9E,KAAhD,EAAuD,MAAM2E,KAA7D;AACAA,eAAK,IAAII,QAAT,CAH6C,CAI7C;AACD,SALU,EAKRN,aAAa,CAACxF,GAAd,CAAkB,UAAC6F,IAAD;AAAA,iBAAU,CAAC,CAAD,EAAIA,IAAJ,CAAV;AAAA,SAAlB,CALQ,CAAX;AAMAF,YAAI,CAACZ,IAAL,GAAY,IAAZ;AACA,eAAOY,IAAP;AACD;;AAEM,eAASjB,IAAT,CAAcG,UAAd,EAA0BS,SAA1B,EAA4D;AAAA,YAAXC,KAAW,uEAAH,CAAG;AACjE,YAAIC,aAAa,GAAG,iEAAiBC,aAAjB,CAA+BH,SAA/B,CAApB;AACA,YAAIY,GAAG,GAAG,0CAAV;AACArB,kBAAU,CAACrB,aAAX;;AACA,aAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BX,uBAAa,CAACzG,OAAd,CAAsB,UAACqH,CAAD,EAAO;AAC3BF,eAAG,GAAG,gEAAgBG,QAAhB,CAAyBxB,UAAzB,EAAqCuB,CAArC,EAAwCF,GAAxC,EAA6CX,KAA7C,CAAN;AACD,WAFD;AAGD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtMD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;ACiEM;;AACE;;AACE;;AAAuC;;AAC3C;;;;;;AADI;;AAAA;;;;AD3DV;AAAA;AAAA;AAAA,YAuBae,aAvBb;AA+BE,iCAAoBC,MAApB,EACoBC,iBADpB,EAEoBC,YAFpB,EAEgD;AAAA;;AAF5B,iBAAAF,MAAA,GAAAA,MAAA;AACA,iBAAAC,iBAAA,GAAAA,iBAAA;AACA,iBAAAC,YAAA,GAAAA,YAAA;AACnB;;AAlCH;AAAA;AAAA,uCAoCU;AAAA;;AACN,mBAAKC,sBAAL,GAA8B,KAAKF,iBAAL,CAAuBG,SAAvB,GAAmC1C,SAAnC,CAA6C,UAAC2C,MAAD,EAAY;AACrF,sBAAI,CAACC,UAAL,GAAkBD,MAAlB;AACD,eAF6B,CAA9B;AAGA,mBAAKH,YAAL,CAAkBK,iBAAlB;AACD;AAzCH;AAAA;AAAA,uCA2Ca;AACT,mBAAKL,YAAL,CAAkBM,QAAlB;AACA,mBAAKC,YAAL,CAAkBC,IAAlB;AACD;AA9CH;AAAA;AAAA,yCAgDe;AACX,mBAAKV,MAAL,CAAYW,aAAZ,CAA0B,QAA1B;AACD;AAlDH;AAAA;AAAA,6CAoDmB;AAEf,mBAAKT,YAAL,CAAkBM,QAAlB;AACA,mBAAKI,kBAAL,CAAwBF,IAAxB;AACD;AAxDH;AAAA;AAAA,4CA0DkB;AACd,mBAAKT,iBAAL,CAAuBY,SAAvB,CAAiC;AAACjI,oBAAI,EAAC;AAAN,eAAjC,EAA+CkI,IAAI,CAACC,MAAL,KAAc,GAA7D;AACD;AA5DH;AAAA;AAAA,0CA8Da;AACT,mBAAKZ,sBAAL,IAA+B,KAAKA,sBAAL,CAA4Ba,WAA5B,EAA/B;AACD;AAhEH;AAAA;AAAA,8CAkEiB;AACb,mBAAKd,YAAL,CAAkBe,aAAlB;AACD;AApEH;;AAAA;AAAA;;;2BAuBalB,a,EAAa,uH,EAAA,8I,EAAA,0I;AAAA,S;;;gBAAbA,a;AAAa,mC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B1B;;AACE;;AAIC;;AAiCD;;AAAA;;AACF;;AACA;;AACE;;AACK;AAAA,uBAAS,IAAAmB,QAAA,EAAT;AAAmB,eAAnB;;AAAqB;;AAC1B;;AACA;;AACK;AAAA,uBAAS,IAAAC,cAAA,EAAT;AAAyB,eAAzB;;AAA2B;;AAChC;;AACA;;AACK;AAAA;;AAAA;;AAAS,oBAAAC,aAAA;AAAe,uBAAC,UAAD;AAAsB,eAA9C;;AAAgD;;AACrD;;AACA;;AACK;AAAA,uBAAS,IAAAC,UAAA,EAAT;AAAqB,eAArB;;AAAuB;;AAC5B;;AACF;;AACA;;AAAiC;AAAA;;AAAA;;AAAA,uBAAS,UAAT;AAAmC,eAAnC;;AAC/B;;AACA;;AAEG;;AAAM;;AAAS;;AAChB;;AACA;;AAEE;;AACA;;AACA;;AACA;;AAIF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AAA+B;AAAA;;AAAA;;AAAA,uBAAS,UAAT;AAAiC,eAAjC;;AAAmC;;AAAO;;AACzE;;AACE;;AACA;;AACA;;AACF;;AAEA;;;;AAjBW;;AAAA;;AAOoB;;AAAA;;AAIM;;AAAA;;;;;;;ODpErC;;;;;wEAuBatB,a,EAAa;gBAvBzB,uDAuByB;iBAvBf;AACTuB,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,kBAAM,EAAE,gNAWG,4EAAoB,EAXvB,6EAgBO,4EAAoB,CAhB3B;AAHC,W;AAuBe,U;;;;;;;;;AACKC,wBAAc,EAAE,CAAF;kBAA1C,uDAA0C;mBAAhC,gB;AAAgC,WAAE,C;AAClBC,sBAAY,EAAE,CAAF;kBAAtC,uDAAsC;mBAA5B,c;AAA4B,WAAE,C;AACdjB,sBAAY,EAAE,CAAF;kBAAtC,uDAAsC;mBAA5B,c;AAA4B,WAAE,C;AACRG,4BAAkB,EAAE,CAAF;kBAAlD,uDAAkD;mBAAxC,oB;AAAwC,WAAE;;;;;;;;;;;;;;;;;;;AEnCvD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA;AAAA;AAAA;AAAA,YAyBae,mBAzBb;AAAA;AAAA;;;gBAyBaA;;;;6BAAAA,mB;AAAmB,W;AAAA,oBAfrB,CACP,4DADO,EAEP,wEAFO,EAGP,qEAHO,EAIP,sEAJO,CAeqB;;;OAzBhC;;;4HAyBaA,mB,EAAmB;AAAA,yBAxBf,gFAwBe,EAvB5B,yFAuB4B,EAtB5B,sFAsB4B,EArB5B,mFAqB4B,EApB5B,6EAoB4B,EAnB5B,sFAmB4B,EAlB5B,+FAkB4B,EAjB5B,2FAiB4B;AAjBX,oBAGjB,4DAHiB,EAIjB,wEAJiB,EAKjB,qEALiB,EAMjB,sEANiB,CAiBW;AAXf,oBAEH,gFAFG,EAGT,yFAHS,EAIT,sFAJS,EAKT,mFALS,EAMT,6EANS,EAOT,sFAPS,EAQT,+FARS,EASX,2FATW;AAWe,S;AAFT,O;;;;;wEAEVA,mB,EAAmB;gBAzB/B,sDAyB+B;iBAzBtB;AACRnG,wBAAY,EAAE,CAAC,gFAAD,EACZ,yFADY,EAEZ,sFAFY,EAGZ,mFAHY,EAIZ,6EAJY,EAKZ,sFALY,EAMZ,+FANY,EAOZ,2FAPY,CADN;AAURE,mBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,qEAHO,EAIP,sEAJO,CAVD;AAgBND,mBAAO,EAAE,CAAC,gFAAD,EACL,yFADK,EAEL,sFAFK,EAGL,mFAHK,EAIL,6EAJK,EAKL,sFALK,EAML,+FANK,EAOP,2FAPO;AAhBH,W;AAyBsB,U;;;;;;;;;;;;;;;;;;ACxChC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAQ;;;;;;;;AADsB;;AAC9B;;AAAA;;;;ADAJ;AAAA;AAAA;AAAA,YAKamG,iBALb;AAwBE,uCAAc;AAAA;;AAbd,iBAAAC,KAAA,GAAuB,EAAvB;AAcC;;AAzBH;AAAA;AAAA,oCAcU;AAEN,qBAAO,KAAKC,IAAL,GAAY;AACjBC,wBAAQ,EAAE,KAAM,4DAAYvC,QAAZ,CAAqB,KAAKsC,IAAL,CAAUtH,KAA/B,IAAwC,EAA9C,GAAoD,KAD7C;AAEjBwH,qBAAK,EAAE,KAAM,4DAAYxC,QAAZ,CAAqB,KAAKsC,IAAL,CAAUtH,KAA/B,IAAwC,EAA9C,GAAoD,KAF1C;AAIjByH,uBAAO,EAAE;AAJQ,eAAZ,GAKL,EALF;AAMD;AAtBH;AAAA;AAAA,uCA2BU,CACP;AA5BH;AAAA;AAAA,sCA8BY3C,IA9BZ,EA8BuB;AACnB,kBAAIA,IAAI,IAAI,KAAKwC,IAAL,CAAUpC,IAAtB,EAA4B;AAC1B,uBAAO,EAAP;AACD,eAFD,MAEO;AACL,uBAAO;AAACwC,uBAAK,EAAE;AAAR,iBAAP;AACD;AAEF;AArCH;;AAAA;AAAA;;;2BAKaN,iB;AAAiB,S;;;gBAAjBA,iB;AAAiB,wC;AAAA;AAAA;AAAA;AAAA,W;AAAA,kB;AAAA,iB;AAAA,uD;AAAA;AAAA;ACR9B;;AACE;;AAAK;;AAAe;;AACpB;;AAIF;;;;AANK;;AACE;;AAAA;;AACA;;AAAA;;;;;;;ODCP;;;;;wEAKaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTN,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTY,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;AAI5BL,cAAI,EAAE,CAAF;kBADH;AACG,WAAE,C;AAEND,eAAK,EAAE,CAAF;kBADJ;AACI,WAAE;;;;;;;;;;;;;;;;;;;AEdT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA;AAAA;AAAA;AAAA,YAKaO,kBALb;AAOE,sCAAoBC,cAApB,EACoBnC,YADpB,EACgD;AAAA;;AAD5B,iBAAAmC,cAAA,GAAAA,cAAA;AACA,iBAAAnC,YAAA,GAAAA,YAAA;AAMpB,iBAAA5B,UAAA,GAAa,IAAI,0CAAJ,GAAiBrB,aAAjB,EAAb;AACA,iBAAAqF,WAAA,GAAc,IAAI,0CAAJ,GAAiBrF,aAAjB,EAAd;AANC;;AATH;AAAA;AAAA,uCAiBU,CACP;AAlBH;AAAA;AAAA,gDAoBsB;AAClB,mBAAKsF,WAAL,CAAiB,KAAKF,cAAL,CAAoBvE,eAApB,EAAjB,EAAwD,KAAKQ,UAA7D;AACD;AAtBH;AAAA;AAAA,gDAwBsB;AAClB,mBAAKiE,WAAL,CAAiB,KAAKF,cAAL,CAAoBrE,eAApB,EAAjB,EAAwD,KAAKsE,WAA7D;AACD;AA1BH;AAAA;AAAA,oCA4BU;AACN,mBAAKE,WAAL,CAAiB/D,IAAjB,CAAsB,0CAAtB;AACA,mBAAKgE,iBAAL,CAAuBvF,MAAvB,CAA8B1C,KAA9B,GAAoC,CAAC,GAArC;AAED;AAhCH;AAAA;AAAA,mCAkCS;AACL,mBAAKgI,WAAL,CAAiB9F,KAAjB;AACD;AApCH;AAAA;AAAA,oCAsCU;AACN,kBAAI,KAAK8F,WAAT,EAAsB;AACpB,qBAAKA,WAAL,CAAiB/D,IAAjB;AACD;AACF;AA1CH;AAAA;AAAA,wCA4CciE,YA5Cd,EA4C4BpE,UA5C5B,EA4CwC;AACpChF,qBAAO,CAACqD,GAAR,CAAY,aAAZ;AACA,mBAAKgG,qBAAL,GAA6BD,YAA7B;AACA,mBAAKE,KAAL;AACA,mBAAKJ,WAAL,GAAmB,0FAAWlE,UAAX,EAAuB,KAAKqE,qBAA5B,CAAnB;AACA,mBAAKF,iBAAL,GAAuBnE,UAAvB;AACA,mBAAKmE,iBAAL,CAAuBvF,MAAvB,GAA8B,CAAC,EAA/B;AACA,mBAAKgD,YAAL,CAAkB9B,gBAAlB,CAAmC,KAAKoE,WAAxC,EAAqDlE,UAArD;AACD;AApDH;;AAAA;AAAA;;;2BAKa8D,kB,EAAkB,iK,EAAA,oJ;AAAA,S;;;gBAAlBA,kB;AAAkB,yC;AAAA,mB;AAAA,iB;AAAA,mL;AAAA;AAAA;ACX/B;;AACE;;AAAsC;;AAAkB;;AAC1D;;AACA;;AACE;;AACE;;AAAG;;AACH;;AACA;;AAAG;;AAAmD;;AACtD;;AAAG;;AAAQ;;AACb;;AACF;;AACA;;AACE;;AACM;AAAA,uBAAS,IAAA7B,iBAAA,EAAT;AAA4B,eAA5B;;AAA8B;;AAAU;;AAC9C;;AACM;AAAA,uBAAS,IAAAsC,iBAAA,EAAT;AAA4B,eAA5B;;AAA8B;;AAAkB;;AACxD;;AACA;;AACE;;AAAqB;AAAA,uBAAS,IAAAC,KAAA,EAAT;AAAgB,eAAhB;;AAAkB;;AAAK;;AAC5C;;AAAqB;AAAA,uBAAS,IAAA3E,IAAA,EAAT;AAAe,eAAf;;AAAiB;;AAAI;;AAC5C;;AACA;;AACE;;AACA;;AACF;;;;AADsB;;AAAA;;;;;;;ODjBtB;;;;;wEAKaiE,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTd,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTY,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA;AAAA;AAAA;AAAA,YAGaY,2BAHb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gCAUe;AACX,kBAAIC,cAAc,GAAG,CAAC,KAAKC,OAAL,GAAe,KAAKA,OAApB,GAA8B,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,WAAxB,GAAsC,GAArE,EAA0EC,KAA1E,CAAgF,IAAhF,CAArB;AACA9J,qBAAO,CAACqD,GAAR,CAAY,gBAAZ;AACArD,qBAAO,CAACqD,GAAR,CAAYqG,cAAZ;AACA,qBAAO;AACLK,0BAAU,EAAE,UAAUL,cAAc,CAAC,CAAD,CAAd,CAAkB9H,MADnC;AAELoI,uBAAO,EAAE,UAAUN,cAAc,CAAC9H;AAF7B,eAAP;AAID;AAlBH;;AAAA;AAAA;;;2BAGa6H,2B;AAA2B,S;;;gBAA3BA,2B;AAA2B,wD;AAAA;AAAA;qFACxBQ,W,EAAW,I;;;;;;;;;;;;;;;;;;;;OAJ3B;;;;;wEAGaR,2B,EAA2B;gBAHvC,uDAGuC;iBAH7B;AACTzB,oBAAQ,EAAE;AADD,W;AAG6B,U;AAEtC4B,eAAK,EAAE,CAAF;kBADJ,0DACI;mBADSK,W;AACT,WAAE,C;AAEAN,iBAAO,EAAE,CAAF;kBADb;AACa,WAAE,C;AAGZO,mBAAS;kBADZ,yDACY;mBADA,O;AACA;;;;;;;;;;;;;;;;;;;AChBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA,YAKaC,kBALb;AAYE,wCAAc;AAAA;;AALd,iBAAAC,IAAA,GAAe,CAAf;AACA,2BAAe,GAAf;AAKC;;AAbH;AAAA;AAAA,uCAea;AACT,mBAAKC,IAAL,GAAY,EAAZ;;AAEA,mBAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8D,IAAzB,EAA+B9D,CAAC,EAAhC;AACE,qBAAK+D,IAAL,IAAa,YAAb;AADF;AAED;AApBH;;AAAA;AAAA;;;2BAKaF,kB;AAAkB,S;;;gBAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,W;AAAA,kB;AAAA,iB;AAAA;AAAA;ACP/B;;;;AAAA;;;;;;ODEA;;;;;wEAKaA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTnC,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTY,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;AAE7BuB,cAAI,EAAE,CAAF;kBADH;AACG,WAAE;;;;;;;;;;;;;;;;;;;AETR;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;AAAA,YAKaE,oBALb;AASE,0CAAc;AAAA;;AAFd,iBAAAC,2BAAA,GAA8B,sGAA9B;AAGC;;AAVH;AAAA;AAAA,uCAYU,CACP;AAbH;;AAAA;AAAA;;;2BAKaD,oB;AAAoB,S;;;gBAApBA,oB;AAAoB,2C;AAAA,iC;AAAA,kB;AAAA,iB;AAAA,uI;AAAA;AAAA;;;AAHpB;;AAAkJ;;AAAyB;;;;AAAzG,uGAA+B,gBAA/B,EAA+B,+BAA/B;;;;;;;OAF/E;;;;;wEAKaA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTtC,oBAAQ,EAAE,kBADD;AAETwC,oBAAQ,EAAE,oLAFD;AAGT3B,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;ACPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAI4B,QAAQ,GAAG,KACb,iBADa,GAEb,mBAFa,GAGb,iBAHa,GAIb,mBAJa,GAKb,kBALa,GAMb,kBANa,GAOb,iBAPF;AAQO,UAAIC,iBAAiB,GAAG,gFAAwBD,QAAxB,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,CAAxB;AAGP,UAAIE,YAAY,GAAG,KACjB,UADiB,GAEjB,YAFiB,GAGjB,UAHiB,GAIjB,SAJF;AAKO,UAAIC,qBAAqB,GAAG,gFAAwBD,YAAxB,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CAA5B;AAEP,UAAIE,UAAU,GAAG,KACf,OADe,GAEf,OAFe,GAGf,KAHF;AAIO,UAAIC,eAAe,GAAG,gFAAwBD,UAAxB,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,CAAtB;AAEP,UAAIE,MAAM,GAAG,KACX,OADW,GAEX,OAFW,GAGX,KAHF;AAIO,UAAIC,eAAe,GAAG,gFAAwBD,MAAxB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,CAAtB;AAEP,UAAIE,gBAAgB,GAAG,KACrB,OADqB,GAErB,OAFqB,GAGrB,KAHF;AAIO,UAAIC,mBAAmB,GAAG,gFAAwBD,gBAAxB,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAA1B;AAEP,UAAIE,eAAe,GAAG,KACpB,OADoB,GAEpB,OAFoB,GAGpB,KAHF;AAIO,UAAIC,kBAAkB,GAAG,gFAAwBD,eAAxB,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,CAAzB;AAEP,UAAIE,eAAe,GAAG,KACpB,OADoB,GAEpB,OAFoB,GAGpB,KAHF;AAIO,UAAId,2BAA2B,GAAG,gFAAwBc,eAAxB,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,CAAlC;AAEP,UAAIC,cAAc,GAAG,KACnB,OADmB,GAEnB,OAFmB,GAGnB,KAHF;AAIO,UAAIC,0BAA0B,GAAG,gFAAwBD,cAAxB,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,CAAjC;AAGP,UAAIE,gBAAgB,GAAG,KACrB,YADqB,GAErB,YAFqB,GAGrB,WAHqB,GAIrB,YAJqB,GAKrB,UALF;AAMO,UAAIC,yBAAyB,GAAG,gFAAwBD,gBAAxB,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAAhC;AAEP,UAAIE,oBAAoB,GAAG,KACzB,8BADyB,GAEzB,gCAFyB,GAGzB,gCAHyB,GAIzB,gCAJyB,GAKzB,gCALyB,GAMzB,+BANyB,GAOzB,+BAPyB,GAQzB,8BARyB,GASzB,8BATyB,GAUzB,8BAVyB,GAWzB,gCAXyB,GAYzB,gCAZyB,GAazB,gCAbyB,GAczB,4BAdF;AAiBA,UAAIC,mBAAmB,GAAG,KACxB,8BADwB,GAExB,gCAFwB,GAGxB,gCAHwB,GAIxB,gCAJwB,GAKxB,gCALwB,GAMxB,+BANwB,GAOxB,+BAPwB,GAQxB,8BARwB,GASxB,8BATwB,GAUxB,8BAVwB,GAWxB,gCAXwB,GAYxB,gCAZwB,GAaxB,gCAbwB,GAcxB,4BAdF;AAgBA,UAAIC,eAAe,GAAG,KACpB,6BADoB,GAEpB,+BAFoB,GAGpB,+BAHoB,GAIpB,+BAJoB,GAKpB,+BALoB,GAMpB,8BANoB,GAOpB,8BAPoB,GAQpB,8BARoB,GASpB,8BAToB,GAUpB,8BAVoB,GAWpB,+BAXoB,GAYpB,+BAZoB,GAapB,+BAboB,GAcpB,2BAdF;AAiBA,UAAIC,sBAAsB,GAAG,CAA7B;AACA,UAAIC,oBAAoB,GAAG,EAA3B;AACA,UAAIC,uBAAuB,GAAG,CAA9B;AACA,UAAIC,qBAAqB,GAAG,CAA5B;AACO,UAAIC,yBAAyB,GAAG,gFAAwBP,oBAAxB,EAA8CG,sBAA9C,EAAsEC,oBAAtE,EAA4FC,uBAA5F,EAAqHC,qBAArH,CAAhC;AAGP,UAAIE,mBAAmB,GAAG,KACxB,kCADwB,GAExB,oCAFwB,GAGxB,oCAHwB,GAIxB,oCAJwB,GAKxB,oCALwB,GAMxB,mCANwB,GAOxB,mCAPwB,GAQxB,mCARwB,GASxB,mCATwB,GAUxB,mCAVwB,GAWxB,mCAXwB,GAYxB,oCAZwB,GAaxB,oCAbwB,GAcxB,oCAdwB,GAexB,gCAfF;AAgBA,UAAIC,oBAAoB,GAAG,KACzB,8BADyB,GAEzB,iCAFyB,GAGzB,iCAHyB,GAIzB,gCAJyB,GAKzB,iCALyB,GAMzB,gCANyB,GAOzB,gCAPyB,GAQzB,gCARyB,GASzB,gCATyB,GAUzB,gCAVyB,GAWzB,gCAXyB,GAYzB,iCAZyB,GAazB,iCAbyB,GAczB,iCAdyB,GAezB,4BAfF;AAgBA,UAAIC,iBAAiB,GAAG,KACtB,mCADsB,GAEtB,mCAFsB,GAGtB,mCAHsB,GAItB,mCAJsB,GAKtB,mCALsB,GAMtB,mCANsB,GAOtB,mCAPsB,GAQtB,mCARsB,GAStB,mCATsB,GAUtB,mCAVsB,GAWtB,mCAXsB,GAYtB,mCAZsB,GAatB,mCAbsB,GActB,mCAdsB,GAetB,iCAfF;AAiBA,UAAIC,iBAAiB,GAAG,KACtB,mCADsB,GAEtB,mCAFsB,GAGtB,mCAHsB,GAItB,mCAJsB,GAKtB,mCALsB,GAMtB,mCANsB,GAOtB,oCAPsB,GAQtB,oCARsB,GAStB,oCATsB,GAUtB,oCAVsB,GAWtB,oCAXsB,GAYtB,oCAZsB,GAatB,oCAbsB,GActB,oCAdsB,GAetB,kCAfF;AAiBA,UAAIC,gBAAgB,GAAG,KACrB,kCADqB,GAErB,oCAFqB,GAGrB,oCAHqB,GAIrB,oCAJqB,GAKrB,oCALqB,GAMrB,mCANqB,GAOrB,mCAPqB,GAQrB,oCARqB,GASrB,oCATqB,GAUrB,oCAVqB,GAWrB,oCAXqB,GAYrB,oCAZqB,GAarB,qCAbqB,GAcrB,qCAdqB,GAerB,gCAfF;AAkBA,UAAIC,oBAAoB,GAAG,KACzB,kCADyB,GAEzB,oCAFyB,GAGzB,oCAHyB,GAIzB,qCAJyB,GAKzB,oCALyB,GAMzB,oCANyB,GAOzB,oCAPyB,GAQzB,mCARyB,GASzB,mCATyB,GAUzB,oCAVyB,GAWzB,oCAXyB,GAYzB,oCAZyB,GAazB,oCAbyB,GAczB,oCAdyB,GAezB,gCAfF;AAiBA,UAAIC,yBAAyB,GAAG,KAC9B,8BAD8B,GAE9B,gCAF8B,GAG9B,gCAH8B,GAI9B,gCAJ8B,GAK9B,iCAL8B,GAM9B,gCAN8B,GAO9B,iCAP8B,GAQ9B,+BAR8B,GAS9B,+BAT8B,GAU9B,mCAV8B,GAW9B,iCAX8B,GAY9B,gCAZ8B,GAa9B,4BAbF;AAgBA,UAAIC,yBAAyB,GAAG,KAC9B,6BAD8B,GAE9B,+BAF8B,GAG9B,+BAH8B,GAI9B,gCAJ8B,GAK9B,gCAL8B,GAM9B,+BAN8B,GAO9B,8BAP8B,GAQ9B,6BAR8B,GAS9B,8BAT8B,GAU9B,+BAV8B,GAW9B,iCAX8B,GAY9B,gCAZ8B,GAa9B,+BAb8B,GAc9B,2BAdF;AAgBA,UAAIC,qBAAqB,GAAG,KAC1B,6BAD0B,GAE1B,+BAF0B,GAG1B,+BAH0B,GAI1B,+BAJ0B,GAK1B,+BAL0B,GAM1B,gCAN0B,GAO1B,gCAP0B,GAQ1B,8BAR0B,GAS1B,8BAT0B,GAU1B,gCAV0B,GAW1B,+BAX0B,GAY1B,iCAZ0B,GAa1B,+BAb0B,GAc1B,2BAdF;AAiBA,UAAIC,0BAA0B,GAAG,KAC/B,6BAD+B,GAE/B,6BAF+B,GAG/B,6BAH+B,GAI/B,6BAJ+B,GAK/B,6BAL+B,GAM/B,6BAN+B,GAO/B,6BAP+B,GAQ/B,6BAR+B,GAS/B,6BAT+B,GAU/B,6BAV+B,GAW/B,6BAX+B,GAY/B,6BAZ+B,GAa/B,4BAb+B,GAc/B,wBAdF;AAeA,UAAIC,uBAAuB,GAAG,KAC5B,6BAD4B,GAE5B,+BAF4B,GAG5B,8BAH4B,GAI5B,8BAJ4B,GAK5B,8BAL4B,GAM5B,8BAN4B,GAO5B,8BAP4B,GAQ5B,8BAR4B,GAS5B,8BAT4B,GAU5B,8BAV4B,GAW5B,8BAX4B,GAY5B,8BAZ4B,GAa5B,+BAb4B,GAc5B,2BAdF;AAeA,UAAIC,uBAAuB,GAAG,KAC5B,6BAD4B,GAE5B,+BAF4B,GAG5B,8BAH4B,GAI5B,8BAJ4B,GAK5B,8BAL4B,GAM5B,8BAN4B,GAO5B,8BAP4B,GAQ5B,8BAR4B,GAS5B,8BAT4B,GAU5B,8BAV4B,GAW5B,8BAX4B,GAY5B,8BAZ4B,GAa5B,+BAb4B,GAc5B,2BAdF;AAiBA,UAAIC,iBAAiB,GAAG,KACtB,mCADsB,GAEtB,mCAFsB,GAGtB,mCAHsB,GAItB,mCAJsB,GAKtB,mCALsB,GAMtB,mCANsB,GAOtB,uCAPsB,GAQtB,sCARsB,GAStB,wCATsB,GAUtB,mCAVsB,GAWtB,mCAXsB,GAYtB,mCAZsB,GAatB,mCAbsB,GActB,mCAdsB,GAetB,iCAfF;AAiBO,UAAIC,yBAAyB,GAAG,gFAAwBF,uBAAxB,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,CAAhC;AACA,UAAIG,cAAc,GAAG,CAACH,uBAAD,EAA0BD,uBAA1B,EAAmDF,qBAAnD,EAA0EC,0BAA1E,EAAsGF,yBAAtG,CAArB;AACA,UAAIQ,0BAA0B,GAAGD,cAAc,CAAC7M,GAAf,CAAoB,UAAA+M,CAAC;AAAA,eAAI,gFAAwBA,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAAJ;AAAA,OAArB,CAAjC;AAGA,UAAIC,wBAAwB,GAAG,gFAAwBxB,mBAAxB,EAA6CE,sBAA7C,EAAqEC,oBAArE,EAA2FC,uBAA3F,EAAoHC,qBAApH,CAA/B;AACA,UAAIoB,oBAAoB,GAAG,gFAAwBxB,eAAxB,EAAyCC,sBAAzC,EAAiEC,oBAAjE,EAAuFC,uBAAvF,EAAgHC,qBAAhH,CAA3B;AAEA,UAAIqB,YAAY,GAAQ,KAC7B,YAD6B,GAE7B,YAF6B,GAG7B,YAH6B,GAI7B,YAJ6B,GAK7B,SALK;AAMA,UAAIC,aAAa,GAAQ,KAC9B,WAD8B,GAE9B,WAF8B,GAG9B,WAH8B,GAI9B,WAJ8B,GAK9B,SALK;AAMP,UAAIC,MAAM,GAAG,KACX,kBADW,GAEX,kBAFW,GAGX,oBAHW,GAIX,oBAJW,GAKX,iBALF;AAOA,UAAIC,OAAO,GAAG,KACZ,yBADY,GAEZ,yBAFY,GAGZ,wBAHY,GAIZ,wBAJY,GAKZ,2BALY,GAMZ,yBANY,GAOZ,4BAPY,GAQZ,0BARY,GASZ,wBATF;AAYA,UAAIC,UAAU,GAAG,KACf,2BADe,GAEf,6BAFe,GAGf,4BAHe,GAIf,4BAJe,GAKf,gCALe,GAMf,6BANe,GAOf,+BAPe,GAQf,8BARe,GASf,4BATF;AAWA,UAAIC,YAAY,GAAG,KACjB,4BADiB,GAEjB,4BAFiB,GAGjB,8BAHiB,GAIjB,8BAJiB,GAKjB,6BALiB,GAMjB,6BANiB,GAOjB,4BAPF;AAaO,UAAIC,eAAe,GAAG,gFAAwBD,YAAxB,EAAsC,CAAtC,EAAyC,EAAzC,EAA6C,CAA7C,EAAgD,CAAhD,CAAtB;AAEP,UAAIE,YAAY,GAAI,KAClB,WADkB,GAElB,YAFkB,GAGlB,YAHkB,GAIlB,WAJkB,GAKlB,YALkB,GAMlB,YANkB,GAOlB,SAPF;AAQO,UAAIC,wBAAwB,GAAG,gFAAwBD,YAAxB,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CAA/B;AAEP5N,aAAO,CAACqD,GAAR,CAAYsK,eAAZ;;;;;;;;;;;;;;;;AC3ZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAIG,gBAAgB,GAAG,6CAAaC,KAAb,CAAmBC,SAAnB,CAA6BC,MAA7B,CAAoCC,UAA3D;;AAEA;AAAA;AAAA;AAAA,YAGaC,kBAHb;AAKE,sCAAoBzH,MAApB,EACoB0H,kBADpB,EAEoBxH,YAFpB,EAEgD;AAAA;;AAF5B,iBAAAF,MAAA,GAAAA,MAAA;AACA,iBAAA0H,kBAAA,GAAAA,kBAAA;AACA,iBAAAxH,YAAA,GAAAA,YAAA;AAClB,iBAAKyH,eAAL;AACD;;AATH;AAAA;AAAA,qCAYWjE,IAZX,EAYiBkE,UAZjB,EAYmC;AAC/B,kBAAIC,KAAK,GAAGT,gBAAgB,CAACU,uBAAjB,CAAyCpE,IAAzC,EAA+CkE,UAA/C,CAAZ,CAD+B,CACwC;;AACvE,mBAAKF,kBAAL,CAAwBK,SAAxB,CAAkCF,KAAlC;AACA,mBAAK3H,YAAL,CAAkB2C,iBAAlB;AACD;AAhBH;AAAA;AAAA,0CAkBgBa,IAlBhB,EAkBoB;AAChB,kBAAImE,KAAK,GAAG;AAACG,qBAAK,EAAEZ,gBAAgB,CAACa,qBAAjB,CAAuCb,gBAAgB,CAACc,kBAAjB,CAAoCxE,IAApC,CAAvC;AAAR,eAAZ;AACA,mBAAKgE,kBAAL,CAAwBK,SAAxB,CAAkCF,KAAlC;AACA,mBAAK7H,MAAL,CAAYW,aAAZ,CAA0B,OAA1B;AACD;AAtBH;AAAA;AAAA,8CAwBiB;AACb,kBAAIkH,KAAK,GAAGT,gBAAgB,CAACe,gBAAjB,EAAZ;AACA,mBAAKT,kBAAL,CAAwBK,SAAxB,CAAkCF,KAAlC;AACD;AA3BH;;AAAA;AAAA;;;2BAGaJ,kB,EAAkB,8G,EAAA,gI,EAAA,yH;AAAA,S;;;iBAAlBA,kB;AAAkB,mBAAlBA,kBAAkB,K;AAAA,sBAFjB;;;OADd;;;;;wEAGaA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACV3I,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACf/B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMsJ,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWM;;AAGK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAIL;;;;;;;;AAHK,6GAA+B,SAA/B,EAA+B,wBAA/B;;;;ADHX,UAAIC,kBAAkB,GAAG,sDAAMC,OAAN,CAAc,CAAC,aAAD,EACrC,8BADqC,EAErC,EAFqC,EAGrC;AACA,mGAJqC,EAKrC;AACA;AAEA,6EARqC,EASrC,gCATqC,EAUrC,0CAVqC,EAWrC,iDAXqC,EAYrC,4FAZqC,CAAd,CAAzB;;AAgBA;AAAA;AAAA;AAAA,YAUaC,iBAVb;AAgBE,qCAAmBC,kBAAnB,EACmBC,aADnB,EAC8D;AAAA;;AAAA;;AAD3C,iBAAAD,kBAAA,GAAAA,kBAAA;AACA,iBAAAC,aAAA,GAAAA,aAAA;;AAkCnB,iBAAAC,aAAA,GAAqB,UAACC,SAAD,EAAoBC,KAApB,EAAqC;AACxD,kBAAI,MAAI,CAACJ,kBAAL,CAAwBK,SAAxB,CAAkC,MAAI,CAACC,IAAvC,CAAJ,EAAkD;AAChD,oBAAI,MAAI,CAACN,kBAAL,CAAwBO,IAAxB,CAA6BJ,SAA7B,CAAJ,EAA6C;AACzCC,uBAAK,CAACI,cAAN;AACD;AACJ,eAJD,MAIO;AACN,sBAAI,CAACC,WAAL,CAAiBL,KAAjB;AACA;AACF,aARD;;AAUA,iBAAAM,OAAA,GAAe,UAACzO,GAAD,EAAS;AACtB,oBAAI,CAAC+N,kBAAL,CAAwBW,IAAxB,CAA6B1O,GAA7B;AACD,aAFD;;AAIA,iBAAAwO,WAAA,GAAmB,UAAC7P,CAAD,EAAc;AAC/B,kBAAI,MAAI,CAACoP,kBAAL,CAAwBY,UAAxB,CAAmC,MAAI,CAACN,IAAxC,CAAJ,EAAmD;AACjD1P,iBAAC,CAAC4P,cAAF;AACD;AACF,aAJD;AA9CC;;AAnBH;AAAA;AAAA,uCAqBU;AACN,kBAAI,CAAC,KAAKF,IAAV,EACE,KAAKA,IAAL,GAAY,EAAZ;AACF,mBAAKO,KAAL,GAAa,+EAAoB,KAAKP,IAAzB,EAA+B,CAA/B,CAAb;AACD;AAzBH;AAAA;AAAA,6CA2BmB;AAAA;;AACf,kBAAIQ,cAAc,qBAAO,qFAAP,CAAlB;;AACA,kBAAIC,UAAU,GAAkB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAAhC,CAFe,CAEoD;;AACnEA,wBAAU,CAAChR,OAAX,CAAmB,UAACoQ,SAAD,EAAuB;AACxC,oBAAIa,IAAI,GAAG,MAAI,CAAChB,kBAAL,CAAwBiB,MAAxB,CAA+B,MAAI,CAACJ,KAApC,EAA2CV,SAAS,CAACe,WAAV,EAA3C,CAAX;;AACAJ,8BAAc,CAACX,SAAS,GAAG,aAAb,CAAd,GAA4C,UAA5C;;AACA,oBAAIa,IAAJ,EAAU;AACRF,gCAAc,CAACX,SAAS,GAAG,aAAb,CAAd,GAA4C,aAA5C;;AACA,sBAAIa,IAAI,CAACnP,GAAT,EAAc;AACZiP,kCAAc,CAACX,SAAS,GAAG,UAAb,CAAd,GAAyC,2FAA0BA,SAAS,GAAG,UAAtC,EAAkD5Q,OAAlD,CAA0D,GAA1D,EAA+DyR,IAAI,CAAC7Q,IAApE,CAAzC,CADY,CACsG;AACnH,mBAFD,MAEO;AACL2Q,kCAAc,CAACX,SAAS,GAAG,UAAb,CAAd,GAAyC,0FAAyBA,SAAS,GAAG,UAArC,CAAzC;AACD;;AACDW,gCAAc,CAACX,SAAS,GAAG,SAAb,CAAd,GAAwC,MAAI,CAACgB,cAAL,CAAoBH,IAApB,CAAxC;AACD;AACF,eAZD;AAcA,qBAAOF,cAAP;AACD;AA7CH;AAAA;AAAA,+CA+CqB;AACjB,qBAAOjB,kBAAkB,CAAC,CAAC,KAAKgB,KAAL,CAAWO,CAAX,GAAe,KAAKP,KAAL,CAAWQ,CAAX,GAAe,CAA/B,IAAoCxB,kBAAkB,CAACpN,MAAxD,CAAzB;AACD;AAjDH;AAAA;AAAA,sCAuEYR,GAvEZ,EAuEsB;AAClB,qBAAO,KAAKgO,aAAL,CAAmBqB,SAAnB,CAA6BrP,GAA7B,CAAP;AACD;AAzEH;AAAA;AAAA,2CA2EiBA,GA3EjB,EA2E2B;AACvB,kBAAIA,GAAG,CAAC9B,IAAJ,IAAY,OAAhB,EACE,OAAO,YAAP;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,IAAY,MAAhB,EACE,OAAO,UAAP;AACF,kBAAI8B,GAAG,CAACJ,GAAR,EACE,OAAO,iBAAiBI,GAAG,CAAC9B,IAA5B;AACF,kBAAI8B,GAAG,CAACsP,WAAR,EACE,OAAO,MAAP;AACF,kBAAItP,GAAG,CAACuP,SAAR,EACE,OAAO,KAAP;AACF,qBAAO,SAASvP,GAAG,CAAC9B,IAApB;AAED;AAxFH;AAAA;AAAA,8CA0FoB;AAChB,qBAAO,KAAK6P,kBAAL,CAAwByB,YAAxB,CAAqC,KAAKZ,KAA1C,CAAP;AACD;AA5FH;;AAAA;AAAA;;;2BAUad,iB,EAAiB,iJ,EAAA,yK;AAAA,S;;;gBAAjBA,iB;AAAiB,wC;AAAA;AAAA;AAAA,W;AAAA,kB;AAAA,iB;AAAA,6c;AAAA;AAAA;ACtC9B;;AAQE;;AAAyB;AAAA,uBAAS,IAAAU,WAAA,QAAT;AAA6B,eAA7B;;AACvB;;AAA0C;;AAAsB;;AAChE;;AACE;;AAQF;;AAEF;;AACF;;;;AArBK,+GAAmC,aAAnC,EAAmC,iBAAnC,EAAmC,SAAnC,EAAmC,CAAnC,EAAmC,SAAnC,EAAmC,CAAnC,EAAmC,MAAnC,EAAmC,MAAnC;;AAQyC;;AAAA;;AAGnC;;AAAA;;;;;;;ODgBX;;;;;wEAUaV,iB,EAAiB;gBAV7B,uDAU6B;iBAVnB;AACTlH,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTY,qBAAS,EAAE,CAAC,2BAAD,CAHF;AAITX,kBAAM,EAAE,oEAEQ,sEAAc,CAFtB;AAJC,W;AAUmB,U;;;;;;;AAG5BuH,cAAI;kBADH;AACG;;;;;;;;;;;;;;;;;;;AEzCN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;AAGA,UAAMoB,WAAW,GAAG;AAClBC,WAAG,EAAE,MADa;AAElBC,cAAM,EAAE,MAFU;AAGlBC,YAAI,EAAE,MAHY;AAIlBC,aAAK,EAAE,MAJW;AAKlBC,iBAAS,EAAE,MALO;AAMlBC,oBAAY,EAAE,MANI;AAOlBC,kBAAU,EAAE,MAPM;AAQlBC,mBAAW,EAAE,MARK;AASlBzI,aAAK,EAAE,SATW;AAUlB0I,gBAAQ,EAAE,SAVQ;AAWlBC,iBAAS,EAAE;AAXO,OAApB;;AAeA,eAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,YAAMC,UAAU,GAAG,EAAnB;;AAEA,aAAK,IAAI1Q,GAAT,IAAgB6P,WAAhB,EAA6B;AAC3Ba,oBAAU,CAAC1Q,GAAD,CAAV,GAAkB,QAAQyQ,QAAR,GAAmB,EAAnB,GAAwBzQ,GAAxB,GAA8B,KAAhD;AACD;;AACD,eAAO,kEAAM0Q,UAAN,CAAP;AACD;;AAED,eAASC,qBAAT,CAA+BF,QAA/B,EAAyC;AACvC,YAAMC,UAAU,GAAG,EAAnB;;AAEA,aAAK,IAAI1Q,GAAT,IAAgB6P,WAAhB,EAA6B;AAC3Ba,oBAAU,CAAC,KAAKD,QAAL,GAAgB,EAAhB,GAAqBzQ,GAAtB,CAAV,GAAuC6P,WAAW,CAAC7P,GAAD,CAAlD;AACD;;AAED,eAAO0Q,UAAP;AACD;;AAGD;AAAA;AAAA;AAAA,YAsBaE,gBAtBb;AAgCE,sCAAc;AAAA;;AARP,iBAAAC,QAAA,GAAgB,EAAhB;AAEA,iBAAAC,SAAA,GAAiB,EAAjB;AAEA,iBAAAC,gBAAA,GAAmB,KAAnB;AAEA,iBAAAC,MAAA,GAAS,KAAT;AAGN;;AAjCH;AAAA;AAAA,uCAmCU;AACN,mBAAKC,WAAL;AACD;AArCH;AAAA;AAAA,0CAuCa,CAGV;AA1CH;AAAA;AAAA,mCA6CS;AACL,mBAAKD,MAAL,GAAc,IAAd;AACD;AA/CH;AAAA;AAAA,oCAiDU;AACN,mBAAKA,MAAL,GAAc,KAAd;AACD;AAnDH;AAAA;AAAA,6CAqDmBE,MArDnB,EAqDgC,CAC7B;AAtDH;AAAA;AAAA,6CAwDmB;AACf,kBAAMC,MAAM,GAAG,EAAf;;AAEA,mBAAK,IAAInR,GAAT,IAAgB6P,WAAhB,EAA6B;AAC3BsB,sBAAM,CAAC,cAAcnR,GAAf,CAAN,GAA4B,KAAK6Q,QAAL,CAAc7Q,GAAd,IAAqB,KAAK6Q,QAAL,CAAc7Q,GAAd,CAArB,GAA0C6P,WAAW,CAAC7P,GAAD,CAAjF;AACAmR,sBAAM,CAAC,eAAenR,GAAhB,CAAN,GAA6B,KAAK8Q,SAAL,CAAe9Q,GAAf,IAAsB,KAAK8Q,SAAL,CAAe9Q,GAAf,CAAtB,GAA4C6P,WAAW,CAAC7P,GAAD,CAApF;AAED;;AACD,qBAAOmR,MAAP;AACD;AAjEH;AAAA;AAAA,qCAmEW;AACP,mBAAKH,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;AArEH;AAAA;AAAA,wCAuEc;AACV,eAAC,KAAKD,gBAAN,IAA0B,KAAKK,IAAL,EAA1B;AACD;AAzEH;AAAA;AAAA,yCA2Ee;AACX,eAAC,KAAKL,gBAAN,IAA0B,KAAKM,KAAL,EAA1B;AACD;AA7EH;AAAA;AAAA,oCA+EU;AACN,kBAAI,KAAKN,gBAAT,EAA2B;AACzB,qBAAKO,MAAL;AACD,eAFD,MAEO;AACL,qBAAKD,KAAL;AACD;AACF;AArFH;;AAAA;AAAA;;;2BAsBaT,gB;AAAgB,S;;;gBAAhBA,gB;AAAgB,sC;AAAA;AAAA;AAAA;AAAA;AAAA,W;AAAA,wF;AAAA,iC;AAAA,kB;AAAA,iB;AAAA,gG;AAAA;AAAA;;;AC5D7B;;AACK;AAAA,uBAAa,IAAAW,SAAA,EAAb;AAAwB,eAAxB,EAAyB,UAAzB,EAAyB;AAAA,uBACb,IAAAC,UAAA,EADa;AACD,eADxB,EAAyB,YAAzB,EAAyB;AAAA,uBAEX,IAAAA,UAAA,EAFW;AAEC,eAF1B,EAAyB,WAAzB,EAAyB;AAAA,uBAGZ,IAAAC,KAAA,EAHY;AAGL,eAHpB,EAAyB,kBAAzB,EAAyB;AAAA,uBAKL,IAAAC,gBAAA,QALK;AAKmB,eAL5C,EAAyB,iBAAzB,EAAyB;AAAA,uBAMN,IAAAA,gBAAA,QANM;AAMkB,eAN3C;;AAQH;;AACF;;;;AALK;;;;;uBDqCS,CACV,oEAAQ,WAAR,EAAqB,CACnB;AACA,8EAAM,MAAN,EAAclB,aAAa,CAAC,WAAD,CAA3B,EAA0C;AACxCW,oBAAM,EAAER,qBAAqB,CAAC,WAAD;AADW,aAA1C,CAFmB,EAKnB,kEAAM,OAAN,EAAeH,aAAa,CAAC,YAAD,CAA5B,EAA4C;AAC1CW,oBAAM,EAAER,qBAAqB,CAAC,YAAD;AADa,aAA5C,CALmB,EAQnB,uEAAW,WAAX,EAAwB,CACtB,oEAAQ,IAAR,CADsB,CAAxB,CARmB,EAWnB,uEAAW,YAAX,EAAyB,CACvB,oEAAQ,IAAR,CADuB,CAAzB,CAXmB,CAArB,CADU;;;;OAJd;;;;;wEAsBaC,gB,EAAgB;gBAtB5B,uDAsB4B;iBAtBlB;AACT5J,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTY,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAIT8J,sBAAU,EAAE,CACV,oEAAQ,WAAR,EAAqB,CACnB;AACA,8EAAM,MAAN,EAAcnB,aAAa,CAAC,WAAD,CAA3B,EAA0C;AACxCW,oBAAM,EAAER,qBAAqB,CAAC,WAAD;AADW,aAA1C,CAFmB,EAKnB,kEAAM,OAAN,EAAeH,aAAa,CAAC,YAAD,CAA5B,EAA4C;AAC1CW,oBAAM,EAAER,qBAAqB,CAAC,YAAD;AADa,aAA5C,CALmB,EAQnB,uEAAW,WAAX,EAAwB,CACtB,oEAAQ,IAAR,CADsB,CAAxB,CARmB,EAWnB,uEAAW,YAAX,EAAyB,CACvB,oEAAQ,IAAR,CADuB,CAAzB,CAXmB,CAArB,CADU;AAJH,W;AAsBkB,U;;;AAEpBE,kBAAQ,EAAE,CAAF;kBADd;AACc,WAAE,C;AAEVC,mBAAS,EAAE,CAAF;kBADf;AACe,WAAE,C;AAEXC,0BAAgB;kBADtB;AACsB;;;;;;;;;;;;;;;;;;;AElEzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AACE;;AAA8B;;AAAY;;AAE1C;;AACE;;AACO;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAA4B,QAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,WAA5B;;AADP;;AAIF;;AACF;;;;;;;;AARgC;;AAAA;;AAIrB;;AAAA,wGAA4B,WAA5B,EAA4B,6BAA5B;;;;ADAb;AAAA;AAAA;AAAA,YAUaa,sBAVb;AAmBE,0CAAmBxD,aAAnB,EACmByD,WADnB,EAEmBC,MAFnB,EAEmC;AAAA;;AAFhB,iBAAA1D,aAAA,GAAAA,aAAA;AACA,iBAAAyD,WAAA,GAAAA,WAAA;AACA,iBAAAC,MAAA,GAAAA,MAAA;AARnB,iBAAAC,IAAA,GAA4B,IAAI,sGAAJ,EAA5B;AAEA,iBAAAC,MAAA,GAAiB,EAAjB;AAQC;;AAvBH;AAAA;AAAA,qCAyBW;AACP,mBAAKH,WAAL,CAAiBI,aAAjB,CAA+B,KAAKF,IAApC;AACD;AA3BH;AAAA;AAAA,uCA8BU;AACN,mBAAKG,MAAL;AACA,mBAAKC,qBAAL;AACD;AAjCH;AAAA;AAAA,oDAmCkC;AAAA;;AAE9B,kBAAIpN,IAAI,GAAW,CAAnB;AACA,mBAAK+M,MAAL,CAAYM,iBAAZ,CAA8B,YAAM;AAClC,sBAAI,CAACC,QAAL,GAAgBC,WAAW,CAAC,MAAI,CAACC,MAAL,CAAYxN,IAAZ,CAAD,EAAoB,IAApB,CAA3B;AACD,eAFD;AAGD;AAzCH;AAAA;AAAA,mCA2CgBA,IA3ChB,EA2C8B;AAAA;;AAC1B,qBAAO,YAAM;AACXA,oBAAI,GAAG,CAACA,IAAI,GAAG,CAAR,IAAa,CAApB;AACA,oBAAIuJ,SAAJ;;AACA,wBAAQvJ,IAAR;AACE,uBAAK,CAAL;AACEuJ,6BAAS,GAAG,MAAZ;AACA;;AACF,uBAAK,CAAL;AACEA,6BAAS,GAAG,QAAZ;AACA;;AACF,uBAAK,CAAL;AACEA,6BAAS,GAAG,OAAZ;AACA;;AACF,uBAAK,CAAL;AACEA,6BAAS,GAAG,KAAZ;AACA;;AACF;AACEA,6BAAS,GAAG,MAAZ;AAdJ;;AAgBA,sBAAI,CAAC0D,MAAL,GAAc,MAAI,CAAC5D,aAAL,CAAmB4D,MAAnB,CAA0B,MAAI,CAACD,IAA/B,EAAqCzD,SAArC,CAAd;AACD,eApBD;AAqBD;AAjEH;AAAA;AAAA,0CAmEa;AACTkE,2BAAa,CAAC,KAAKH,QAAN,CAAb;AACD;AArEH;;AAAA;AAAA;;;2BAUaT,sB,EAAsB,0K,EAAA,2J,EAAA,qH;AAAA,S;;;gBAAtBA,sB;AAAsB,6C;AAAA,mB;AAAA,iB;AAAA,iY;AAAA;AAAA;ACjBnC;;AAAuC;;AAAwB;;AAC/D;;AACE;;AAUA;;AAAO;;AAA8B;;AAAG;;AACtC;;AAEC;;AAA2B;;AAAU;;AACtC;;AACF;;AACF;;;;AAhBO;;AAAA;;AAWe;;AAAA,qFAAa,SAAb,EAAa,CAAb;;AAEU;;AAAA;;;;;;;ODRhC;;;;;wEAUaA,sB,EAAsB;gBAVlC,uDAUkC;iBAVxB;AACT5K,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTY,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITX,kBAAM,EAAE,+BACG,4EAAoB,CADvB;AAJC,W;AAUwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA,YAGauL,WAHb;AAKE,iCAAc;AAAA;AACb;;AANH;AAAA;AAAA,oCAQiB;AACb,qBAAO,IAAI,0CAAJ,EAAP;AACD;AAVH;AAAA;AAAA,oCAYU;AACN;AACD;AAdH;;AAAA;AAAA;;;2BAGaA,W;AAAW,S;;;iBAAXA,W;AAAW,mBAAXA,WAAW,K;AAAA,sBAFV;;;OADd;;;;;wEAGaA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVjO,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSI;;AAA6G;;AAC7G;;;;;;AACA;;AACE;;AAGF;;;;;;;;AAFO;;AAAA,8GAAgC,SAAhC,EAAgC,sBAAhC;;;;ADRX;AAAA;AAAA;AAAA,YAqBakO,sBArBb;AA0BE,0CAAoBC,cAApB,EAA+D;AAAA;;AAA3C,iBAAAA,cAAA,GAAAA,cAAA;AAFpB,iBAAAC,WAAA,GAAmB,gFAAnB;AAGC;;AA3BH;AAAA;AAAA,uCA6BU,CACP;AA9BH;AAAA;AAAA,mCAgCSxS,GAhCT,EAgCc;AACV,qBAAO,KAAKuS,cAAL,CAAoBlD,SAApB,CAA8BrP,GAA9B,CAAP;AACD;AAlCH;AAAA;AAAA,2CAoCiBA,GApCjB,EAoC2B;AACvB,kBAAIA,GAAG,CAAC9B,IAAJ,IAAY,OAAhB,EACE,OAAO,YAAP;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,IAAY,MAAhB,EACE,OAAO,UAAP;AACF,kBAAI8B,GAAG,CAACJ,GAAR,EACE,OAAO,iBAAiBI,GAAG,CAAC9B,IAA5B;AACF,kBAAI8B,GAAG,CAACsP,WAAR,EACE,OAAO,MAAP;AACF,kBAAItP,GAAG,CAACuP,SAAR,EACE,OAAO,KAAP;AACF,qBAAO,SAASvP,GAAG,CAAC9B,IAApB;AAED;AAjDH;;AAAA;AAAA;;;2BAqBaoU,sB,EAAsB,yK;AAAA,S;;;gBAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,W;AAAA,kB;AAAA,iB;AAAA,iT;AAAA;AAAA;AC1BnC;;AAIE;;AAAmB;;AAAiB;;AAEpC;;AAGE;;AAEA;;AAKF;;AAEF;;;;AAfK;;AAMa;;AAAA;;AAEA;;AAAA;;;;;;;ODNlB;;;;;wEAqBaA,sB,EAAsB;gBArBlC,uDAqBkC;iBArBxB;AACT1L,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,kBAAM,EAAC,sGAMI,yEANJ,oCAOW,4EAAkB,CAP7B,oCAQW,yEARX,0GAcI,6EAAmB,IAAE,CAAF,GAAI,CAAvB,CAdJ;AAHE,W;AAqBwB,U;;;;;AAEjC2L,gBAAM,EAAE,CAAF;kBADL;AACK,WAAE;;;;;;;;;;;;;;;;;;;AE5BV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQI;;AACmB;AAAA;;AAAA;;AAAA;AAAA;;AAE8B;;AACjD;;;;AADE;;;;;;;;AAXN;;AACE;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAE1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAEE;;AAKA;;AAEF;;AACA;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC1C;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAE5C;;;;;;AAZM;;AAAA;;;;;;ADPN;AAAA;AAAA;AAAA,YAKaC,mBALb;AAaE,yCAAc;AAAA;;AALd,iBAAAC,KAAA,GAAQ,KAAR;AAGA,iBAAAC,QAAA,GAAW,KAAX;AAGC;;AAdH;AAAA;AAAA,uCAgBU,CACP;AAjBH;AAAA;AAAA,mCAmBS;AACL,mBAAKD,KAAL,GAAa,IAAb;AACD;AArBH;AAAA;AAAA,mCAuBS;AAEL,mBAAKA,KAAL,GAAa,KAAb;AACD;AA1BH;;AAAA;AAAA;;;2BAKaD,mB;AAAmB,S;;;gBAAnBA,mB;AAAmB,0C;AAAA;AAAA;AAAA;AAAA,W;AAAA,iC;AAAA,kB;AAAA,iB;AAAA,kU;AAAA;AAAA;;;ACPhC;;;;AAAyB;;;;;;;ODEzB;;;;;wEAKaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT9L,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTY,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;AAG9BkL,eAAK;kBADJ;AACI,Y;AAGLC,kBAAQ;kBADP;AACO;;;;;;;;;;;;;;;;;;;AEbV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA,YAGaC,qBAHb;AAKE,2CAAc;AAAA;;AAMd,iBAAAC,WAAA,GAAsB;AACpB,mBAAK,GADe;AAEpB,mBAAK,IAFe;AAGpB,mBAAK,GAHe;AAIpB,mBAAK;AAJe,aAAtB;;AALE,iBAAK,IAAIlT,GAAT,sBAAoB,KAAKkT,WAAzB,GAAuC;AACrC,mBAAKA,WAAL,CAAiB,KAAKA,WAAL,CAAiBlT,GAAjB,CAAjB,IAA0CA,GAA1C;AACD;AACF;;AATH;AAAA;AAAA,0CAmBwBmT,GAnBxB,EAmB6B;AAEzB,qBAAO,KAAKD,WAAL,CAAiBC,GAAjB,IAAwB,KAAKD,WAAL,CAAiBC,GAAjB,CAAxB,GAAgDA,GAAvD;AACD;AAtBH;AAAA;AAAA,4CAwBkB3J,QAxBlB,EAwB4B4J,QAxB5B,EAwBsC;AAAA;;AAClC,qBAAO5J,QAAQ,CAACV,KAAT,CAAe,IAAf,EACJ3J,GADI,CACA,UAAAkU,GAAG,EAAI;AACV,oBAAIC,WAAW,GAAGD,GAAG,CAACvK,KAAJ,CAAU,cAAV,EACfyK,MADe,CACR,UAAAC,CAAC;AAAA,yBAAIA,CAAC,IAAI,EAAT;AAAA,iBADO,EAEfrU,GAFe,CAEX,UAACsU,IAAD,EAAU;AAGb,sBAAI,CAACL,QAAQ,CAACM,QAAT,CAAkBD,IAAlB,CAAD,IAA4B,CAACL,QAAQ,CAACM,QAAT,CAAkBD,IAAI,CAAC/V,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAlB,CAAjC,EAAkF;AAChF,2BAAO+V,IAAI,CAAC3K,KAAL,CAAW,EAAX,EAAe3J,GAAf,CAAmB,UAAAJ,CAAC,EAAI;AAC7B,6BAAO,MAAI,CAACmU,WAAL,CAAiBnU,CAAjB,IAAsB,MAAI,CAACmU,WAAL,CAAiBnU,CAAjB,CAAtB,GAA4CA,CAAnD;AACD,qBAFM,EAGJ4U,OAHI,GAGMC,IAHN,CAGW,EAHX,CAAP;AAID,mBALD,MAKO,IAAIH,IAAI,CAAClT,QAAL,CAAc,UAAd,CAAJ,EAA+B;AACpC,uCAAakT,IAAI,CAAC/V,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAb;AACD,mBAFM,MAEA;AACL,uCAAa+V,IAAb;AACD;AACF,iBAfe,EAebE,OAfa,GAeHC,IAfG,CAeE,EAfF,CAAlB;AAgBA,uBAAON,WAAP;AACD,eAnBI,EAoBJM,IApBI,CAoBC,IApBD,CAAP;AAsBD;AA/CH;AAAA;AAAA,wCAiDc7B,IAjDd,EAiDyB;AACrB,kBAAI8B,GAAG,GAAG,EAAV;;AACA,mBAAK,IAAI7T,GAAT,IAAgB+R,IAAhB,EAAsB;AACpB8B,mBAAG,CAAC7T,GAAG,GAAG,UAAP,CAAH,GAAwB,KAAK8T,aAAL,CAAmB/B,IAAI,CAAC/R,GAAD,CAAvB,CAAxB;AACD;;AACD,qBAAO6T,GAAP;AACD;AAvDH;AAAA;AAAA,2CAyDiBrK,QAzDjB,EAyDmCuI,IAzDnC,EAyD8C;AAC1C,qBAAOvI,QAAQ,CAAC9L,OAAT,CAAiB,cAAjB,EAAiC,UAACqW,CAAD,EAAIzV,IAAJ,EAAa;AACnD,uBAAOyT,IAAI,CAACzT,IAAD,CAAJ,IAAc,GAArB;AACD,eAFM,CAAP;AAGD;AA7DH;;AAAA;AAAA;;;2BAGa2U,qB;AAAqB,S;;;iBAArBA,qB;AAAqB,mBAArBA,qBAAqB,K;AAAA,sBAFpB;;;OADd;;;;;wEAGaA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACVzO,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;ACLlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAkG;;AAA8C;;AAAa;;;;;;AAAb;;AAAA;;;;;;;;;;ADEhJ;AAAA;AAAA;AAAA,YAKawP,cALb;AAaE,oCAAc;AAAA;;AAFP,iBAAAC,UAAA,GAAqB,EAArB;AAGN;;AAdH;AAAA;AAAA,uCAgBU,CACP;AAjBH;;AAAA;AAAA;;;2BAKaD,c;AAAc,S;;;gBAAdA,c;AAAc,4C;AAAA;AAAA;AAAA;AAAA;AAAA,W;AAAA,oB;AAAA,iC;AAAA,kB;AAAA,iB;AAAA,0H;AAAA;AAAA;;;ACP3B;;AAA8D;;AAAW;;AAAyB;;AAClG;;AAAA;;;;AADK;;AAAyD;;AAAA;;AAAkE;;AAAA;;;;;;;ODEhI;;;;;wEAKaA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACThN,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTY,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;AAElBc,iBAAO,EAAE,CAAF;kBADb;AACa,WAAE,C;AAETuL,iBAAO,EAAE,CAAF;kBADb;AACa,WAAE,C;AAETD,oBAAU,EAAE,CAAF;kBADhB;AACgB,WAAE;;;;;;;;;;;;;;;;;;;AEbrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA;AAAA;AAAA;AAAA,YAGaE,qBAHb;AAAA;;AAAA;;AAKE,yCAAYC,qBAAZ,EAA0D;AAAA;;AAAA;;AAExD,gBAAIlF,UAAU,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAAjB;AACA,wCAAMkF,qBAAN;AACAlF,sBAAU,CAAChR,OAAX,CAAmB,UAACmW,GAAD,EAAS;AAE1B,sBAAKA,GAAG,GAAG,cAAX,IAA6B,SAA7B;AACA,sBAAKA,GAAG,GAAG,cAAX,IAA6B,GAA7B;AAED,aALD;AAMA,oBAAKC,wBAAL,GAAgC,GAAhC;AACA,oBAAKC,yBAAL,GAAiC,GAAjC;AACA,oBAAKC,qBAAL,GAA6B,GAA7B;AACA,oBAAKC,sBAAL,GAA8B,GAA9B;AAbwD;AAczD;;AAnBH;AAAA;AAAA,yCAqBeC,aArBf,EAqBmC;AAC/B,qBAAO,GAAP;AACD;AAvBH;AAAA;AAAA,yCAyBejG,IAzBf,EAyBqBlB,KAzBrB,EAyB0B;AACtB,kBAAI5E,OAAO,GAAG8F,IAAI,CAAC9F,OAAL,CAAalJ,OAAb,GAAuB8T,MAAvB,CAA8B,UAAAoB,EAAE;AAAA,uBAAI,CAACA,EAAE,CAACjF,WAAR;AAAA,eAAhC,CAAd;AACA,kBAAInC,KAAK,CAACsF,MAAN,CAAa+B,QAAb,CAAsBrF,CAAtB,KAA4Bd,IAAI,CAACc,CAAjC,IAAsChC,KAAK,CAACsF,MAAN,CAAa+B,QAAb,CAAsBpF,CAAtB,KAA4Bf,IAAI,CAACe,CAA3E,EACE,OAAO,GAAP,CADF,KAEK,IAAIf,IAAI,CAACc,CAAL,KAAShC,KAAK,CAACG,KAAN,CAAYmH,IAAZ,CAAiBtF,CAA1B,IAA8Bd,IAAI,CAACe,CAAL,KAASjC,KAAK,CAACG,KAAN,CAAYmH,IAAZ,CAAiBrF,CAA5D,EAAgE;AACnE,uBAAO,GAAP;AACD,eAFI,MAGA,IAAI7G,OAAO,CAAC/H,MAAR,GAAiB,CAArB,EAAwB;AAC3B,oBAAI+H,OAAO,CAAClJ,OAAR,GAAkB8T,MAAlB,CAAyB,UAAAoB,EAAE;AAAA,yBAAIA,EAAE,CAACrW,IAAH,KAAY,OAAhB;AAAA,iBAA3B,EAAoDsC,MAApD,GAA6D,CAAjE,EACE,OAAO,GAAP,CADF,KAIE,OAAO+H,OAAO,CAAClJ,OAAR,GAAkB,CAAlB,EAAqBnB,IAA5B;AACH,eANI,MAME,OAAO,GAAP;AACR;AAvCH;AAAA;AAAA,uCAyCagQ,SAzCb,EAyCgCa,IAzChC,EAyC2C;AACvC,kBAAI2F,YAAY,GAAGxG,SAAS,CAACyG,WAAV,MAA2B5F,IAAI,GAAG,MAAH,GAAY,MAA3C,IAAqD,UAAxE;AAEA,kBAAI6F,QAAJ;AACA,kBAAI,CAAC7F,IAAL,EACE6F,QAAQ,GAAG,GAAX,CADF,KAEK,IAAI7F,IAAI,CAAC7Q,IAAL,IAAa,MAAjB,EAAyB;AAC5B0W,wBAAQ,GAAG7F,IAAI,CAAC7Q,IAAhB;AACD,eAFI,MAEE;AACL,oBAAIgQ,SAAS,IAAI,KAAb,IAAsBA,SAAS,IAAI,QAAvC,EACE0G,QAAQ,GAAG,GAAX,CADF,KAGEA,QAAQ,GAAG,GAAX;AACH;;AAED,kBAAIjD,IAAI,mCAAY,KAAKlC,WAAjB;AAA8BvR,oBAAI,EAAE0W;AAApC,gBAAR;;AACAjD,kBAAI,CAACkD,YAAL,GAAoBlD,IAAI,CAACzT,IAAzB;AACAyT,kBAAI,CAACmD,kBAAL,GAA0BnD,IAAI,CAACoD,UAA/B;;AACA,kBAAIhG,IAAI,IAAIA,IAAI,CAAC7Q,IAAL,IAAa,MAAzB,EAAiC;AAC/ByT,oBAAI,CAACqD,SAAL,GAAiBrD,IAAI,CAACqD,SAAL,CAAe1X,OAAf,CAAuB,IAAvB,EAA6B,GAA7B,CAAjB;AACAqU,oBAAI,CAACsD,YAAL,GAAoBtD,IAAI,CAACsD,YAAL,CAAkB3X,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAApB;AACAqU,oBAAI,CAACoD,UAAL,GAAkBpD,IAAI,CAACoD,UAAL,CAAgBzX,OAAhB,CAAwB,IAAxB,EAA8B,GAA9B,CAAlB;AACAqU,oBAAI,CAACmD,kBAAL,GAA0BnD,IAAI,CAACoD,UAA/B;AACD;;AACD,qBAAO,KAAKf,qBAAL,CAA2BkB,cAA3B,CAA0C,KAAKR,YAAL,CAA1C,EAA8D/C,IAA9D,CAAP;AACD;AAlEH;AAAA;AAAA,sCAoEY3R,GApEZ,EAoEsBmV,mBApEtB,EAoEgD;AAE5C,kBAAInV,GAAG,CAACoV,SAAJ,KAAkB,eAAtB,EAAuC;AACrC,uBAAOpV,GAAG,CAAC9B,IAAX;AACD,eAFD,MAEO,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,QAAjB,EAA2B;AAChC,uBAAO,GAAP;AACD,eAFM,MAEA,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,MAAjB,EAAyB;AAC9B,uBAAO,GAAP;AACD,eAFM,MAEA,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,OAAjB,EAA0B;AAC/B,uBAAO,GAAP;AACD,eAFM,MAED,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,SAAjB,EAA4B;AAChC,uBAAO,GAAP;AACD,eAFK,MAEA,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,UAAjB,EAA6B;AACjC,uBAAO,GAAP;AACD,eAFK,MAGD,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,OAAjB,EAA0B;AAC7B,uBAAO,GAAP;AACD,eAFI,MAGA,IAAI8B,GAAG,CAAC9B,IAAJ,KAAa,KAAjB,EAAwB;AAC3B,uBAAO,GAAP;AACD,eAFI,MAEE;AACL,uBAAO8B,GAAG,CAAC9B,IAAX;AACD;AACF;AA3FH;;AAAA;AAAA,UAG2C,wEAH3C;;;2BAGa6V,qB,EAAqB,kJ;AAAA,S;;;iBAArBA,qB;AAAqB,mBAArBA,qBAAqB,K;AAAA,sBAFpB;;;OADd;;;;;wEAGaA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACV3P,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;ACPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA;AAAA;AAAA;AAAA,YAuBaiR,WAvBb;AAAA;AAAA;;;gBAuBaA;;;;6BAAAA,W;AAAW,W;AAAA,oBANb,CACP,4DADO,EAEP,uEAFO,EAGP,oFAHO,CAMa;;;OAvBxB;;;4HAuBaA,W,EAAW;AAAA,yBArBpB,yEAqBoB,EApBpB,yFAoBoB,EAnBpB,mFAmBoB,EAlBpB,sFAkBoB,EAjBpB,yFAiBoB,EAhBpB,kGAgBoB;AAhBG,oBAWvB,4DAXuB,EAYvB,uEAZuB,EAavB,oFAbuB,CAgBH;AAHL,oBAVf,yEAUe,EATf,kGASe,EARf,yFAQe,EAPf,mFAOe,EANf,sFAMe,EALf,yFAKe;AAGK,S;AARA,O;;;;;wEAQXA,W,EAAW;gBAvBvB,sDAuBuB;iBAvBd;AACRvU,wBAAY,EAAE,CACZ,yEADY,EAEZ,yFAFY,EAGZ,mFAHY,EAIZ,sFAJY,EAKZ,yFALY,EAMZ,kGANY,CADN;AASRC,mBAAO,EAAE,CACP,yEADO,EAEP,kGAFO,EAGP,yFAHO,EAIP,mFAJO,EAKP,sFALO,EAMP,yFANO,CATD;AAiBRC,mBAAO,EAAE,CACP,4DADO,EAEP,uEAFO,EAGP,oFAHO;AAjBD,W;AAuBc,U;;;;;;;;;;;;;;;;;;AClCxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA;AAAA;AAAA;AAAA,YAGasU,kBAHb;AAUE,wCAAc;AAAA;;AALd,iBAAAC,aAAA,GAA8B,IAAI,kDAAJ,CAAuB,CAAvB,CAA9B;AACA,iBAAAC,YAAA,GAA6B,IAAI,kDAAJ,CAAuB,CAAvB,CAA7B;AACA,iBAAAC,mBAAA,GAAoC,IAAI,kDAAJ,CAAuB,CAAvB,CAApC;AACA,iBAAAC,uBAAA,GAAwD,IAAI,kDAAJ,CAAuC,CAAvC,CAAxD;AAGE,iBAAKD,mBAAL,CAAyBvR,IAAzB,CAA8B,MAA9B;AACA,iBAAKwR,uBAAL,CAA6BxR,IAA7B,CAAkC,IAAI,oFAAJ,EAAlC;AACD;;AAbH;AAAA;AAAA,sCAeYiJ,KAfZ,EAemC;AAE/B,mBAAKoI,aAAL,CAAmBrR,IAAnB,CAAwBiJ,KAAxB;AACD;AAlBH;AAAA;AAAA,+CAoB0C;AAAA;;AAEtC,mBAAKqI,YAAL,CAAkBtR,IAAlB,UAAgC,UAAS1D,MAAT,GAAkB,CAAlD;AACD;AAvBH;AAAA;AAAA,8CAyBiB;AACb,qBAAO,KAAK+U,aAAZ;AACD;AA3BH;AAAA;AAAA,0CA8BgBI,QA9BhB,EA8B+C;AAC3C,mBAAKD,uBAAL,CAA6BxR,IAA7B,CAAkCyR,QAAlC;AACD;AAhCH;AAAA;AAAA,mDAkCyBzH,SAlCzB,EAkCoC;AAChC,mBAAKuH,mBAAL,CAAyBvR,IAAzB,CAA8BgK,SAA9B;AACD;AApCH;AAAA;AAAA,wDAsC8B;AAC1B,qBAAO,KAAKwH,uBAAZ;AACD;AAxCH;AAAA;AAAA,iDA0CuB;AACnB,qBAAO,KAAKD,mBAAZ;AACD;AA5CH;;AAAA;AAAA;;;2BAGaH,kB;AAAkB,S;;;iBAAlBA,kB;AAAkB,mBAAlBA,kBAAkB,K;AAAA,sBAFjB;;;OADd;;;;;wEAGaA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVlR,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;ACP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA;AAAA;AAAA;AAAA,YAGawR,iBAHb;AAKE,qCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,iBAAAA,IAAA,GAAAA,IAAA;AACnB;;AANH;AAAA;AAAA,sCASmBpD,MATnB,EAS2BqD,KAT3B,EASkC;AAC9B,kBAAIC,gBAAgB,GAAG,KAAKF,IAAL,CAAUG,IAAV,CAAe,uDAAf,EAAwE;AAC7FvD,sBAAM,EAAEA,MADqF;AAE7FqD,qBAAK,EAALA;AAF6F,eAAxE,EAGpB;AACDG,uBAAO,EAAE;AACP,iDAA+B;AADxB;AADR,eAHoB,EAOpB3U,IAPoB,CAOf,4DAAK,CAAL,CAPe,EAQpB0B,SARoB,CASnB,UAAA2O,IAAI;AAAA,uBAAI/S,OAAO,CAACqD,GAAR,CAAY,SAAZ,EAAuB0P,IAAvB,CAAJ;AAAA,eATe,EAUnB,UAAA9S,KAAK;AAAA,uBAAID,OAAO,CAACqD,GAAR,CAAY,MAAZ,EAAoBpD,KAApB,CAAJ;AAAA,eAVc,CAAvB;AAYA,qBAAOkX,gBAAP;AACD;AAvBH;AAAA;AAAA,wCAyBqB;AACjB,qBAAO,KAAKF,IAAL,CAAUK,GAAV,CAAc,wDAAd,CAAP;AACD;AA3BH;;AAAA;AAAA;;;2BAGaN,iB,EAAiB,uH;AAAA,S;;;iBAAjBA,iB;AAAiB,mBAAjBA,iBAAiB,K;AAAA,sBAFhB;;;OADd;;;;;wEAGaA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVxR,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAMA;AAAA;AAAA;AAAA,YAkBa+R,yBAlBb;AAyBE,6CAAoBC,UAApB,EACoB9Q,MADpB,EAEoB+Q,KAFpB,EAE2C;AAAA;;AAFvB,iBAAAD,UAAA,GAAAA,UAAA;AACA,iBAAA9Q,MAAA,GAAAA,MAAA;AACA,iBAAA+Q,KAAA,GAAAA,KAAA;AAPpB,iBAAArN,IAAA,GAAe,CAAf;AAQC;;AA5BH;AAAA;AAAA,uCA8Ba;AAAA;;AACT,mBAAKqN,KAAL,CAAWC,WAAX,CAAuBtT,SAAvB,CAAiC,UAAA+N,MAAM,EAAI;AACzC,uBAAI,CAAC/H,IAAL,GAAY+H,MAAM,CAAC,MAAD,CAAN,GAAeA,MAAM,CAAC,MAAD,CAArB,GAA8B,CAA1C;AACD,eAFD;AAGD;AAlCH;AAAA;AAAA,mCAoCM;AAAA;;AACF,mBAAK/J,YAAL,CAAkBhB,IAAlB;AAGA,kBAAIuQ,KAAK,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACnC;AACAC,0BAAU,CAAC;AAAA,yBAAMD,OAAO,CAAC,MAAD,CAAb;AAAA,iBAAD,EAAwB,IAAxB,CAAV;AACD,eAHW,CAAZ;AAIA,kBAAI3J,UAAU,GAAG,IAAI0J,OAAJ,CAAY,UAACC,OAAD,EAAa;AACxC;AACA,uBAAI,CAACL,UAAL,CAAgBO,QAAhB,CAAyB,OAAI,CAAC3N,IAA9B,EAAoC,OAAI,CAACkE,UAAzC;;AACAuJ,uBAAO,CAAC,EAAD,CAAP,CAHwC,CAG3B;AAEd,eALgB,CAAjB;AAOAD,qBAAO,CAACI,GAAR,CAAY,CAACL,KAAD,EAAQzJ,UAAR,CAAZ,EAAiC+J,IAAjC,CAAsC,YAAM;AAC1C,uBAAI,CAAC7P,YAAL,CAAkB8P,IAAlB;;AACA,uBAAI,CAACxR,MAAL,CAAYW,aAAZ,CAA0B,OAA1B;AACD,eAHD;AAKD;AAxDH;AAAA;AAAA,yCA0DY;AACR,mBAAKmQ,UAAL,CAAgBW,aAAhB,CAA8B,KAAK/N,IAAnC;AACD;AA5DH;;AAAA;AAAA;;;2BAkBamN,yB,EAAyB,iJ,EAAA,uH,EAAA,+H;AAAA,S;;;gBAAzBA,yB;AAAyB,6C;AAAA;AAAA;;;;;;;;;;;;;;;ACxBtC;;AACE;;AAEA;;AAAqC;;AAAc;;AACnD;;AACE;;AACA;;AACA;;AACA;;AAAwC;;AAAoB;AAAA;AAAA;;AAApB;;AAAuC;;AAC/E;;AACA;;AACQ;AAAA,uBAAS,IAAA1S,IAAA,EAAT;AAAe,eAAf;;AAAiB;;AACzB;;AACF;;AAGF;;AACA;;AACE;;AACF;;;;AAXgE;;AAAA;;;;;;;ODFhE;;;;;wEAkBa0S,yB,EAAyB;gBAlBrC,uDAkBqC;iBAlB3B;AACTvP,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,kBAAM,EAAC,uCAEM,4EAAoB,CAF1B,0DAOU,4EAAoB,EAP9B,yEAS0B,4EAAkB,CAT5C;AAHE,W;AAkB2B,U;;;;;;;;;AAKTE,sBAAY,EAAE,CAAF;kBAAtC,uDAAsC;mBAA5B,c;AAA4B,WAAE;;;;;;;;;;;;;;;;;;;AE7B3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA,YAKagQ,YALb;AAAA;;AAME,eAAAC,KAAA,GAAQ,iBAAR;AACD,SAPD;;;2BAKaD,Y;AAAY,S;;;gBAAZA,Y;AAAY,mC;AAAA,kB;AAAA,iB;AAAA,+G;AAAA;AAAA;ACNzB;;AACA;;AACA;;AAAyF;;AAAiB;;;;;;;ODD1G;;;;;wEAKaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTpQ,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTY,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AENzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaU;;AACE;;AAKC;;AAA+C;;AAAmC;;AACnF;;AACF;;;;;;;;AAHO;;AAAA;;AACE;;AAAA;;AAAyC;;AAAA;;;;;;AAPpD;;AACE;;AASF;;;;;;;;AATgB;;AAAA;;;;;;AAFlB;;AACE;;AAWF;;;;;;AAXgB;;AAAA;;;;;;;;;;;;AATpB;;AACE;;AACE;;AAAK;;AAAC;;AACN;;AAAK;;AAAC;;AACN;;AAAK;;AAAC;;AACR;;AACA;;AAEE;;AAaF;;AACF;;;;;;AAfO;;AAAA;;AACc;;AAAA;;;;ADJvB,UAAIyP,aAAa,GAAG,kFAApB;;AAEA;AAAA;AAAA;AAAA,YAgBaC,gBAhBb;AAiCE,oCAAmBpJ,kBAAnB,EAA2D;AAAA;;AAAxC,iBAAAA,kBAAA,GAAAA,kBAAA;AALnB,iBAAAqJ,kBAAA,GAA6B,CAAC,CAA9B;AAEA,iBAAAC,UAAA,GAAaH,aAAb;AAIC;;AAlCH;AAAA;AAAA,uCAoCU;AACN,mBAAKI,iBAAL,GAAyB,mFAAwB,KAAKC,YAA7B,EAA2C,CAA3C,CAAzB;AACD;AAtCH;AAAA;AAAA,oCAwCUC,SAxCV,EAwCqB;AACjB,kBAAIxV,KAAK,GAAG,KAAKuV,YAAL,CAAkBjK,KAAlB,CAAwBtL,KAApC;AACA,qBAAOA,KAAK,CAACmN,CAAN,KAAYqI,SAAS,CAACrI,CAAtB,IAA2BnN,KAAK,CAACoN,CAAN,KAAYoI,SAAS,CAACpI,CAAxD;AACD;AA3CH;AAAA;AAAA,mCA6CSoI,SA7CT,EA6CoB;AAChB,kBAAI/C,IAAI,GAAG,KAAK8C,YAAL,CAAkBjK,KAAlB,CAAwBmH,IAAnC;AACA,qBAAOA,IAAI,CAACtF,CAAL,KAAWqI,SAAS,CAACrI,CAArB,IAA0BsF,IAAI,CAACrF,CAAL,KAAWoI,SAAS,CAACpI,CAAtD;AACD;AAhDH;AAAA;AAAA,sCAkDYoI,SAlDZ,EAkDuB;AACnB,kBAAIhD,QAAQ,GAAG,KAAK+C,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAxC;AACA,qBAAOA,QAAQ,CAACrF,CAAT,KAAeqI,SAAS,CAACrI,CAAzB,IAA8BqF,QAAQ,CAACpF,CAAT,KAAeoI,SAAS,CAACpI,CAA9D;AACD;AArDH;AAAA;AAAA,2CAuDiBoI,SAvDjB,EAuD4B;AACxB,kBAAI,KAAKJ,kBAAL,GAA0B,CAA9B,EACE,OAAO,IAAP;AACF,kBAAI5C,QAAQ,GAAG,KAAK+C,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAxC;AACA,qBAAQpO,IAAI,CAACqR,GAAL,CAASjD,QAAQ,CAACrF,CAAT,GAAaqI,SAAS,CAACrI,CAAhC,KAAsC,KAAKiI,kBAA3C,IACHhR,IAAI,CAACqR,GAAL,CAASjD,QAAQ,CAACpF,CAAT,GAAaoI,SAAS,CAACpI,CAAhC,KAAsC,KAAKgI,kBADhD;AAED;AA7DH;AAAA;AAAA,2CA+DiBI,SA/DjB,EA+D4B;AAAA;;AACxB,kBAAI3I,cAAc,qBAAO,gFAAP,CAAlB;;AACA,kBAAIC,UAAU,GAAkB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAAhC;AAEAA,wBAAU,CAAChR,OAAX,CAAmB,UAACoQ,SAAD,EAAuB;AAExC,oBAAIa,IAAI,GAAG,OAAI,CAAChB,kBAAL,CAAwBiB,MAAxB,CAA+BwI,SAA/B,EAA0CtJ,SAA1C,CAAX;;AACAW,8BAAc,CAACX,SAAS,GAAG,OAAb,CAAd,GAAsC,UAAtC;;AACA,oBAAIa,IAAJ,EAAU;AACR,sBAAIA,IAAI,CAACnP,GAAT,EAAc;AACZiP,kCAAc,CAACX,SAAS,GAAG,UAAb,CAAd,GAAyCa,IAAI,CAAC7Q,IAA9C;AACA2Q,kCAAc,CAACX,SAAS,GAAG,OAAb,CAAd,GAAsC,aAAtC;AACD,mBAHD,MAGO,CAEN;AAEF,iBARD,MAQO;AACLW,gCAAc,CAACX,SAAS,GAAG,UAAb,CAAd,GAAyC,GAAzC;AACD;AACF,eAfD;AAgBA,qBAAOW,cAAP;AACD;AApFH;AAAA;AAAA,4CAuFkB6I,cAvFlB,EAuFuC;AACnC,kBAAInP,OAAO,GAAG,KAAKwF,kBAAL,CAAwByB,YAAxB,CAAqC,+EAAoBkI,cAApB,EAAmC,CAAnC,CAArC,CAAd;;AACA,kBAAInP,OAAO,CAAC,CAAD,CAAX,EAAgB;AAEd,uBAAO,KAAKyF,aAAL,CAAmBqB,SAAnB,CAA6B9G,OAAO,CAAC,CAAD,CAApC,CAAP;AACD,eAHD,MAGO;AACL,oBAAIoP,gBAAgB,GAAGD,cAAc,CAACE,SAAf,CAAyBvY,OAAzB,GAAmCmB,MAA1D;;AACA,oBAAImX,gBAAgB,IAAI,CAAxB,EAA2B;AACzB,yBAAO,GAAP;AACD;;AACD,oBAAIA,gBAAgB,IAAI,CAAxB,EAA2B;AACzB,yBAAO,GAAP;AACD,iBAFD,MAEO;AACL,yBAAO,GAAP;AACD;AACF;AACF;AAvGH;AAAA;AAAA,yCAyGeD,cAzGf,EAyGoC;AAChC,kBAAInP,OAAO,GAAG,KAAKwF,kBAAL,CAAwByB,YAAxB,CAAqC,+EAAoBkI,cAApB,EAAoC,CAApC,CAArC,CAAd;;AACA,kBAAInP,OAAO,CAAC,CAAD,CAAX,EAAgB;AACd,oBAAIA,OAAO,CAAC,CAAD,CAAP,CAAWrK,IAAX,KAAoB,QAApB,IAAgCqK,OAAO,CAAC,CAAD,CAAP,CAAWrK,IAAX,KAAoB,MAAxD,EAAgE;AAC9D,yBAAO,cAAP;AACD;AACF;;AACD,qBAAO,QAAP;AACD;AAjHH;;AAAA;AAAA;;;2BAgBaiZ,gB,EAAgB,iJ;AAAA,S;;;gBAAhBA,gB;AAAgB,mC;AAAA;AAAA;AAAA;AAAA;AAAA,W;AAAA,mB;AAAA,iB;AAAA,ue;AAAA;AAAA;ACzB7B;;AAGE;;AAwBA;;AACE;;AAA2B;;AAAO;;AAClC;;AACA;;AAA2B;;AAAgB;;AAC3C;;AAA2B;;AAAQ;;AACnC;;AACA;;AAAM;;AAAiB;;AACvB;;AAAM;;AAAU;;AAChB;;AACA;;AAAM;;AAAE;;AAAK;;AAAe;;AAC9B;;AAEF;;;;AAtCK;;AAEe;;AAAA;;;;;;;ODMpB;;;;;wEAgBaA,gB,EAAgB;gBAhB5B,uDAgB4B;iBAhBlB;AACTvQ,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTY,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITX,kBAAM,EAAE,oGAIK,4EAAoB,CAJzB,gCAKM,sEAAc,CALpB,gBAK2B,4EAAoB,CAL/C,6DASW,4EAAoB,EAT/B;AAJC,W;AAgBkB,U;;;;;AAI3ByQ,sBAAY,EAAE,CAAF;kBADX;AACW,WAAE,C;AAIdvJ,uBAAa,EAAE,CAAF;kBADZ;AACY,WAAE,C;AAIfoJ,4BAAkB,EAAE,CAAF;kBADjB;AACiB,WAAE;;;;;;;;;;;;;;;;;;;AErCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA;AAAA;AAAA;AAAA,YAcaS,eAdb;AAAA;AAAA;;;gBAcaA;;;;6BAAAA,e;AAAe,W;AAAA,oBAJjB,CACP,4DADO,CAIiB;;;OAd5B;;;4HAcaA,e,EAAe;AAAA,yBAZxB,oFAYwB,EAXxB,wFAWwB;AAXG,oBAQ3B,4DAR2B,CAWH;AAHZ,oBALZ,oFAKY,EAJZ,wFAIY;AAGY,S;AAPG,O;;;;;wEAOlBA,e,EAAe;gBAd3B,sDAc2B;iBAdlB;AACR/W,wBAAY,EAAE,CACZ,oFADY,EAEZ,wFAFY,CADN;AAKNC,mBAAO,EAAE,CACT,oFADS,EAET,wFAFS,CALH;AAURC,mBAAO,EAAE,CACP,4DADO;AAVD,W;AAckB,U;;;;;;;;;;;;;;;;;;ACrB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACE;;AACJ;;;;;;;;;;;;AA6BA;;AAIK;AAAA;;AAAA;;AAAA,sCAA0B,MAA1B,EAAgC,MAAhC;AAAgC,WAAhC;;AACJ;;AAAgB;;;;;;AAL0B,4IAAqD,SAArD,EAAqD,yFAArD;;AAK1C;;AAAA;;;;;;;;;;;;AAWC;;AACE;AAAA;;AAAA;;AAAA,sCAA0B,QAA1B,EAAkC,MAAlC;AAAkC,WAAlC;;AAKD;;AAAkB;;;;;;AAFjB,8IAAuD,SAAvD,EAAuD,yFAAvD;;AAED;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AD3CH;AAAA;AAAA;AAAA,YAMa8W,oBANb;AA6FE,wCAA6BC,kBAA7B,EACoBC,OADpB,EAEoBC,QAFpB,EAGoBvG,MAHpB,EAGoC;AAAA;;AAHP,iBAAAqG,kBAAA,GAAAA,kBAAA;AACT,iBAAAC,OAAA,GAAAA,OAAA;AACA,iBAAAC,QAAA,GAAAA,QAAA;AACA,iBAAAvG,MAAA,GAAAA,MAAA;AA/EpB,iBAAAwG,qBAAA,GAAkCpZ,SAAlC;AACA,iBAAAqZ,qBAAA,GAAiC,KAAjC;AAOA,iBAAAC,eAAA,GAA0B,CAA1B;AAGA,iBAAAC,eAAA,GAA0B,CAA1B;AAEA,iBAAAC,OAAA,GAKI,EALJ;AAMA,iBAAAC,aAAA,GAUI,EAVJ;AAmBA,iBAAAC,YAAA,GAYI;AAACC,0BAAY,EAAE,EAAf;AAAmBC,sBAAQ,EAAE;AAA7B,aAZJ;AAcA,iBAAAC,OAAA,GAAiB,EAAjB;;AAEA,iBAAAC,WAAA,GAAmB,YAAM,CACxB,CADD;;AAoBA,iBAAAC,KAAA,GAAQ,KAAR;AAOC;;AAlGH;AAAA;AAAA,uCAoGa;AACT,kBAAI;AACF,qBAAKC,kBAAL,GAA0B,KAAKA,kBAAL,IAA2B,KAAKd,OAAL,CAAae,aAAb,CAA2BC,QAAhF;AACA,qBAAKC,cAAL,GAAsB,KAAKA,cAAL,IAAuB,KAAKC,qBAAL,CAA2B,KAAKJ,kBAAhC,CAA7C;AAEA,qBAAKK,WAAL;;AAGA,oBAAI,KAAKjB,qBAAL,IAA8BpZ,SAAlC,EAA6C;AAC3C,uBAAKoZ,qBAAL,GAA6B,IAA7B,CAD2C,CACV;AAClC;;AAED,oBAAI,KAAKkB,OAAL,IAAgB,KAAKC,OAAzB,EAAkC;AAChC,uBAAKC,sBAAL;AACD;AACF,eAdD,CAcE,OAAO3a,CAAP,EAAU;AACVC,uBAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;AAtHH;AAAA;AAAA,0CAwHgB;AACZ,kBAAI,KAAKsa,cAAT,EAAyB;AACvB,qBAAKT,YAAL,mCACK,KAAKA,YADV;AAEEC,8BAAY,EACV;AACE/I,uBAAG,EAAE,KAAKuJ,cAAL,CAAoBM,aAApB,GAAoC,uDAD3C;AAEE5J,0BAAM,EAAE,KAAKsJ,cAAL,CAAoBO,gBAApB,GAAuC,uDAFjD;AAGE3J,yBAAK,EAAE,KAAKoJ,cAAL,CAAoBQ,cAApB,GAAqC,6DAH9C;AAIE7J,wBAAI,EAAE,KAAKqJ,cAAL,CAAoBS,aAApB,GAAoC;AAJ5C;AAHJ;AAUD;AACF;AArIH;AAAA;;AA6IE;;;;AA7IF,oCAiJU1Q,IAjJV,EAiJc;AACV,kBAAI2Q,KAAK,GAAG,IAAIrb,KAAJ,EAAZ;;AACA,mBAAK,IAAI4G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,IAApB,EAA0B9D,CAAC,EAA3B,EAA+B;AAC7ByU,qBAAK,CAACC,IAAN,CAAW1U,CAAX;AACD;;AACD,qBAAOyU,KAAP,CALU,CAKG;AACd;AAvJH;AAAA;AAAA,8CAyJoB;AAChB,mBAAKE,yBAAL;AACD;AA3JH;AAAA;AAAA,wDA6JsC;AAAA;;AAClC,kBAAI;AACF,oBAAI,KAAKP,sBAAL,EAAJ,EAAmC;AACjC,uBAAK5H,MAAL,CAAYM,iBAAZ,CAA8B,YAAM;AAClC,wBAAI8H,OAAO,GAAGpD,UAAU,CAAC,YAAM;AAC7B,6BAAI,CAACqB,kBAAL,CAAwBgC,aAAxB;;AAEAC,kCAAY,CAACF,OAAD,CAAZ;AACD,qBAJuB,EAIrB,GAJqB,CAAxB;;AAKA,2BAAI,CAACnB,OAAL,CAAaiB,IAAb,CAAkBE,OAAlB;AACD,mBAPD;AAQD;AACF,eAXD,CAWE,OAAOnb,CAAP,EAAU;AACVC,uBAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;AA5KH;AAAA;AAAA,qDA8KgC;AAAA;;AAC5B,kBAAI,CAAC,KAAK6Z,YAAL,CAAkBC,YAAlB,CAA+B/I,GAApC,EACE,KAAKyJ,WAAL;AAGF,kBAAIc,WAAW,GAAgB,KAAKjC,OAAL,CAAae,aAA5C;AAEA,kBAAImB,MAAJ,EAAoB5S,KAApB;;AACA,kBAAI2S,WAAW,CAACE,WAAhB,EAA6B;AAC3BD,sBAAM,GAAGD,WAAW,CAACG,YAArB,CAD2B,CACM;;AACjC9S,qBAAK,GAAG2S,WAAW,CAACE,WAApB;AACA,qBAAK3B,YAAL,CAAkBE,QAAlB,GAA6B,QAA7B;AACD,eAJD,MAIO,IAAGuB,WAAW,CAACI,WAAf,EAA2B;AAChC,qBAAK7B,YAAL,CAAkBE,QAAlB,GAA6B,WAAWuB,WAAW,CAACI,WAApD;AACAH,sBAAM,GAAGD,WAAW,CAACK,YAAZ,GAA2B,KAAK9B,YAAL,CAAkBC,YAAlB,CAA+B/I,GAA1D,GAAgE,KAAK8I,YAAL,CAAkBC,YAAlB,CAA+B9I,MAAxG;AACArI,qBAAK,GAAG2S,WAAW,CAACI,WAAZ,GAA0B,KAAK7B,YAAL,CAAkBC,YAAlB,CAA+B7I,IAAzD,GAAgE,KAAK4I,YAAL,CAAkBC,YAAlB,CAA+B5I,KAAvG;AACD,eAJM,MAIF;AACH,qBAAK2I,YAAL,CAAkBE,QAAlB,GAA6B,MAA7B;AACA,uBAAO,KAAP;AACD;;AACD,kBAAIta,KAAK,CAAC8b,MAAD,CAAL,IAAiB9b,KAAK,CAACkJ,KAAD,CAA1B,EAAmC;AACjC1I,uBAAO,CAAC8C,IAAR,CAAa,kBAAkBwY,MAAlB,GAA2B,GAA3B,GAAiC5S,KAA9C;AACA,uBAAO,KAAP;AACD;;AAED,kBAAMiT,eAAe,GAAG,KAAK/B,YAAL,CAAkBgC,OAAlB,IAA6BlT,KAA7B,IAAsC,KAAKkR,YAAL,CAAkBiC,QAAlB,IAA8BP,MAA5F;AAEA,kBAAIQ,aAAa,GAAG,CAACpT,KAAK,IAAI,KAAK8R,OAAf,MAA4Bc,MAAM,IAAI,KAAKb,OAA3C,KAAuDkB,eAAvD,KAA2E,KAAKrC,qBAAL,IAA8B,CAAC,KAAKC,qBAA/G,CAApB;;AAEA,kBAAIuC,aAAJ,EAAmB;AACjB,qBAAKlC,YAAL,CAAkBgC,OAAlB,GAA4BlT,KAA5B;AACA,qBAAKkR,YAAL,CAAkBiC,QAAlB,GAA6BP,MAA7B;AACA,oBAAIS,IAAI,GAAG,KAAKvC,eAAhB;AACA,oBAAIwC,IAAI,GAAG,KAAKvC,eAAhB;;AACA,oBAAI,KAAKgB,OAAL,IAAgBva,SAApB,EAA+B;AAC7B,uBAAKuZ,eAAL,GAAuB,KAAKgB,OAA5B;AACD,iBAFD,MAEO;AACL,uBAAKhB,eAAL,GAAuBjS,IAAI,CAACyU,KAAL,CAAWX,MAAM,IAAI,0DAAc,KAAKjB,cAAL,CAAoB6B,cAAtC,CAAjB,CAAvB;AACD;;AACD,oBAAI,KAAK1B,OAAL,IAAgBta,SAApB,EAA+B;AAC7B,uBAAKsZ,eAAL,GAAuB,KAAKgB,OAA5B;AACD,iBAFD,MAEO;AACL,uBAAKhB,eAAL,GAAuBhS,IAAI,CAACyU,KAAL,CAAWvT,KAAK,IAAI,gEAAoB,KAAK2R,cAAL,CAAoB8B,YAA5C,CAAhB,CAAvB;AACD;;AAED,oBAAIC,cAAc,GAAG,KAAK5C,eAAL,IAAwB,KAAKC,eAAlD;AACA,oBAAI4C,sBAAsB,GAAGN,IAAI,IAAI,KAAKvC,eAAb,IAAgCwC,IAAI,IAAI,KAAKvC,eAA1E;;AACA,oBAAI2C,cAAc,IAAIC,sBAAtB,EAA8C;AAC5C,sBAAI;AAEF,wBAAIC,QAAQ,GAAG,KAAKjC,cAAL,CAAoBkC,WAApB,CAAgCzS,KAAhC,CAAsC,IAAtC,CAAf;AACA,wBAAI0S,WAAW,GAAG,KAAKnC,cAAL,CAAoBoC,cAApB,CAAmC3S,KAAnC,CAAyC,IAAzC,CAAlB;AAEA,wBAAI4S,QAAQ,GAAG,KAAKC,OAAL,CAAa,KAAKnD,eAAlB,CAAf;AACA,wBAAIoD,QAAQ,GAAG,KAAKD,OAAL,CAAa,KAAKlD,eAAlB,CAAf;AAGA,yBAAKC,OAAL,GAAe;AACb5I,yBAAG,EAAEwL,QAAQ,CAACnc,GAAT,CAAa,UAAC0c,CAAD;AAAA,+BAAOH,QAAQ,CAACvc,GAAT,CAAa,UAACmG,CAAD;AAAA,iCAAOuW,CAAP;AAAA,yBAAb,EAAuBjI,IAAvB,CAA4B,EAA5B,CAAP;AAAA,uBAAb,EAAqDA,IAArD,CAA0D,IAA1D,CADQ;AAEb7D,4BAAM,EAAEyL,WAAW,CAACrc,GAAZ,CAAgB,UAAC0c,CAAD;AAAA,+BAAOH,QAAQ,CAACvc,GAAT,CAAa,UAACmG,CAAD;AAAA,iCAAOuW,CAAP;AAAA,yBAAb,EAAuBjI,IAAvB,CAA4B,EAA5B,CAAP;AAAA,uBAAhB,EAAwDA,IAAxD,CAA6D,IAA7D,CAFK;AAGb5D,0BAAI,EAAE4L,QAAQ,CAACzc,GAAT,CAAa,UAACmG,CAAD;AAAA,+BAAO,OAAI,CAAC+T,cAAL,CAAoByC,YAA3B;AAAA,uBAAb,EAAsDlI,IAAtD,CAA2D,IAA3D,CAHO;AAIb3D,2BAAK,EAAE2L,QAAQ,CAACzc,GAAT,CAAa,UAACmG,CAAD;AAAA,+BAAO,OAAI,CAAC+T,cAAL,CAAoB0C,aAA3B;AAAA,uBAAb,EAAuDnI,IAAvD,CAA4D,IAA5D;AAJM,qBAAf;AAMA,yBAAK2E,qBAAL,GAA6B,IAA7B;AACA,2BAAO,IAAP;AACD,mBAjBD,CAiBE,OAAOxZ,CAAP,EAAU;AACVC,2BAAO,CAACC,KAAR,CAAcF,CAAd;AACA,2BAAO,IAAP;AACD;AACF;AACF;AACF;AArPH;AAAA;AAAA,oDAuPuB;AAAA;;AACnB,kBAAI,KAAKuZ,qBAAL,IAA8B,KAAKC,qBAAvC,EACE,KAAKzG,MAAL,CAAYM,iBAAZ,CAA8B,YAAM;AAClC,oBAAI8H,OAAO,GAACpD,UAAU,CAAC,YAAM;AAC3B,sBAAI;AACF,2BAAI,CAACmD,yBAAL;;AACAG,gCAAY,CAACF,OAAD,CAAZ;AACD,mBAHD,CAGE,OAAOnb,CAAP,EAAU;AACVC,2BAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,iBAPqB,EAOnB,GAPmB,CAAtB;;AAQA,uBAAI,CAACga,OAAL,CAAaiB,IAAb,CAAkBE,OAAlB;AACD,eAVD;AAWH;AApQH;AAAA;AAAA,kDAuQwB5b,IAvQxB,EAuQoC;AAEhC,kBAAIN,MAAM,CAACsC,IAAP,CAAY,uEAAZ,EAA6BoT,QAA7B,CAAsCpV,IAAI,GAAG,cAA7C,CAAJ,EACE,OAAO,uEAAe,CAACA,IAAI,GAAG,cAAR,CAAtB,CAH8B,CAGe;;AAE/C,kBAAIN,MAAM,CAACsC,IAAP,CAAY,uEAAZ,EAA6BoT,QAA7B,CAAsCpV,IAAtC,CAAJ,EACE,OAAO,uEAAe,CAACA,IAAD,CAAtB,CAN8B,CAMF;;AAE9B,kBAAIA,IAAI,KAAK,QAAb,EAAuB;AACrB,uBAAO,sGAAP;AACD;;AACD,kBAAIA,IAAI,KAAK,KAAb,EAAoB;AAClB,uBAAO,8FAAP;AACD;;AACD,kBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,uBAAO,qGAAP;AACD;;AACD,qBAAO,8FAAP;AACD;AAzRH;AAAA;AAAA,wCA2Rc4Q,UA3Rd,EA2RoC;AAAA;;AAChC,kBAAI8M,KAAK,GAAQ;AAAC1L,wBAAQ,EAAE,UAAX;AAAuBR,mBAAG,EAAE,CAA5B;AAA+BE,oBAAI,EAAE;AAArC,eAAjB;AACAd,wBAAU,CAAChR,OAAX,CAAmB,UAAAmW,GAAG,EAAI;AACxB,oBAAIA,GAAG,KAAK,MAAZ,EAAoB;AAClB2H,uBAAK,CAAChM,IAAN,GAAa,CAAC,OAAI,CAAC4I,YAAL,CAAkBC,YAAlB,CAA+B7I,IAAhC,GAAuC,IAApD;AACAgM,uBAAK,CAACtU,KAAN,GAAc,OAAI,CAACkR,YAAL,CAAkBC,YAAlB,CAA+B7I,IAA/B,GAAsC,IAApD;AACD;;AACD,oBAAIqE,GAAG,KAAK,OAAZ,EAAqB;AACnB2H,uBAAK,CAACtU,KAAN,GAAc,OAAI,CAACkR,YAAL,CAAkBC,YAAlB,CAA+B5I,KAA/B,GAAuC,IAArD;AACA+L,uBAAK,CAAC/L,KAAN,GAAc,CAAC,OAAI,CAAC2I,YAAL,CAAkBC,YAAlB,CAA+B5I,KAAhC,GAAwC,IAAtD;AACA+L,uBAAK,CAAChM,IAAN,GAAa9Q,SAAb,CAHmB,CAInB;AACA;;AACA;;;AAGD;;AACD,oBAAImV,GAAG,KAAK,KAAZ,EAAmB;AACjB2H,uBAAK,CAAClM,GAAN,GAAY,CAAC,OAAI,CAAC8I,YAAL,CAAkBC,YAAlB,CAA+B/I,GAAhC,GAAsC,IAAlD;AACA,sBAAIZ,UAAU,CAACtO,MAAX,IAAqB,CAAzB,EACEob,KAAK,CAACtU,KAAN,GAAe,OAAI,CAAC8Q,eAAL,GAAuB,6DAAxB,GAA6C,IAA3D;AACH;;AACD,oBAAInE,GAAG,KAAK,QAAZ,EAAsB;AACpB2H,uBAAK,CAACjM,MAAN,GAAe,CAAC,OAAI,CAAC6I,YAAL,CAAkBC,YAAlB,CAA+B9I,MAAhC,GAAyC,IAAxD;AACA,sBAAIb,UAAU,CAACtO,MAAX,IAAqB,CAAzB,EACEob,KAAK,CAACtU,KAAN,GAAe,OAAI,CAAC8Q,eAAL,GAAuB,6DAAxB,GAA6C,IAA3D;AACFwD,uBAAK,CAAClM,GAAN,GAAY5Q,SAAZ;AACD;AACF,eA1BD;AA2BA,qBAAO8c,KAAP;AACD;AAzTH;AAAA;AAAA,0CA2Ta;AAET,mBAAKjD,OAAL,CAAa7a,OAAb,CAAqB,UAACgc,OAAD,EAAW;AAE9BE,4BAAY,CAACF,OAAD,CAAZ;AACD,eAHD;AAID;AAjUH;AAAA;AAAA,gCA2Ec;AACV,kBAAIhR,SAAS,GAAG;AACd+S,sBAAM,EAAE,mBADM;AAEdC,8BAAc,EAAE,KAAKtD,YAAL,CAAkBC,YAAlB,CAA+B/I,GAA/B,GAAqC,IAFvC;AAGdqM,iCAAiB,EAAE,KAAKvD,YAAL,CAAkBC,YAAlB,CAA+B9I,MAA/B,GAAwC,IAH7C;AAIdqM,gCAAgB,EAAE,KAAKxD,YAAL,CAAkBC,YAAlB,CAA+B5I,KAA/B,GAAuC,IAJ3C;AAKdoM,+BAAe,EAAE,KAAKzD,YAAL,CAAkBC,YAAlB,CAA+B7I,IAA/B,GAAsC,IALzC;AAMdsK,sBAAM,EAAE,KAAKb,OAAL,GAAgB,KAAKA,OAAL,GAAe,KAAKJ,cAAL,CAAoB6B,cAAnC,GAAoD,uDAArD,GAAoE,IAAnF,GAA0Fhc,SANpF;AAOdwI,qBAAK,EAAE,KAAK8R,OAAL,GAAgB,KAAKA,OAAL,GAAe,KAAKH,cAAL,CAAoB8B,YAAnC,GAAkD,6DAAnD,GAAsE,IAArF,GAA0Fjc;AAPnF,eAAhB;AAWA,qBAAOgK,SAAP;AAED;AAzFH;AAAA;AAAA,gCAwIiB;AACb,qBAAOoT,IAAI,CAACC,SAAL,CAAe,KAAK3D,YAApB,CAAP;AACD;AA1IH;;AAAA;AAAA;;;2BAMaV,oB,EAAoB,gI,EAAA,yH,EAAA,wH,EAAA,qH;AAAA,S;;;gBAApBA,oB;AAAoB,mN;AAAA,qB;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACxBjC;;AAGA;;AASA;;AAG+D;;AAAkC;;AAE/F;;AAIE;AAAA,uBAAS,gBAAiB,KAAjB,EAAsB,MAAtB,CAAT;AAAuC,eAAvC;;AACD;;AAAe;;AAEhB;;AAIC;;AAAmC;;AAGpC;;AAGM;AAAA,uBAAS,gBAAiB,OAAjB,EAAwB,MAAxB,CAAT;AAAyC,eAAzC;;AAA2C;;AAAiB;;AAKpE;;AAQA;;AAGI;;AAIC;;AAAqC;;AACxC;;AAOA;;AAIC;;AAAsC;;;;AA/D3B;;AAAA;;AAWR;;AAAA,2KAAuC,SAAvC,EAAuC,yDAAvC;;AACyD;;AAAA;;AAI3D;;AAAA,yIAAoD,SAApD,EAAoD,uFAApD;;AAGD;;AAAA;;AAIC;;AAAA,8IAAyD,SAAzD,EAAyD,uFAAzD;;AAED;;AAAA;;AAIK;;AAAA,2IAAsD,SAAtD,EAAsD,uFAAtD;;AAE2C;;AAAA;;AAM9C;;AAAA;;AAYC;;AAAA,2KAA0C,SAA1C,EAA0C,4DAA1C;;AAED;;AAAA;;AAGD;;AAAA;;AAOA;;AAAA,iJAA4D,SAA5D,EAA4D,uFAA5D;;AAED;;AAAA;;;;;;;;ODhDH;;;;;wEAMaA,oB,EAAoB;gBANhC,uDAMgC;iBANtB;AACTlR,oBAAQ,EAAE,qIADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTuV,2BAAe,EAAE,sEAAwBC,MAHhC;AAIT5U,qBAAS,EAAE,CAAC,8BAAD;AAJF,W;AAMsB,U;;;;;;;;;;;AAQ/BvJ,cAAI;kBADH;AACG,Y;AAGJga,+BAAqB;kBADpB;AACoB,Y;AAIrBoE,sBAAY,EAAE,CAAF;kBADX;AACW,WAAE,C;AAGdlD,iBAAO,EAAE,CAAF;kBADN;AACM,WAAE,C;AAGTC,iBAAO,EAAE,CAAF;kBADN;AACM,WAAE,C;AAsBTP,4BAAkB,EAAE,CAAF;kBADjB;AACiB,WAAE,C;AAGpBG,wBAAc,EAAE,CAAF;kBADb;AACa,WAAE,C;AAmBhBL,qBAAW,EAAE,CAAF;kBADV;AACU,WAAE,C;AAIV9P,mBAAS;kBADX,yDACW;mBADC,O;AACD,Y;AAgBZ+P,eAAK;kBADJ;AACI,Y;AA6CD0D,kBAAQ;kBADX,yDACW;mBADC,mB;AACD;;;;;;;;;;;;;;;;;;;AE1Jd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAqBA;AAAA;AAAA;AAAA,YAuBaC,SAvBb;AAAA;AAAA;;;gBAuBaA,S;AAAS,sBAFR,2DAEQ;;;;6BAATA,S;AAAS,W;AAAA,qBAHT,E;AAAE,oBAVJ,CACP,uEADO,EAEP,0DAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,sEANO,EAOP,+FAPO,EAQP,qEARO,EAQM,gFARN,CAUI;;;OApBf;;;4HAuBaA,S,EAAS;AAAA,yBArBlB,2DAqBkB,EApBlB,+GAoBkB,EAnBlB,0GAmBkB,EAlBlB,4EAkBkB,EAjBlB,oFAiBkB,EAhBlB,6FAgBkB;AAhBG,oBAIrB,uEAJqB,EAKrB,0DALqB,EAMrB,oEANqB,EAOrB,qEAPqB,EAQrB,4FARqB,EASrB,sEATqB,EAUrB,+FAVqB,EAWrB,qEAXqB,EAWR,gFAXQ;AAgBH,S;AALQ,O;;;;;wEAKjBA,S,EAAS;gBAvBrB,sDAuBqB;iBAvBZ;AACR1b,wBAAY,EAAE,CACZ,2DADY,EAEZ,+GAFY,EAGZ,0GAHY,EAIZ,4EAJY,EAKZ,oFALY,EAMZ,6FANY,CADN;AAURE,mBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,sEANO,EAOP,+FAPO,EAQP,qEARO,EAQM,gFARN,CAVD;AAoBRyb,qBAAS,EAAE,EApBH;AAqBRC,qBAAS,EAAE,CAAC,2DAAD;AArBH,W;AAuBY,U;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA;AAAA;AAAA;AAAA,YAGuBC,kBAHvB;AAKE,sCAAsB3I,qBAAtB,EAAoE;AAAA;;AAA9C,iBAAAA,qBAAA,GAAAA,qBAAA;AAMtB,iBAAAvE,WAAA,GAAc;AACZvR,kBAAI,EAAE,GADM;AAEZ+W,0BAAY,EAAE,OAFF;AAGZD,uBAAS,EAAE,OAHC;AAIZD,wBAAU,EAAE;AAJA,aAAd;AAOA,iBAAA6H,SAAA,GAAY,EAAZ;AACA,iBAAAC,eAAA,GAAuB,MAAvB;AAEA,iBAAAC,kBAAA,GAA0B,MAA1B;AACA,iBAAAC,gBAAA,GAAwB,MAAxB;AACA,iBAAAC,iBAAA,GAAyB,MAAzB;AACA,iBAAAC,gBAAA,GAAwB,MAAxB;AACA,iBAAAC,iBAAA,GAAyB,MAAzB;AAEA,iBAAAC,eAAA,GAAuB,MAAvB;AAEA,iBAAAC,kBAAA,GAA0B,MAA1B;AAEA,iBAAAlJ,wBAAA,GAAiC,MAAjC;AACA,iBAAAC,yBAAA,GAAiC,MAAjC;AAEA,iBAAAC,qBAAA,GAA6B,MAA7B;AACA,iBAAAC,sBAAA,GAA8B,MAA9B;AA7BE,iBAAKuI,SAAL,GAAiBhf,MAAM,CAACsC,IAAP,CAAY,KAAKuP,WAAjB,CAAjB;AACA,iBAAKuN,iBAAL,GAAyB,KAAKhJ,qBAAL,CAA2BqJ,eAA3B,CAA2C,KAAKN,gBAAhD,EAAkE,KAAKH,SAAvE,CAAzB;AACA,iBAAKM,iBAAL,GAAyB,KAAKlJ,qBAAL,CAA2BqJ,eAA3B,CAA2C,KAAKJ,gBAAhD,EAAkE,KAAKL,SAAvE,CAAzB;AACD;;AATH;AAAA;AAAA,uCAqCa1O,SArCb,EAqCgCa,IArChC,EAqC2C;AACvC,kBAAI2F,YAAY,GAAGxG,SAAS,CAACyG,WAAV,MAA2B5F,IAAI,GAAG,MAAH,GAAY,MAA3C,IAAqD,UAAxE;;AAEA,kBAAI4C,IAAI,mCAAY,KAAKlC,WAAjB;AAA8BvR,oBAAI,EAAE6Q,IAAI,IAAIA,IAAI,CAAC7Q,IAAL,IAAa,MAArB,GAA8B6Q,IAAI,CAAC7Q,IAAnC,GAA0C;AAA9E,gBAAR;;AACAyT,kBAAI,CAACkD,YAAL,GAAoBlD,IAAI,CAACzT,IAAzB;AACAyT,kBAAI,CAACmD,kBAAL,GAA0BnD,IAAI,CAACoD,UAA/B;;AACA,kBAAIhG,IAAI,IAAIA,IAAI,CAAC7Q,IAAL,IAAa,MAAzB,EAAiC;AAC/ByT,oBAAI,CAACqD,SAAL,GAAiBrD,IAAI,CAACqD,SAAL,CAAe1X,OAAf,CAAuB,IAAvB,EAA6B,GAA7B,CAAjB;AACAqU,oBAAI,CAACsD,YAAL,GAAoBtD,IAAI,CAACsD,YAAL,CAAkB3X,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAApB;AACAqU,oBAAI,CAACoD,UAAL,GAAkBpD,IAAI,CAACoD,UAAL,CAAgBzX,OAAhB,CAAwB,IAAxB,EAA8B,GAA9B,CAAlB;AACAqU,oBAAI,CAACmD,kBAAL,GAA0BnD,IAAI,CAACoD,UAA/B;AACD;;AACD,qBAAO,KAAKf,qBAAL,CAA2BkB,cAA3B,CAA0C,KAAKR,YAAL,CAA1C,EAA8D/C,IAA9D,CAAP;AACD;AAlDH;AAAA;AAAA,yCAoDe2L,IApDf,EAoD6BC,IApD7B,EAoD2C;AACvC,kBAAI7I,YAAY,GAAG6I,IAAI,CAAC5I,WAAL,KAAqB,KAAK6I,UAAL,CAAgBF,IAAI,CAAC3I,WAAL,EAAhB,CAArB,GAA2D,gBAA9E;AACA,kBAAIhD,IAAI,GAAG,KAAKlC,WAAhB;AACA,qBAAO,KAAKuE,qBAAL,CAA2BkB,cAA3B,CAA0C,KAAKR,YAAL,CAA1C,EAA8D/C,IAA9D,CAAP;AAED;AAzDH;AAAA;AAAA,uCA2DayB,CA3Db,EA2DgB;AACZ,kBAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,EAAP;AAC3B,qBAAOA,CAAC,CAACqK,MAAF,CAAS,CAAT,EAAYxO,WAAZ,KAA4BmE,CAAC,CAAC3S,KAAF,CAAQ,CAAR,CAAnC;AACD;AA9DH;;AAAA;AAAA;;;2BAGuBkc,kB,EAAkB,kJ;AAAA,S;;;iBAAlBA,kB;AAAkB,mBAAlBA,kBAAkB,K;AAAA,sBAF3B;;;OADd;;;;;wEAGuBA,kB,EAAkB;gBAHxC,wDAGwC;iBAH7B;AACVvY,sBAAU,EAAE;AADF,W;AAG6B,U;;;;;;;;;;;;;;;;;;;;;;ACRzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAasZ,c,GAAb;AAAA;;AACE,aAAAvC,WAAA,GAAc,EAAd;AACA,aAAAE,cAAA,GAAiB,EAAjB;AACA,aAAAK,YAAA,GAAe,EAAf;AACA,aAAAC,aAAA,GAAgB,EAAhB;AACA,aAAAgC,eAAA,GAAkB,EAAlB;AACA,aAAAC,gBAAA,GAAmB,EAAnB;AACA,aAAAC,kBAAA,GAAqB,EAArB;AACA,aAAAC,mBAAA,GAAsB,EAAtB;AACA,aAAApE,aAAA,GAAgB,CAAhB;AACA,aAAAqB,YAAA,GAAe,CAAf;AACA,aAAAxB,aAAA,GAAgB,CAAhB;AACA,aAAAuB,cAAA,GAAiB,CAAjB;AACA,aAAArB,cAAA,GAAiB,CAAjB;AACA,aAAAD,gBAAA,GAAmB,CAAnB;AACD,O;;AAGM,eAASuE,uBAAT,CAAiChL,GAAjC,EAAsCiL,eAAtC,EAAuDjD,YAAvD,EACiCkD,gBADjC,EACmDnD,cADnD,EACiE;AACtE,YAAI;AACF,cAAIoD,SAAS,GAAG,IAAIR,cAAJ,EAAhB;AAEA,cAAIS,IAAI,GAAGpL,GAAG,CAACrK,KAAJ,CAAU,IAAV,CAAX;;AAEA,eAAK,IAAI0G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6O,gBAApB,EAAsC7O,CAAC,EAAvC,EAA2C;AACzC,iBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6O,eAApB,EAAqC7O,CAAC,EAAtC,EAA0C;AACxC+O,uBAAS,CAACP,eAAV,IAA6BQ,IAAI,CAAC/O,CAAD,CAAJ,CAAQD,CAAR,CAA7B;AACD;;AACD+O,qBAAS,CAACP,eAAV,IAA6B,IAA7B;;AACA,iBAAK,IAAIxO,GAAC,GAAG6O,eAAb,EAA8B7O,GAAC,GAAG6O,eAAe,GAAGjD,YAApD,EAAkE5L,GAAC,EAAnE,EAAuE;AACrE+O,uBAAS,CAAC/C,WAAV,IAAyBgD,IAAI,CAAC/O,CAAD,CAAJ,CAAQD,GAAR,CAAzB;AACD;;AACD+O,qBAAS,CAAC/C,WAAV,IAAyB,IAAzB;;AACA,iBAAK,IAAIhM,GAAC,GAAG6O,eAAe,GAAGjD,YAA/B,EAA6C5L,GAAC,GAAGgP,IAAI,CAAC/O,CAAD,CAAJ,CAAQ5O,MAAzD,EAAiE2O,GAAC,EAAlE,EAAsE;AACpE+O,uBAAS,CAACN,gBAAV,IAA8BO,IAAI,CAAC/O,CAAD,CAAJ,CAAQD,GAAR,CAA9B;AACD;;AACD+O,qBAAS,CAACN,gBAAV,IAA8B,IAA9B;AACD;;AAED,eAAK,IAAIxO,EAAC,GAAG6O,gBAAb,EAA+B7O,EAAC,GAAG6O,gBAAgB,GAAGnD,cAAtD,EAAsE1L,EAAC,EAAvE,EAA2E;AACzE,iBAAK,IAAID,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6O,eAApB,EAAqC7O,GAAC,EAAtC,EAA0C;AACxC+O,uBAAS,CAACxC,YAAV,IAA0ByC,IAAI,CAAC/O,EAAD,CAAJ,CAAQD,GAAR,CAA1B;AACD;;AACD+O,qBAAS,CAACxC,YAAV,IAA0B,IAA1B;;AACA,iBAAK,IAAIvM,GAAC,GAAG6O,eAAe,GAAGjD,YAA/B,EAA6C5L,GAAC,GAAGgP,IAAI,CAAC/O,EAAD,CAAJ,CAAQ5O,MAAzD,EAAiE2O,GAAC,EAAlE,EAAsE;AACpE+O,uBAAS,CAACvC,aAAV,IAA2BwC,IAAI,CAAC/O,EAAD,CAAJ,CAAQD,GAAR,CAA3B;AACD;;AACD+O,qBAAS,CAACvC,aAAV,IAA2B,IAA3B;AACD;;AAED,eAAK,IAAIvM,GAAC,GAAG6O,gBAAgB,GAAGnD,cAAhC,EAAgD1L,GAAC,GAAG+O,IAAI,CAAC3d,MAAzD,EAAiE4O,GAAC,EAAlE,EAAsE;AACpE,iBAAK,IAAID,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6O,eAApB,EAAqC7O,GAAC,EAAtC,EAA0C;AACxC+O,uBAAS,CAACL,kBAAV,IAAgCM,IAAI,CAAC/O,GAAD,CAAJ,CAAQD,GAAR,CAAhC;AACD;;AACD+O,qBAAS,CAACL,kBAAV,IAAgC,IAAhC;;AACA,iBAAK,IAAI1O,GAAC,GAAG6O,eAAb,EAA8B7O,GAAC,GAAG6O,eAAe,GAAGjD,YAApD,EAAkE5L,GAAC,EAAnE,EAAuE;AACrE+O,uBAAS,CAAC7C,cAAV,IAA4B8C,IAAI,CAAC/O,GAAD,CAAJ,CAAQD,GAAR,CAA5B;AACD;;AAED+O,qBAAS,CAAC7C,cAAV,IAA4B,IAA5B;;AACA,iBAAK,IAAIlM,IAAC,GAAG6O,eAAe,GAAGjD,YAA/B,EAA6C5L,IAAC,GAAGgP,IAAI,CAAC/O,GAAD,CAAJ,CAAQ5O,MAAzD,EAAiE2O,IAAC,EAAlE,EAAsE;AACpE+O,uBAAS,CAACJ,mBAAV,IAAiCK,IAAI,CAAC/O,GAAD,CAAJ,CAAQD,IAAR,CAAjC;AACD;;AACD+O,qBAAS,CAACJ,mBAAV,IAAiC,IAAjC;AACD;;AACDlgB,gBAAM,CAACsC,IAAP,CAAYge,SAAZ,EAAuBpgB,OAAvB,CAA+B,UAACsgB,CAAD,EAAO;AAClC,gBAAIF,SAAS,CAACE,CAAD,CAAT,CAAa3d,KAAjB,EAAwB;AACtB,kBAAGyd,SAAS,CAACE,CAAD,CAAT,CAAaje,QAAb,CAAsB,IAAtB,CAAH,EACE+d,SAAS,CAACE,CAAD,CAAT,GAAeF,SAAS,CAACE,CAAD,CAAT,CAAa3d,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAAf,CAFoB,CAGtB;;AACA,kBAAK2d,CAAC,IAAI,gBAAL,IAAyBA,CAAC,IAAI,aAAnC,EAAmD;AACjDF,yBAAS,CAACE,CAAD,CAAT,IAAgB,GAAhB;AACD;AACF;AACF,WATH;AAWA,cAAIC,iBAAiB,GAAGH,SAAS,CAACN,gBAAV,CAA2BlV,KAA3B,CAAiC,IAAjC,EAAuC,CAAvC,CAAxB;;AACA,cAAIuQ,cAAc,mCACbiF,SADa;AAEhBxE,yBAAa,EAAEsE,eAFC;AAGhBjD,wBAAY,EAAZA,YAHgB;AAIhBD,0BAAc,EAAdA,cAJgB;AAKhBrB,0BAAc,EAAE4E,iBAAiB,CAAC7d,MAAlB,IAA6B0d,SAAS,CAACN,gBAAV,CAA2BtK,QAA3B,CAAoC,IAApC,IAA4C,CAA5C,GAAgD,CAA7E,CALA;AAMhBiG,yBAAa,EAAE0E,gBANC;AAOhBzE,4BAAgB,EAAE0E,SAAS,CAACL,kBAAV,CAA6BnV,KAA7B,CAAmC,IAAnC,EAAyClI;AAP3C,YAAlB;;AAYA,iBAAOyY,cAAP;AACD,SAvED,CAuEE,OAAOta,CAAP,EAAU;AACVC,iBAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;;;;;;;;;;;;;;;;AC9FD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;AAA8C;;;;;;AAC9C;;;;;;AAAgD;;;;ADElD;AAAA;AAAA;AAAA,YAKa2f,cALb;AAgBE,kCAAoB9Y,YAApB,EAAgD;AAAA;;AAAA;;AAA5B,iBAAAA,YAAA,GAAAA,YAAA;AARpB,iBAAA+Y,EAAA,GAAK,KACH,kBADG,GAEH,oBAFF,CAQgD,CALhD;;AACA,iBAAAC,GAAA,GAAM,KACJ,kBADI,GAEJ,oBAFF;AAME,iBAAKhZ,YAAL,CAAkBiZ,gBAAlB,CAAmC,UAAC9M,IAAD,EAAU;AAE3C,qBAAI,CAAClQ,OAAL,GAAekQ,IAAf;AACD,aAHD;AAID;;AAtBH;AAAA;AAAA,uCAwBU,CAGP;AA3BH;AAAA;AAAA,0CA6Ba;AACT,mBAAK+M,iBAAL,CAAuBpY,WAAvB;AACD;AA/BH;AAAA;AAAA,qCAiCW;AACP,mBAAKd,YAAL,CAAkBmZ,WAAlB;AACD;AAnCH;;AAAA;AAAA;;;2BAKaL,c,EAAc,oJ;AAAA,S;;;gBAAdA,c;AAAc,mC;AAAA,kB;AAAA,iB;AAAA,2S;AAAA;AAAA;ACT3B;;AAAkB;AAAA,uBAAS,IAAAM,MAAA,EAAT;AAAiB,eAAjB;;AAChB;;AACA;;AACF;;;;AAFiB;;AAAA;;AACA;;AAAA;;;;;;;ODEjB;;;;;wEAKaN,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT1X,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTY,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACUI;;AACE;;AACA;;AAAiC;;AAAmD;;AACtF;;;;;;AADmC;;AAAA;;;;;;AAGnC;;AACE;;AACA;;AACE;;AAAI;;AAAmC;;AACvC;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAyC;;AAC/C;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAEA;;AACE;;AAAK;;AAAsD;;AAC3D;;AAAK;;AAAiD;;AACxD;;;;;;AAEA;;AAAgD;;AAChD;;;;ADjCJ;AAAA;AAAA;AAAA,YAqBaoX,gBArBb;AA0BE,oCAAmBC,qBAAnB,EAAsE;AAAA;;AAAnD,iBAAAA,qBAAA,GAAAA,qBAAA;AAHnB,iBAAAC,qBAAA,GAAgC,CAAhC;AACA,iBAAAC,kBAAA,GAA6B,CAA7B;AAGC;;AA3BH;AAAA;AAAA,uCA6BU,CACP;AA9BH;AAAA;AAAA,iDAgCuB;AACnB,mBAAKD,qBAAL,GAA6B3Y,IAAI,CAACyU,KAAL,CAAY,KAAKmE,kBAAL,GAAwB5Y,IAAI,CAACC,MAAL,EAApC,CAA7B;AACAzH,qBAAO,CAACqD,GAAR,CAAa,KAAK8c,qBAAlB;AACD;AAnCH;;AAAA;AAAA;;;2BAqBaF,gB,EAAgB,yK;AAAA,S;;;gBAAhBA,gB;AAAgB,sC;AAAA,mB;AAAA,iB;AAAA,uS;AAAA;AAAA;ACzB7B;;AAGE;;AAAiC;;AAAwB;;AACzD;;AAGA;;AACE;;AAAK;;AAAmE;;AAC5E;;AACI;;AAKA;;AASA;;AAGA;;AAIA;;AAKA;;AAEA;;AACA;;AACE;;AAAqB;AAAA,uBAAS,IAAAI,kBAAA,EAAT;AAA6B,eAA7B;;AAA+B;;AAAW;;AACjE;;AACF;;AAGF;;;;AArCS;;AAAA;;AAEU;;AAAA;;AAKD;;AAAA;;AASA;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;;;;;;ODhClB;;;;;wEAqBaJ,gB,EAAgB;gBArB5B,uDAqB4B;iBArBlB;AACTjY,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,kBAAM,EAAE,kDAEW,4EAAoB,EAApB,GAAyB,CAFpC,qCAGW,4EAAoB,EAApB,GAAyB,CAHpC,sCAIY,sEAAc,CAAd,GAAkB,CAJ9B,gEAMS,mEANT,gBAM0B,yEAN1B;AAHC,W;AAqBkB,U;;;;;;;;;;;;;;;;;;;;;;AEzB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMoY,mBAAmB,GAAG,EAA5B;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,gBAAgB,GAAG,CAAzB;AACA,UAAMC,iBAAiB,GAAG,CAA1B;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;AACE;;AACF;;;;;;AADiB;;AAAA;;;;;;AAGf;;;;;;;;;;AACA;;;;;;AANJ;;AACE;;AAGA;;AAMF;;;;;;;;AATgB;;AAAA,kJAAyF,UAAzF,EAAyF,GAAzF;;;;;;AAFlB;;AACE;;AAWF;;;;;;AAXgB;;AAAA;;;;ADOlB;AAAA;AAAA;AAAA,YAWaC,kBAXb;AAgBE,sCAAmBvR,kBAAnB,EAAkEC,aAAlE,EAA6G;AAAA;;AAA1F,iBAAAD,kBAAA,GAAAA,kBAAA;AAA+C,iBAAAC,aAAA,GAAAA,aAAA;AASlE,iBAAAoJ,kBAAA,GAA6B,CAAC,CAA9B;AAPC;;AAlBH;AAAA;AAAA,wCAoBcmI,OApBd,EAoB4D;AACxD,mBAAKC,iBAAL;AACD;AAtBH;AAAA;AAAA,uCA4BU;AACN,mBAAKA,iBAAL;AACD;AA9BH;AAAA;AAAA,gDAgC6B;AACzB,kBAAI,KAAKpI,kBAAL,KAA4B,CAAC,CAAjC,EAAoC;AAClC,qBAAKqI,WAAL,GAAmB,KAAKlI,YAAL,CAAkBjK,KAAlB,CAAwB/E,OAA3C;AACD,eAFD,MAEO;AACL,qBAAKkX,WAAL,GAAmB,IAAInhB,KAAJ,EAAnB;AACA,oBAAIkW,QAAQ,GAAG,KAAK+C,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAxC;;AACA,qBAAK,IAAIkL,EAAE,GAAG,CAAC,KAAKtI,kBAApB,EAAwCsI,EAAE,IAAI,KAAKtI,kBAAnD,EAAuEsI,EAAE,EAAzE,EAA6E;AAC3E,uBAAKD,WAAL,CAAiB,KAAKrI,kBAAL,GAA0BsI,EAA3C,IAAiD,IAAIphB,KAAJ,EAAjD;;AACA,uBAAK,IAAIqhB,EAAE,GAAG,CAAC,KAAKvI,kBAApB,EAAwCuI,EAAE,IAAI,KAAKvI,kBAAnD,EAAuEuI,EAAE,EAAzE,EAA6E;AAE3E,wBAAIxQ,CAAC,GAAW,IAAIqF,QAAQ,CAACrF,CAAb,GAAiBwQ,EAAjC;AACA,wBAAIvQ,CAAC,GAAW,IAAIoF,QAAQ,CAACpF,CAAb,GAAiBsQ,EAAjC;AACA,wBAAIE,EAAE,GAAG,IAAI,KAAKxI,kBAAT,GAA8BuI,EAAvC;AACA,wBAAIE,EAAE,GAAG,IAAI,KAAKzI,kBAAT,GAA8BsI,EAAvC;AAEA,wBAAIrR,IAAI,GAAG,KAAKkJ,YAAL,CAAkBjK,KAAlB,CAAwBwS,KAAxB,CAA8B3Q,CAA9B,EAAiCC,CAAjC,CAAX;AACA,yBAAKqQ,WAAL,CAAiBI,EAAjB,EAAqBD,EAArB,IAA2BvR,IAA3B;AACD;AACF;AACF;AACF;AApDH;AAAA;AAAA,0CAuDgBc,CAvDhB,EAuDmBC,CAvDnB,EAuDsB;AAElB,kBAAIuQ,EAAE,GAAGxQ,CAAC,GAAG,KAAKoI,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAzB,CAAkCrF,CAA/C;AACA,kBAAIuQ,EAAE,GAAGtQ,CAAC,GAAG,KAAKmI,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAzB,CAAkCpF,CAA/C;AAEA,kBAAI2Q,KAAK,GAAG,CAACJ,EAAE,GAAGD,EAAN,IAAY,gFAAelf,MAAvC;AACA,kBAAIyY,cAAc,GAAG,gFAAe8G,KAAf,CAArB;AACA,qBAAO9G,cAAP;AACD;AA/DH;;AAAA;AAAA;;;2BAWaqG,kB,EAAkB,iJ,EAAA,yK;AAAA,S;;;gBAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,W;AAAA,wF;AAAA,kB;AAAA,iB;AAAA,gR;AAAA;AAAA;ACpB/B;;AACE;;AAaF;;;;AAb8B;;AAAA;;;;;;;ODQ9B;;;;;wEAWaA,kB,EAAkB;gBAX9B,uDAW8B;iBAXpB;AACT1Y,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,kBAAM,EAAE,oGAGoC,4EAAoB,EAHxD,4DAIiC,sEAAc,EAJ/C;AAHC,W;AAWoB,U;;;;;;;AAG7ByQ,sBAAY,EAAE,CAAF;kBADX;AACW,WAAE,C;AAWdH,4BAAkB,EAAE,CAAF;kBADjB;AACiB,WAAE;;;;;;;;;;;;;;;;;;;AElCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA;AAAA;AAAA;AAAA,YAKa4I,mBALb;AASE,uCAAoBjS,kBAApB,EAAoEkS,WAApE,EAAqG;AAAA;;AAAjF,iBAAAlS,kBAAA,GAAAA,kBAAA;AAAgD,iBAAAkS,WAAA,GAAAA,WAAA;AAHpE,iBAAAC,OAAA,GAAkB,kFAAlB;AAKC;;AAXH;AAAA;AAAA,uCAaU;AAAA;;AACN,mBAAKC,YAAL,GAAoB,KAAKF,WAAL,CAAiBzK,YAAjB,CAA8BxS,SAA9B,CAAwC,UAACod,CAAD,EAAO;AACjE,uBAAI,CAACF,OAAL,GAAeE,CAAf;AACD,eAFmB,CAApB;AAGD;AAjBH;AAAA;AAAA,0CAmBa;AACT,mBAAKD,YAAL,CAAkB7Z,WAAlB;AACD;AArBH;AAAA;AAAA,iCAuBO4H,SAvBP,EAuB0B;AACtB,mBAAKH,kBAAL,CAAwBO,IAAxB,CAA6BJ,SAA7B;AACD;AAzBH;AAAA;AAAA,sCA4BYC,KA5BZ,EA4BkC;AAC9B,kBAAIA,KAAK,CAACvO,GAAN,KAAc,OAAlB,EAA2B;AACzB,qBAAKmO,kBAAL,CAAwBsS,OAAxB;AACD;;AACD,kBAAIlS,KAAK,CAACvO,GAAN,KAAc,SAAlB,EAA6B;AAC3B,qBAAKmO,kBAAL,CAAwBO,IAAxB,CAA6B,KAA7B;AACD;;AACD,kBAAIH,KAAK,CAACvO,GAAN,KAAc,WAAlB,EAA+B;AAC7B,qBAAKmO,kBAAL,CAAwBO,IAAxB,CAA6B,QAA7B;AACD;;AACD,kBAAIH,KAAK,CAACvO,GAAN,KAAc,WAAlB,EAA+B;AAC7B,qBAAKmO,kBAAL,CAAwBO,IAAxB,CAA6B,MAA7B;AACD;;AACD,kBAAIH,KAAK,CAACvO,GAAN,KAAc,YAAlB,EAAgC;AAC9B,qBAAKmO,kBAAL,CAAwBO,IAAxB,CAA6B,OAA7B;AACD;AACF;AA5CH;AAAA;AAAA,mCA8CM;AACF,mBAAKP,kBAAL,CAAwBsS,OAAxB;AACD;AAhDH;;AAAA;AAAA;;;2BAKaL,mB,EAAmB,iJ,EAAA,iJ;AAAA,S;;;gBAAnBA,mB;AAAmB,sC;AAAA;AAAA;;uBAAnB,qB;AAAiB,e,EAAA,K,EAAA,+D;;;;;;;;ACT9B;;AACE;;AAAK;;AAAgC;;AACrC;;AACE;;AAAM;;AAAyB;;AAC/B;;AAAkB;AAAA,uBAAS,IAAA1R,IAAA,CAAK,KAAL,CAAT;AAAoB,eAApB;;AAAsB;;AAAG;;AAC3C;;AAAM;;AAAG;;AACX;;AACA;;AAAK;;AAAqB;;AAC1B;;AACE;;AAAM;;AAAC;;AACP;;AAAkB;AAAA,uBAAS,IAAAA,IAAA,CAAK,MAAL,CAAT;AAAqB,eAArB;;AAAuB;;AAAG;;AAC5C;;AAAM;;AAAC;;AACP;;AAAkB;AAAA,uBAAS,IAAAA,IAAA,CAAK,QAAL,CAAT;AAAuB,eAAvB;;AAA0B;;AAAG;;AAC/C;;AAAM;;AAAC;;AACP;;AAAkB;AAAA,uBAAS,IAAAA,IAAA,CAAK,OAAL,CAAT;AAAsB,eAAtB;;AAAwB;;AAAG;;AAC7C;;AAAM;;AAAC;;AACP;;AAAkB;AAAA,uBAAS,IAAAI,IAAA,EAAT;AAAe,eAAf;;AAAiB;;AAAO;;AAC1C;;AAAM;;AAAC;;AACT;;AACA;;AAAK;;AAAqB;;AAC1B;;AAAM;;AAAW;;AACjB;;;;AADM;;AAAA;;;;;;;ODhBR;;;;;wEAKasR,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTpZ,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTY,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;AAuB9B6Y,mBAAS;kBADR,0DACQ;mBADK,kB,EAAoB,CAAC,QAAD,C;AACzB;;;;;;;;;;;;;;;;;;;AEhCX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAMA;AAAA;AAAA;AAAA,YAgBaC,uBAhBb;AA4BE,6CAAc;AAAA;;AALP,iBAAAjZ,KAAA,GAAgB,UAAhB;AAMN;;AA7BH;AAAA;AAAA,uCA+BU;AACN,mBAAKqB,UAAL,GAAkB,YAAY,KAAKrB,KAAjB,GAAyB,IAAzB,GAAgC,6DAAhC,GAAoD,GAAtE;AACA,kBAAI,KAAK4S,MAAT,EACE,KAAKtR,OAAL,GAAe,YAAY,KAAKtB,KAAjB,GAAyB,IAAzB,GAAgC,4DAAhC,GAAmD,GAAlE;AACH;AAnCH;;AAAA;AAAA;;;2BAgBaiZ,uB;AAAuB,S;;;gBAAvBA,uB;AAAuB,wD;AAAA;AAAA;AAAA;AAAA,W;AAAA,oB;AAAA,iC;AAAA,kB;AAAA,iB;AAAA,qD;AAAA;AAAA;;;AAbhC;;AAEE;;AACF;;;;AAFK;;;;;;;OAJT;;;;;wEAgBaA,uB,EAAuB;gBAhBnC,uDAgBmC;iBAhBzB;AACT3Z,oBAAQ,EAAE,yBADD;AAETwC,oBAAQ,wKAFC;AAOTtC,kBAAM,EAAE,iJAIuC,uDAJvC,8DAKmC,6DALnC;AAPC,W;AAgByB,U;;;AAO3BQ,eAAK,EAAE,CAAF;kBADX;AACW,WAAE,C;AAGP4S,gBAAM,EAAE,CAAF;kBADZ;AACY,WAAE;;;;;;;;;;;;;;;;;;;AChCjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAKa;;AAA2C;;AAAY;;;;;;AAG9D;;;;;;;;AAAyC,oFAAa,OAAb,EAAa,YAAb;;;;;;AAD3C;;AACE;;AACF;;;;;;AADiB;;AAAA;;;;;;AAEjB;;AACE;;AACF;;;;;;;;AADiB;;AAAA,oFAAa,OAAb,EAAa,YAAb;;;;;;AAEjB;;AACE;;AACF;;;;;;;;AADsB;;AAAA,8FAAuB,WAAvB,EAAuB,YAAvB;;;;;;;;;;;;AARxB;;AACE;;AAGA;;AAGA;;AAGF;;;;;;;;AAVoE;;AACpD;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;AAVlB;AAAA;AAAA;AAAA,YAiBasG,sBAjBb;AAyBE,4CAAc;AAAA;AACb;;AA1BH;AAAA;AAAA,uCA4BU;AACN,mBAAKC,WAAL,GAAmB,MAAMra,IAAI,CAACsa,KAAL,CAAWta,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAN,GAAsCD,IAAI,CAACsa,KAAL,CAAWta,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAtC,GAAsED,IAAI,CAACsa,KAAL,CAAWta,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAzF;AACD;AA9BH;AAAA;AAAA,0CAgCa;AACT,kBAAI,KAAKsa,SAAT,EACE,KAAKxZ,KAAL,GAAa,KAAKwZ,SAAlB,CADF,KAEK,IAAI,KAAKC,cAAT,EAAyB;AAC5B,oBAAIC,KAAK,GAAG,iEAAiBrc,aAAjB,CAA+B,KAAKoc,cAApC,EAAoD7hB,GAApD,CAAwD,UAACoG,CAAD;AAAA,yBAAOA,CAAC,CAACH,IAAT;AAAA,iBAAxD,CAAZ;AACA,qBAAKmC,KAAL,GAAa,gEAAgB2Z,kBAAhB,CAAmCD,KAAnC,EAA0CE,IAA1C,CAA+C,UAACC,CAAD,EAAIC,CAAJ;AAAA,yBAAU,gEAAgBC,QAAhB,CAAyBD,CAAzB,IAA8B,gEAAgBC,QAAhB,CAAyBF,CAAzB,CAAxC;AAAA,iBAA/C,CAAb;AACD;AACF;AAvCH;AAAA;AAAA,sCA0CYG,IA1CZ,EA0CuB;AACnB,qBAAO7iB,KAAK,CAACC,OAAN,CAAc4iB,IAAd,KAAuB,CAAC7iB,KAAK,CAACC,OAAN,CAAc4iB,IAAI,CAAC,CAAD,CAAlB,CAA/B;AAED;AA7CH;AAAA;AAAA,mCA+CSA,IA/CT,EA+CoB;AAChB,qBAAO,CAAC7iB,KAAK,CAACC,OAAN,CAAc4iB,IAAd,CAAR;AAED;AAlDH;;AAAA;AAAA;;;2BAiBaX,sB;AAAsB,S;;;gBAAtBA,sB;AAAsB,6C;AAAA;AAAA;AAAA;AAAA,W;AAAA,wF;AAAA,kB;AAAA,iB;AAAA,mR;AAAA;AAAA;AAftB;;AACX;;;;AADiB;;AACe;;AAAA;;;wNAcrBA,sB;AAAsB;;;OAjBnC;;;;;wEAiBaA,sB,EAAsB;gBAjBlC,uDAiBkC;iBAjBxB;AACT5Z,oBAAQ,EAAE,oBADD;AAETwC,oBAAQ,2qBAFC;AAeT3B,qBAAS,EAAE,CAAC,gCAAD;AAfF,W;AAiBwB,U;;;AAEjCmZ,wBAAc,EAAE,CAAF;kBADb;AACa,WAAE,C;AAEhBD,mBAAS,EAAE,CAAF;kBADR;AACQ,WAAE;;;;;;;;;;;;;;;;;;;ACxBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaS,mB,GAAb;AAAA;;AACE,aAAAC,GAAA,GAAc,GAAd;AACA,aAAAC,IAAA,GAAe,GAAf;AACA,aAAAC,KAAA,GAAgB,GAAhB;AACA,aAAAC,GAAA,GAAc,MAAd;AACA,aAAAC,GAAA,GAAc,GAAd;AACD,O;;UAEYC,iB;;;;AAIb;AAAA;AAAA;AAAA,YAGaC,sBAHb;AAKE,0CAAoB3N,qBAApB,EAAkE;AAAA;;AAA9C,iBAAAA,qBAAA,GAAAA,qBAAA;AAOpB,iBAAA4N,YAAA,GACE,aACA,sDADA,GAEA,kBAFA,GAGA,oBAJF;AAMA,iBAAAC,aAAA,GACE,aACA,wCADA,GAEA,kBAFA,GAGA,4BAJF;AAMA,iBAAAC,YAAA,GACE,aACA,sEADA,GAEA,WAFA,GAGA,4BAJF;AAMA,iBAAArS,WAAA,GAAmC7R,MAAM,CAACmkB,MAAP,CAAc,IAAIX,mBAAJ,EAAd,EAAyC;AAC1EC,iBAAG,EAAE,GADqE;AAE1EC,kBAAI,EAAE,GAFoE;AAG1EC,mBAAK,EAAE,GAHmE;AAI1EC,iBAAG,EAAE,QAJqE;AAK1EC,iBAAG,EAAE;AALqE,aAAzC,CAAnC;AAxBE,iBAAKO,YAAL,GAAoBpkB,MAAM,CAACsC,IAAP,CAAY,KAAKuP,WAAjB,CAApB;AACA,iBAAKwS,aAAL,GAAqB,KAAKjO,qBAAL,CAA2BqJ,eAA3B,CAA2C,KAAKuE,YAAhD,EAA8D,KAAKI,YAAnE,CAArB;AACD;;AARH;AAAA;AAAA,mCAuCSrQ,IAvCT,EAuCwD;AAAA,kBAApBzD,SAAoB,uEAAR,MAAQ;AAEpD,kBAAI9E,QAAJ;;AACA,sBAAQ8E,SAAR;AACE,qBAAK,MAAL;AACE9E,0BAAQ,GAAG,KAAKwY,YAAhB;AACA;;AACF,qBAAK,OAAL;AACExY,0BAAQ,GAAG,KAAK6Y,aAAhB;AACA;;AACF,qBAAK,KAAL;AACE7Y,0BAAQ,GAAG,KAAK0Y,YAAhB;AACA;;AACF,qBAAK,QAAL;AACE1Y,0BAAQ,GAAG,KAAKyY,aAAhB;AACA;;AACF;AACEzY,0BAAQ,GAAG,KAAKwY,YAAhB;AACA;AAfJ;;AAiBA,qBAAO,KAAK5N,qBAAL,CAA2BkB,cAA3B,CAA0C9L,QAA1C,kCAAwDuI,IAAxD,GAAiE,KAAKqC,qBAAL,CAA2BkO,WAA3B,CAAuCvQ,IAAvC,CAAjE,EAAP;AAED;AA7DH;;AAAA;AAAA;;;2BAGagQ,sB,EAAsB,kJ;AAAA,S;;;iBAAtBA,sB;AAAsB,mBAAtBA,sBAAsB,K;AAAA,sBAFrB;;;OADd;;;;;wEAGaA,sB,EAAsB;gBAHlC,wDAGkC;iBAHvB;AACVvd,sBAAU,EAAE;AADF,W;AAGuB,U;;;;;;;;;;;;;;;;;;;;;;ACnBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA;AAAA;AAAA;AAAA,YAGa+d,0BAHb;AAAA;;AAAA;;AAUE,8CAAsBnO,qBAAtB,EACoBhH,kBADpB,EAEoBoV,sBAFpB,EAEoE;AAAA;;AAAA;;AAClE,yCAAMpO,qBAAN;AAHoB,oBAAAA,qBAAA,GAAAA,qBAAA;AACF,oBAAAhH,kBAAA,GAAAA,kBAAA;AACA,oBAAAoV,sBAAA,GAAAA,sBAAA;AAcpB,oBAAA3S,WAAA,GAAc;AACZvR,kBAAI,EAAE,GADM;AAEZ+W,0BAAY,EAAE,OAFF;AAGZD,uBAAS,EAAE,OAHC;AAIZD,wBAAU,EAAE;AAJA,aAAd;AAOA,oBAAA6H,SAAA,GAAY,EAAZ;AACA,oBAAAC,eAAA,GAAkB,0BAChB,IADgB,GAEhB,oBAFgB,GAGhB,yBAHgB,GAIhB,6BAJF;AAMA,oBAAAC,kBAAA,GAAqB,qCACnB,yBADmB,GAEnB,oBAFmB,GAGnB,IAHmB,GAInB,qBAJF;AAKA,oBAAAC,gBAAA,GAAmB,aACjB,WADiB,GAEjB,WAFiB,GAGjB,WAHiB,GAIjB,4BAJiB,GAKjB,sBALiB,GAMjB,UANiB,GAOjB,QAPF;AASA,oBAAAE,gBAAA,GAAmB,aACjB,UADiB,GAEjB,UAFiB,GAGjB,UAHiB,GAIjB,UAJiB,GAKjB,UALiB,GAMjB,UANiB,GAOjB,QAPF;AAUA,oBAAAE,eAAA,GAAkB,0BAChB,KADgB,GAEhB,KAFgB,GAGhB,KAHgB,GAIhB,qBAJF;AAMA,oBAAAC,kBAAA,GAAqB,0BACnB,IADmB,GAEnB,IAFmB,GAGnB,IAHmB,GAInB,qBAJF;AAMA,oBAAAlJ,wBAAA,GAA2B,aACzB,UADyB,GAEzB,UAFyB,GAGzB,UAHyB,GAIzB,QAJF;AAKA,oBAAAC,yBAAA,GAA4B,QAAKH,qBAAL,CAA2BqJ,eAA3B,CAA2C,QAAKnJ,wBAAhD,EAA0E,QAAK0I,SAA/E,CAA5B;AAGA,oBAAAxI,qBAAA,GAAwB,aACtB,WADsB,GAEtB,WAFsB,GAGtB,WAHsB,GAItB,SAJF;AAKA,oBAAAC,sBAAA,GAAyB,QAAKL,qBAAL,CAA2BqJ,eAA3B,CAA2C,QAAKjJ,qBAAhD,EAAuE,QAAKwI,SAA5E,CAAzB;AA3EE,oBAAKA,SAAL,GAAiBhf,MAAM,CAACsC,IAAP,CAAY,QAAKuP,WAAjB,CAAjB;AACA,oBAAKuN,iBAAL,GAAyB,QAAKhJ,qBAAL,CAA2BqJ,eAA3B,CAA2C,QAAKN,gBAAhD,EAAkE,QAAKH,SAAvE,CAAzB;AACA,oBAAKM,iBAAL,GAAyB,QAAKlJ,qBAAL,CAA2BqJ,eAA3B,CAA2C,QAAKJ,gBAAhD,EAAkE,QAAKL,SAAvE,CAAzB;AACA,oBAAKyF,MAAL,GAAc,QAAKrV,kBAAL,CACXsV,kBADW,GAEXtf,SAFW,CAED,UAACuf,CAAD;AAAA,qBAAO,QAAKC,eAAL,GAAuBD,CAA9B;AAAA,aAFC,CAAd;AAGA,oBAAKE,mBAAL,GAA2B,QAAKzV,kBAAL,CACxB0V,yBADwB,GAExB1f,SAFwB,CAEd,UAACuf,CAAD;AAAA,qBAAO,QAAKI,gBAAL,GAAwBJ,CAA/B;AAAA,aAFc,CAA3B;AARkE;AAYnE;;AAxBH;AAAA;AAAA,yCA4FejO,aA5Ff,EA4FqD;AAAA,kBAAvBpG,SAAuB,uEAAXpP,SAAW;AACjD,qBAAO,KAAKsjB,sBAAL,CAA4BxQ,MAA5B,CAAmC0C,aAAnC,EAAkDpG,SAAlD,CAAP;AACD;AA9FH;AAAA;AAAA,yCAgGeG,IAhGf,EAgGqBlB,KAhGrB,EAgG0B;AACtB,qBAAO,SAASkB,IAAI,CAAC9F,OAAL,CAAalJ,OAAb,GAAuB8T,MAAvB,CAA8B,UAAAoB,EAAE;AAAA,uBAAIA,EAAE,CAACtV,SAAH,KAAiB,gBAArB;AAAA,eAAhC,EAAuEF,GAAvE,CAA2E,UAACwV,EAAD;AAAA,uBAAQ,MAAMA,EAAE,CAACrW,IAAT,GAAgB,GAAxB;AAAA,eAA3E,CAAhB;AACD;AAlGH;AAAA;AAAA,sCAqGY8B,GArGZ,EAqGsB;AAElB,kBAAIA,GAAG,CAAC9B,IAAJ,KAAa,MAAjB,EACE,OAAO,8DAAP;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,OAAjB,EACE,OAAO,+DAAP;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,QAAjB,EACE,OAAO,KAAK0kB,YAAL,CAAkB,KAAKD,gBAAvB,EAAyC,KAAKH,eAA9C,CAAP;AACF,kBAAIxiB,GAAG,CAAC6iB,IAAJ,KAAa,KAAjB,EACE,kBAAW7iB,GAAG,CAAC9B,IAAf;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,UAAjB,EACE;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,OAAjB,EACE;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,KAAjB,EACE;AACF,kBAAI8B,GAAG,CAAC9B,IAAJ,KAAa,QAAjB,EACE;AACF,gCAAW8B,GAAG,CAAC9B,IAAf;AACD;AAxHH;AAAA;AAAA,0CA0Ha;AAET,mBAAKmkB,MAAL,CAAY/b,WAAZ;AACA,mBAAKmc,mBAAL,CAAyBnc,WAAzB;AACD;AA9HH;;AAAA;AAAA,UAGgD,wEAHhD;;;2BAGa6b,0B,EAA0B,kJ,EAAA,gI,EAAA,wI;AAAA,S;;;iBAA1BA,0B;AAA0B,mBAA1BA,0BAA0B,K;AAAA,sBAFzB;;;OADd;;;;;wEAGaA,0B,EAA0B;gBAHtC,wDAGsC;iBAH3B;AACV/d,sBAAU,EAAE;AADF,W;AAG2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACXvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;AAYA;AAAA;AAAA;AAAA,YAOa0e,uBAPb;AAkBE,2CAA+B/K,kBAA/B,EAAsE;AAAA;;AAAvC,iBAAAA,kBAAA,GAAAA,kBAAA;AAJ/B,iBAAAqB,OAAA,GAAkB,CAAlB;AAKC;;AAnBH;AAAA;AAAA,uCAqBU,CACP;AAtBH;AAAA;AAAA,8CAwBoB;AAChB,kBAAiB,KAAK2J,UAAL,CAAgBhK,aAAjC,EACA,KAAKK,OAAL,GAAgBhT,IAAI,CAAC4c,IAAL,CAAwB,KAAKD,UAAL,CAAgBhK,aAAhB,CAA+BkK,qBAA/B,GAAuD3b,KAAvD,GAA+D,6DAAvF,CAAhB;;AACA,mBAAKyQ,kBAAL,CAAwBgC,aAAxB;AACD;AA5BH;AAAA;AAAA,iDA8BoB;AAChB,mBAAKmJ,eAAL;AACD;AAhCH;;AAAA;AAAA;;;2BAOaJ,uB,EAAuB,gI;AAAA,S;;;gBAAvBA,uB;AAAuB,8C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACnBpC;;AACE;;AAGF;;;;AAJK;;AAEQ;;AAAA,+FAAmB,SAAnB,EAAmB,WAAnB;;;;;;;;ODUb;;;;;wEAOaA,uB,EAAuB;gBAPnC,uDAOmC;iBAPzB;AACTlc,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTY,qBAAS,EAAE,CAAC,iCAAD,CAHF;AAKT2U,2BAAe,EAAE,sEAAwBC;AALhC,W;AAOyB,U;;;;;AAElC9T,iBAAO,EAAE,CAAF;kBADN;AACM,WAAE,C;AAGTuL,iBAAO,EAAE,CAAF;kBADN;AACM,WAAE,C;AAIgBiP,oBAAU,EAAE,CAAF;kBAAlC,uDAAkC;mBAAxB,Y;AAAwB,WAAE;;;;;;;;;;;;;;;;;;;AE5BvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACMA;;AACE;;AAA2C;;AACzC;;AAAoC;;AAAyC;;AAAQ;;AAAI;;AAC3F;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACE;;AACE;;AAGF;;AACA;;AAEE;;AAUE;;AAKF;;AAEA;;AAUE;;AACE;;AAGF;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAA8C;;AAAS;;AACvD;;AAAgB;;AAAmD;;AACnE;;AACE;;AACF;;AAGA;;AACE;;AAAK;;AAA8B;;AACnC;;AAAK;;AAAiD;;AACtD;;AAAK;;AAAgD;;AACrD;;AAAK;;AAA0D;;AAC/D;;AAAK;;AAAoD;;AACzD;;AACA;;AAAK;;AAAgC;;AACvC;;AACA;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAU;;AAC1E;;AACF;;AAEA;;AACE;;AACF;;AAGF;;;;;;AA5EgB;;AAAA,wGAA6B,oBAA7B,EAA6B,CAA7B;;AAOV;;AAAA,uJAEc,WAFd,EAEc,sEAFd,EAEc,kBAFd,EAEc,IAFd;;AASU;;AAAA,wGAA6B,eAA7B,EAA6B,uBAA7B;;AASV;;AAAA,uJAGY,WAHZ,EAGY,sEAHZ;;AAUI;;AAAA;;AAiBU;;AAAA;;AAEd;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;AD/DX;AAAA;AAAA;AAAA,YAoCaI,sBApCb;AA6CE,0CAAoB/M,UAApB,EACoBpJ,kBADpB,EAEoBe,kBAFpB,EAGmB+Q,qBAHnB,EAImBsE,gBAJnB,EAKoB9d,MALpB,EAMoBE,YANpB,EAMgD;AAAA;;AAN5B,iBAAA4Q,UAAA,GAAAA,UAAA;AACA,iBAAApJ,kBAAA,GAAAA,kBAAA;AACA,iBAAAe,kBAAA,GAAAA,kBAAA;AACD,iBAAA+Q,qBAAA,GAAAA,qBAAA;AACA,iBAAAsE,gBAAA,GAAAA,gBAAA;AACC,iBAAA9d,MAAA,GAAAA,MAAA;AACA,iBAAAE,YAAA,GAAAA,YAAA;AACnB;;AApDH;AAAA;AAAA,uCAsDU;AAEN,mBAAK6d,qBAAL;AACA,mBAAK7d,YAAL,CAAkB8d,aAAlB;AACD;AA1DH;AAAA;AAAA,oDA4DuB;AAAA;;AACnB,mBAAKC,wBAAL,GAAgC,KAAKvW,kBAAL,CAAwBwW,eAAxB,GAC7BxgB,SAD6B,CACnB,UAACygB,SAAD,EAAe;AAEtB,uBAAI,CAAClM,YAAL,qBAAwBkM,SAAxB;;AACA,oBAAIA,SAAJ,EAAe;AACb,yBAAI,CAACC,YAAL,GAAoB,OAAI,CAACnM,YAAL,CAAkBjK,KAAtC;AACA1O,yBAAO,CAACqD,GAAR,CAAYwhB,SAAZ;AACA7kB,yBAAO,CAACqD,GAAR,CAAY,QAAZ;;AACA,sBAAI,OAAI,CAACsV,YAAL,CAAkBoM,MAAlB,CAAyB9jB,KAAzB,IAAkC,KAAtC,EAA6C;AAC3C,2BAAI,CAAC+jB,QAAL,CAAc5d,IAAd;AACD;;AACD,yBAAI,CAAC8P,KAAL,GAAc,OAAI,CAAC/H,kBAAL,CAAwB8V,kBAAxB,EAAd;AACD;AACF,eAb2B,CAAhC;AAeA,qBAAO,KAAKtM,YAAZ;AACD;AA7EH;AAAA;AAAA,iCA+EOrJ,SA/EP,EA+E0B;AACtB,mBAAKH,kBAAL,CAAwBO,IAAxB,CAA6BJ,SAA7B;AACD;AAjFH;AAAA;AAAA,mCAmFS;AACL,mBAAKH,kBAAL,CAAwBsS,OAAxB;AACD;AArFH;AAAA;AAAA,0CAuFa;AACT,mBAAKkD,wBAAL,CAA8Bjd,WAA9B;AACD;AAzFH;AAAA;AAAA,wCA2FW;AAAA;;AACP,mBAAKU,YAAL,CAAkBhB,IAAlB;AACA,mBAAK4d,QAAL,CAAc9M,IAAd;AAEA,kBAAIP,KAAK,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACnC;AACAC,0BAAU,CAAC;AAAA,yBAAMD,OAAO,CAAC,MAAD,CAAb;AAAA,iBAAD,EAAwB,IAAxB,CAAV;AACD,eAHW,CAAZ;AAIA,kBAAI3J,UAAU,GAAG,IAAI0J,OAAJ,CAAY,UAACC,OAAD,EAAa;AACxC;AACAA,uBAAO,CAAC,OAAI,CAACL,UAAL,CAAgBO,QAAhB,CAA2BtY,QAAQ,CAAC,OAAI,CAACyX,KAAL,CAAW9M,IAAZ,CAAR,GAA0B,CAArD,EAAyD,OAAI,CAACuO,YAAL,CAAkB9E,MAAlB,CAAyBvU,IAAlF,CAAD,CAAP,CAFwC,CAE0D;AAEnG,eAJgB,CAAjB;AAMAsY,qBAAO,CAACI,GAAR,CAAY,CAACL,KAAD,EAAQzJ,UAAR,CAAZ,EAAiC+J,IAAjC,CAAsC,YAAM;AAC1C,uBAAI,CAAC7P,YAAL,CAAkB8P,IAAlB;;AACA,uBAAI,CAACxR,MAAL,CAAYW,aAAZ,CAA0B,OAA1B;AACD,eAHD;AAKD;AA9GH;;AAAA;AAAA;;;2BAoCakd,sB,EAAsB,iJ,EAAA,iJ,EAAA,iJ,EAAA,yK,EAAA,+J,EAAA,uH,EAAA,0I;AAAA,S;;;gBAAtBA,sB;AAAsB,6C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnDnC;;AACE;;AAAM;;AAAc;;AACpB;;AAAoC;;AAA0C;;AAAI;;AAAI;;AACtF;;AAAoC;;AAAyC;;AAAa;;AAAI;;AAC9F;;AACF;;AACA;;AAKA;;;;AAL4B;;AAAA;;AAKL;;AAAA;;;;;;;ODIvB;;;;;wEAoCaA,sB,EAAsB;gBApClC,uDAoCkC;iBApCxB;AACTvc,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTY,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAKTX,kBAAM,EAAE,kFAGqB,4EAAoB,GAHzC,gBAGkD,4EAAoB,CAHtE,4CAIkB,sEAAc,EAJhC,gBAIwC,sEAAc,CAJtD,gKAUK,4EAAoB,GAVzB,kTAsBqB,4EAAoB,GAtBzC,gBAsBkD,4EAAoB,CAtBtE,qEA0BO,sEAAc,CA1BrB,gBA0B4B,4EAAoB,CA1BhD;AALC,W;AAoCwB,U;;;;;;;;;;;;;;;;;AAGRgd,mBAAS;kBAAjC,uDAAiC;mBAAvB,Y;AAAuB,Y;AACXF,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB,Y;AACJ5c,sBAAY;kBAAtC,uDAAsC;mBAA5B,c;AAA4B;;;;;;;;;;;;;;;;;;;AExDzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQA;;;AAEA;AAAA;AAAA;AAAA,YAGa+c,kBAHb;AAQE,sCAAoBC,iBAApB,EAAmEhX,kBAAnE,EACoBxH,YADpB,EACgD;AAAA;;AAAA;;AAD5B,iBAAAwe,iBAAA,GAAAA,iBAAA;AAA+C,iBAAAhX,kBAAA,GAAAA,kBAAA;AAC/C,iBAAAxH,YAAA,GAAAA,YAAA;AAClBwH,8BAAkB,CACfwW,eADH,GAEGxgB,SAFH,CAEa,UAACmK,KAAD,EAAW;AACpB,qBAAI,CAACoK,YAAL,GAAoBpK,KAApB;AACA,qBAAI,CAACmK,iBAAL,GAAyB,+EAAoBnK,KAApB,EAA0B,CAA1B,CAAzB;AACD,aALH;AAMA,iBAAK8W,QAAL,GAAgB,6CAAatX,KAAb,CAAmBC,SAAnB,CAA6BC,MAA7C;AAED;;AAlBH;AAAA;AAAA,iCAoBOqB,SApBP,EAoB0B;AACtB,mBAAKlB,kBAAL,CAAwBkX,sBAAxB,CAA+ChW,SAA/C;AACA,kBAAIiW,cAAc,GAAG,KAAK7M,iBAAL,CAAuB7E,MAAvB,CAA8B+B,QAA9B,CAAuC2P,cAA5D;AACA,kBAAIC,YAAY,GAAGD,cAAc,CAACjW,SAAD,CAAjC;AACAtP,qBAAO,CAACqD,GAAR,CAAYmiB,YAAZ;;AACA,kBAAIA,YAAJ,EAAkB;AAChBxlB,uBAAO,CAACqD,GAAR,CAAY,MAAZ;AACA,oBAAI8M,IAAI,GAAG,KAAKwI,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAzB,CAAkCjM,OAAlC,CAA0ClJ,OAA1C,GACRsB,IADQ,CACH,UAAA4T,EAAE,EAAI;AACV,sBAAI3F,KAAK,GAAG,+EAAoB2F,EAApB,EAAwB,CAAxB,CAAZ;AACA,yBAAO3F,KAAK,CAACU,WAAN,IACJiF,EAAE,CAACjF,WAAH,CAAeH,CAAf,KAAqBiV,YAAY,CAACjV,CAD9B,IAEJoF,EAAE,CAACjF,WAAH,CAAeF,CAAf,KAAqBgV,YAAY,CAAChV,CAFrC;AAEuC,iBALhC,CAAX;;AAOA,oBAAIL,IAAJ,EAAU;AACRnQ,yBAAO,CAACqD,GAAR,CAAY,MAAZ;AACA,sBAAIoiB,WAAW,GAAG,KAAK5gB,IAAL,CAAUsL,IAAV,CAAlB;AACAnQ,yBAAO,CAACqD,GAAR,CAAYoiB,WAAZ;;AACA,sBAAIA,WAAW,CAACC,MAAZ,IAAoB,SAAxB,EAAmC;AACjC,yBAAK9e,YAAL,CAAkBM,QAAlB;AACA,2BAAO,KAAP;AACD,mBAHD,MAGO;AACL,yBAAKN,YAAL,CAAkB+e,MAAlB;AACA,2BAAO,IAAP;AACD;AAEF;AAEF;AACF;AAjDH;AAAA;AAAA,iCAmDOC,SAnDP,EAmDkB;AAAA;;AACd,mBAAKxX,kBAAL,CAAwBkX,sBAAxB,CAA+C,MAA/C;AACA,mBAAK3M,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAzB,CAAkCjM,OAAlC,CAA0ClJ,OAA1C,GAAmD;AAAnD,eACG8T,MADH,CACU,UAAAoB,EAAE;AAAA,uBAAIA,EAAE,CAACrW,IAAH,KAAYsmB,SAAS,CAACtmB,IAA1B;AAAA,eADZ,EAEGJ,OAFH,CAEW,UAACyW,EAAD,EAAQ;AACf,oBAAG,OAAI,CAAC9Q,IAAL,CAAU8Q,EAAV,EAAc+P,MAAd,IAAwB,SAA3B,EAAqC;AACnC,yBAAI,CAAC9e,YAAL,CAAkBif,QAAlB;AAA6B;AAEhC,eANH;AAQD;AA7DH;AAAA;AAAA,sCA+DY;AAAA;;AACR,mBAAKlN,YAAL,CAAkB9E,MAAlB,CAAyB+B,QAAzB,CAAkCjM,OAAlC,CAA0ClJ,OAA1C,GACG8T,MADH,CACU,UAAAoB,EAAE;AAAA,uBAAIA,EAAE,CAACsO,IAAH,IAAW,MAAf;AAAA,eADZ,EAEG/kB,OAFH,CAEW,UAACyW,EAAD,EAAQ;AACf,uBAAI,CAAC7F,IAAL,CAAU6F,EAAV;AACD,eAJH;AAKD;AArEH;AAAA;AAAA,iCAuEevU,GAvEf,EAuEkB;AACd,kBAAI0kB,iBAAiB,GAAG,KAAKT,QAAL,CAAcU,kBAAd,CAAiC,KAAKpN,YAAtC,EAAoDvX,GAApD,CAAxB;AACA,mBAAKgN,kBAAL,CAAwBK,SAAxB,CAAkC,KAAKkK,YAAvC;AACA,mBAAKvK,kBAAL,CAAwB4X,gBAAxB,CAAyC,mFAAwBF,iBAAxB,EAA2C,UAA3C,CAAzC;AACA,qBAAOA,iBAAP;AAED;AA7EH;AAAA;AAAA,yCAgFelN,SAhFf,EAgF0B;AAAA;;AACtB,kBAAIjP,OAAO,GAAG,mFAAwBiP,SAAxB,EAAkC,SAAlC,CAAd;AAEA,qBAAOjP,OAAO,CAAC4K,MAAR,CAAe,UAAAoB,EAAE;AAAA,uBAAI,CAAC,OAAI,CAACsQ,MAAL,CAAYtQ,EAAZ,CAAL;AAAA,eAAjB,CAAP;AACD;AApFH;AAAA;AAAA,mCAsFiBA,EAtFjB,EAsFqB;AACjB,qBAAOA,EAAE,CAACjF,WAAH,KAAmBxQ,SAA1B;AACD;AAxFH;AAAA;AAAA,mCA0FS0Y,SA1FT,EA0FoBtJ,SA1FpB,EA0FqC;AACjC,kBAAIoB,WAAW,GAAG,mFAAwBkI,SAAxB,EAAmC,aAAnC,EAAkDtJ,SAAlD,CAAlB;;AACA,kBAAIoB,WAAJ,EAAiB;AACf,uBAAO,mFAAwBkI,SAAxB,EAAmC,SAAnC,EACJrE,MADI,CACG,UAAAnT,GAAG,EAAI;AACb,sBAAI8kB,eAAe,GAAG,mFAAwB9kB,GAAxB,EAA6B,aAA7B,CAAtB;AACA,yBAAO8kB,eAAe,IAAIA,eAAe,CAAC3V,CAAhB,KAAsBG,WAAW,CAACH,CAArD,IAA0D2V,eAAe,CAAC1V,CAAhB,KAAsBE,WAAW,CAACF,CAAnG;AACD,iBAJI,EAIF,CAJE,CAAP;AAKD;AACF;AAnGH;AAAA;AAAA,uCAsGaoI,SAtGb,EAsG2B;AACvB,kBAAI2M,cAAc,GAAG,KAAK7M,iBAAL,CAAuB7E,MAAvB,CAA8B+B,QAA9B,CAAuC2P,cAA5D;AACA,kBAAIjW,SAAS,GAAG,sDAAQiW,cAAR,EAAwB,UAAC5P,EAAD,EAAQ;AAC9C,uBAAOA,EAAE,IAAIA,EAAE,CAACpF,CAAH,KAASqI,SAAS,CAACrI,CAAzB,IAA8BoF,EAAE,CAACnF,CAAH,KAASoI,SAAS,CAACpI,CAAxD;AACD,eAFe,CAAhB;;AAGA,kBAAIlB,SAAJ,EAAe;AACb,uBAAO,KAAKI,IAAL,CAAUJ,SAAV,CAAP;AACD;;AACD,qBAAO,KAAP;AACD;AA/GH;AAAA;AAAA,sCAiHYsJ,SAjHZ,EAiH4B;AACxB,qBAAO,mFAAwBA,SAAxB,EAAkC,SAAlC,EACJ7W,IADI,CACC,UAAAokB,CAAC,EAAI;AACT,uBAAOA,CAAC,CAAClC,IAAF,KAAW,QAAlB;AACD,eAHI,CAAP;AAID;AAtHH;AAAA;AAAA,iDAwHuB;AACnB,qBAAO,KAAKoB,QAAL,CAAcJ,kBAAd,CAAiC,KAAKtM,YAAtC,CAAP;AACD;AA1HH;;AAAA;AAAA;;;2BAGawM,kB,EAAkB,gI,EAAA,gI,EAAA,yH;AAAA,S;;;iBAAlBA,kB;AAAkB,mBAAlBA,kBAAkB,K;AAAA,sBAFjB;;;OADd;;;;;wEAGaA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACV3f,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACKA;;AACE;;AACA;;AAGA;;AAAmB;;AAAmB;;AAAI;;AACxC;;AAAuB;;AAAG;;AAAO;;AAEnC;;AACA;;AACA;;AAAqD;;AAAM;;AAE3D;;AACA;;AACA;;AACA;;AACA;;AAAuD;;AAAC;;AACxD;;AACA;;AAAK;;AACL;;AAAoF;;AAAwB;;AAC5G;;AAAK;;AACL;;AAAK;;AAEL;;AAAmD;;AAAI;;AACvD;;AACA;;AAAiD;;AAAE;;AAEnD;;AACA;;AACA;;AAA+C;;AAAa;;AAC5D;;AACA;;AACA;;AACA;;AAAiD;;AAAa;;AAC9D;;AACA;;AAAiD;;AAAqD;;AACtG;;AACA;;AACA;;AAMA;;AAMA;;AACA;;AACA;;AACA;;AAAsC;;AAAM;;AAC5C;;AACA;;AAAiD;;AAAQ;;AACzD;;AAA8E;;AAE9E;;AACA;;AAAiD;;AAAwD;;AACzG;;AAAiD;;AAC/C;;AAAmD;;AAAI;;AAEvD;;AAAmB;;AAAW;;AAChC;;AACA;;AACA;;AACA;;AACE;;AAAI;;AAA0G;;AAC9G;;AAAiB;;AACG;;AACtB;;AACA;;AAAgF;;AAAG;;AAGrF;;;;;;AAzEkB;;AAAA;;AAQK;;AAAA;;AAMF;;AAAA,iGAAsB,MAAtB,EAAsB,GAAtB;;AAG6B;;AAAA,iGAAsB,MAAtB,EAAsB,GAAtB;;AAI7B;;AAAA;;AAEF;;AAAA;;AAIE;;AAAA;;AAIE;;AAAA;;AAEA;;AAAA;;AAA4C;;AAAA;;AAI5D;;AAAA,iFAAa,SAAb,EAAa,CAAb,EAAa,gBAAb,EAAa,kBAAb;;AAMA;;AAAA,iFAAa,SAAb,EAAa,CAAb,EAAa,gBAAb,EAAa,kBAAb;;AAUa;;AAAA;;AACA;;AAAA,qFAAiB,gBAAjB,EAAiB,gBAAjB;;AACkE;;AAAA;;AAElE;;AAAA;;AAA+C;;AAAA;;AAC/C;;AAAA;;AAA+C;;AAAA;;AAC5C;;AAAA;;AAKD;;AAAA;;AAMF;;AAAA;;;;ADtEpB;AAAA;AAAA;AAAA,YAKa4gB,qBALb;AAaE,2CAAc;AAAA;;AALd,iBAAAzd,OAAA,GAAU,KAAV;AACA,iBAAA0d,GAAA,GAAW,0FAAX;AACA,iBAAAC,WAAA,GAAmB,sGAA2B,CAA3B,CAAnB;AACA,iBAAAC,SAAA,GAAiB,4FAAjB;AAGC;;AAdH;AAAA;AAAA,uCAgBU;AACNvmB,qBAAO,CAACqD,GAAR,CAAY,UAAZ;;AACA,kBAAI;AACF,oBAAImjB,UAAU,GAAG,6CAAazY,KAAb,CAAmBC,SAAnB,CAA6BC,MAA7B,CAAoCC,UAApC,CAA+CuY,eAA/C,CAA+D,CAA/D,EAAkE,OAAlE,CAAjB;AACA,qBAAKC,SAAL,GAAiBF,UAAU,CAAC9X,KAAX,CAAiB/E,OAAjB,CAAyBlJ,OAAzB,GAAmC,CAAnC,EAAsCA,OAAtC,GAAgD,CAAhD,CAAjB;AACA,qBAAKkmB,WAAL,GAAmBH,UAAU,CAAC9X,KAAX,CAAiB/E,OAAjB,CAAyBlJ,OAAzB,GAAmC,CAAnC,EAAsCA,OAAtC,GAAgD,CAAhD,CAAnB;AACA,qBAAKkmB,WAAL,GAAmB,6CAAa5Y,KAAb,CAAmBC,SAAnB,CAA6BC,MAA7B,CAAoCC,UAApC,CAA+CM,uBAA/C,CAAuE,CAAvE,EAA0E,KAA1E,EAAiFE,KAAjF,CAAuF/E,OAAvF,CAA+FlJ,OAA/F,GAAyG,CAAzG,EAA4GA,OAA5G,GAAsH,CAAtH,CAAnB;AACD,eALD,CAKE,OAAOV,CAAP,EAAU;AACVC,uBAAO,CAACqD,GAAR,CAAYtD,CAAZ;AACD;;AACDC,qBAAO,CAACqD,GAAR,CAAY,KAAKqjB,SAAjB;AACA1mB,qBAAO,CAACqD,GAAR,CAAY,KAAKsjB,WAAjB;AACD;AA5BH;AAAA;AAAA,qCA8BQ;AACJ,mBAAKhe,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;AAhCH;;AAAA;AAAA;;;2BAKayd,qB;AAAqB,S;;;gBAArBA,qB;AAAqB,4C;AAAA,kB;AAAA,iB;AAAA,6wB;AAAA;AAAA;ACZlC;;AAAM;AAAA,uBAAS,IAAA9T,MAAA,EAAT;AAAiB,eAAjB;;AAAiC;;AAAa;;AACpD;;AACA;;AAGA;;;;AAJe;;AAAA;;AACA;;AAAA;;AAGV;;AAAA;;;;;;;ODEL;;;;;wEAKa8T,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTpe,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTY,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAM+d,MAAM,GAAW,CAAC;AAACllB,YAAI,EAAE,WAAP;AAAoBmlB,iBAAS,EAAE;AAA/B,OAAD,EACrB;AAACnlB,YAAI,EAAE,KAAP;AAAcmlB,iBAAS,EAAE;AAAzB,OADqB,EAErB;AAACnlB,YAAI,EAAE,MAAP;AAAemlB,iBAAS,EAAE;AAA1B,OAFqB,EAGrB;AAACnlB,YAAI,EAAE,MAAP;AAAemlB,iBAAS,EAAE;AAA1B,OAHqB,EAIrB;AAACnlB,YAAI,EAAE,OAAP;AAAgBmlB,iBAAS,EAAE;AAA3B,OAJqB,EAKrB;AAACnlB,YAAI,EAAE,OAAP;AAAgBmlB,iBAAS,EAAE;AAA3B,OALqB,EAMrB;AAACnlB,YAAI,EAAE,IAAP;AAAaolB,kBAAU,EAAE;AAAzB,OANqB,CAAvB;;AASA;AAAA;AAAA;AAAA,YAIaC,gBAJb;AAAA;AAAA;;;gBAIaA;;;;6BAAAA,gB;AAAgB,W;AAAA,oBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;OAJ7B;;;4HAIaG,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACR3kB,mBAAO,EAAE,CAAC,6DAAa4kB,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERzkB,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACtB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAOA;AAAA;AAAA;AAAA,YAGa8kB,kBAHb;AAKE,wCAAc;AAAA;AACb;;AANH;AAAA;AAAA,wDAQ2B;AACvB,uBAASC,8BAAT,CAAwCC,YAAxC,EAAsD;AAAA;;AACpD,oBAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACphB,IAAD,EAAeqhB,YAAf,EAA4CC,OAA5C,EAAoG;AAC7H,sBAAMzmB,MAAM,GAAGwmB,YAAY,CAAC9S,MAAb,CAAoB,UAACgT,OAAD,EAAa;AAC9C,2BAAOD,OAAO,CAACE,KAAR,CAAc,UAACC,CAAD,EAAO;AAC1B,6BAAOA,CAAC,CAACC,IAAF,CAAO,OAAP,EAAa1hB,IAAb,EAAmBuhB,OAAnB,CAAP;AACD,qBAFM,CAAP;AAGD,mBAJc,CAAf;AAKA,yBAAO,sDAAMI,eAAN,CAAsB9mB,MAAM,CAACgB,KAAP,CAAa,CAAb,EAAgBslB,YAAhB,CAAtB,CAAP;AACD,iBAPD;;AAQA,uBAAOC,oBAAP;AACD;;AAED,kBAAIA,oBAAoB,GAAGF,8BAA8B,CAAC,CAAD,CAAzD;AACA,qBAAO,KAAKU,uBAAL,CAA6BR,oBAA7B,CAAP;AACD;AAvBH;AAAA;AAAA,wDAyB2B;AAEvB,kBAAIA,oBAAoB,GAAG,gEAAgBS,sBAA3C;AACA,qBAAO,KAAKD,uBAAL,CAA6BR,oBAA7B,CAAP;AACD;AA7BH;AAAA;AAAA,8CA+BiB;AAEb,kBAAIA,oBAAoB,GAAG,gEAAgBU,4BAA3C;AACA,qBAAO,KAAKC,wBAAL,CAA8BX,oBAA9B,CAAP;AACD;AAnCH;AAAA;AAAA,8CAqCiB;AAEb,kBAAIA,oBAAoB,GAAG,gEAAgBY,2BAA3C;AACA,qBAAO,KAAKD,wBAAL,CAA8BX,oBAA9B,CAAP;AACD;AAzCH;AAAA;AAAA,oDA4C0BA,oBA5C1B,EA4CgD;AAG5C,kBAAIa,SAAS,GAAG,gEAAgBC,mBAAhB,CAAoC,IAApC,EAA0C,EAA1C,CAAhB;AACA,kBAAIC,UAAU,GAAG,sDAAMlZ,OAAN,CAAc,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe,CAAC,IAAD,EAAO,IAAP,CAAf,EAA6B,CAAC,IAAD,EAAO,KAAP,CAA7B,CAAd,CAAjB;AAEAkZ,wBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,IAAD,EAAOC,MAAP,CAAcD,UAAU,CAAC,CAAD,CAAxB,CAAhB;AACAA,wBAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAAV,CAAcC,MAAd,CAAqB,CAAC,KAAD,CAArB,CAAhB;AAGA,kBAAIC,cAAc,GAAG,sDAAMV,eAAN,CAAsBM,SAAS,CAACpmB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAtB,CAArB;AACA,kBAAIymB,SAAS,GAAG,iEAAiBC,+BAAjB,CAAiDF,cAAjD,EAAiEF,UAAjE,EAA6EF,SAA7E,EAAwFb,oBAAxF,CAAhB;AAGA,kBAAIoB,cAAc,GAAG,sDAAMb,eAAN,CAAsBM,SAAS,CAACpmB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB0S,MAAtB,CAA6B,UAAAhO,CAAC;AAAA,uBAAI8hB,cAAc,IAAI9hB,CAAtB;AAAA,eAA9B,CAAtB,CAArB;AAEA,kBAAIkiB,KAAK,GAAG,iEAAiBF,+BAAjB,CAAiDC,cAAjD,EAAiEL,UAAjE,EAA6EF,SAA7E,EAAwFb,oBAAxF,CAAZ;AACA,kBAAIsB,mBAAmB,GAAG,iEAAiB9iB,aAAjB,CAA+B6iB,KAA/B,EAAsC9T,OAAtC,GAAgD,CAAhD,EAAmDvO,IAA7E;AAEA,kBAAIuiB,aAAa,GAAGvB,oBAAoB,CAACiB,cAAD,EAAiBJ,SAAjB,EAA4B,CAAC,yDAASW,eAAV,EAA2B,UAACriB,CAAD,EAAIsiB,EAAJ,EAAW;AACxG,uBAAO,yDAASD,eAAT,CAAyBC,EAAzB,EAA6BH,mBAA7B,CAAP;AACD,eAFmE,CAA5B,CAAxC;AAGA,+EAAiB9iB,aAAjB,CAA+B6iB,KAA/B,EAAsC9T,OAAtC,GAAgD,CAAhD,EAAmDvO,IAAnD,GAA0DuiB,aAA1D;AAEA,kBAAIG,UAAU,GAAG,iEAAiBP,+BAAjB,CAAiDD,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBliB,IAAjE,EAAuE+hB,UAAvE,EAAmFF,SAAS,CAAC1T,MAAV,CAAiB,UAAAhO,CAAC;AAAA,uBAAIA,CAAC,IAAI+hB,SAAS,CAAC,CAAD,CAAT,CAAaliB,IAAtB;AAAA,eAAlB,CAAnF,EAAkIghB,oBAAlI,CAAjB;AACA,kBAAI2B,UAAU,GAAG,iEAAiBR,+BAAjB,CAAiDD,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBliB,IAAjE,EAAuE+hB,UAAvE,EAAmFF,SAAS,CAAC1T,MAAV,CAAiB,UAAAhO,CAAC;AAAA,uBAAIA,CAAC,IAAI+hB,SAAS,CAAC,CAAD,CAAT,CAAaliB,IAAlB,IAA0BG,CAAC,IAAIuiB,UAAU,CAAC,CAAD,CAAV,CAAc1iB,IAAjD;AAAA,eAAlB,CAAnF,EAA6JghB,oBAA7J,CAAjB;AAGA,kBAAI4B,UAAU,GAAG,iEAAiBC,uBAAjB,CAAyChB,SAAS,CAAC1T,MAAV,CAAiB,UAAAhO,CAAC;AAAA,uBAAIA,CAAC,IAAI+hB,SAAS,CAAC3T,OAAV,GAAoB,CAApB,EAAuBvO,IAA5B,IAAoCG,CAAC,IAAIuiB,UAAU,CAACnU,OAAX,GAAqB,CAArB,EAAwBvO,IAAjE,IAAyEG,CAAC,IAAIwiB,UAAU,CAACpU,OAAX,GAAqB,CAArB,EAAwBvO,IAA1G;AAAA,eAAlB,CAAzC,EAA4K+hB,UAA5K,EAAwLG,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBliB,IAAxM,EAA8MghB,oBAA9M,CAAjB;AAEA,kBAAI7E,IAAI,GAAG,CAACkG,KAAD,EAAQH,SAAR,EAAmBQ,UAAnB,EAA+BR,SAA/B,EAA0CS,UAA1C,EAAsDT,SAAtD,EAAiEU,UAAjE,CAAX;AACA,kBAAIvjB,SAAS,GAAG,iEAAiBG,aAAjB,CAA+B2c,IAA/B,CAAhB;AAEA,qBAAO9c,SAAP;AAED;AA/EH;AAAA;AAAA,uDAkF8F;AAAA,kBAAnE2hB,oBAAmE,uEAA9C,gEAAgBU,4BAA8B;AAG1F,kBAAIG,SAAS,GAAG,gEAAgBC,mBAAhB,CAAoC,IAApC,EAA0C,EAA1C,CAAhB;AACA,kBAAIgB,eAAe,GAAG,sDAAMja,OAAN,CAAc,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAA3B,EAAsD,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtD,EAA0E,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA1E,CAAd,EAA6GpN,KAA7G,CAAmH,CAAnH,EAAsH,CAAtH,CAAtB;AACA,kBAAIsnB,eAAe,GAAG,sDAAMla,OAAN,CAAc,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD,EAA2B,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAA3B,EAAsD,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtD,EAA0E,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA1E,CAAd,EAA2HpN,KAA3H,CAAiI,CAAjI,EAAoI,CAApI,CAAtB;AACA,eAN0F,CAO1F;AACA;;AACA,kBAAIsmB,UAAU,GAAGe,eAAe,CAACd,MAAhB,CAAuBe,eAAvB,CAAjB;AAGA,kBAAId,cAAc,GAAG,sDAAMV,eAAN,CAAsBM,SAAS,CAACpmB,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAtB,CAArB;AAEA,kBAAIunB,uBAAuB,GAAGf,cAA9B;AACA,kBAAIgB,cAAJ;;AACA,kBAAI;AACF,oBAAIC,eAAe,GAAG,CAAC,IAAD,EAAO,IAAI,oDAAJ,CAASjB,cAAT,EAAyB,EAAzB,CAAP,EAAqC,IAArC,CAAtB;AACAgB,8BAAc,GAAGH,eAAe,CAAC/oB,GAAhB,CAAoB,UAACopB,OAAD,EAAUC,MAAV,EAAqB;AACxD,sBAAIC,SAAS,GAAGH,eAAe,CAAC1nB,MAAhB,GAAyB,CAAzB,GAA6B,sDAAM+lB,eAAN,CAAsB2B,eAAe,CAACznB,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAtB,EAAoDuE,IAAjF,GAAwF,sDAAMuhB,eAAN,CAAsB,gEAAgB+B,gBAAhB,CAAiCJ,eAAe,CAAC,CAAD,CAAf,CAAmBljB,IAApD,EAA0DkjB,eAAe,CAAC,CAAD,CAAf,CAAmBljB,IAA7E,CAAtB,CAAxG;AACA,sBAAIujB,YAAY,GAAGniB,IAAI,CAACsa,KAAL,CAAW,CAAC0H,MAAM,GAAGD,OAAO,CAAC3nB,MAAR,GAAiB,CAA3B,IAAgCqmB,SAAS,CAACrmB,MAA1C,IAAoDsnB,eAAe,CAACtnB,MAAhB,GAAyB2nB,OAAO,CAAC3nB,MAAR,GAAiB,CAA9F,CAAX,CAAnB;AACA,sBAAIgoB,cAAc,GAAG3B,SAAS,CAAC4B,SAAV,CAAoB,UAACtjB,CAAD;AAAA,2BAAOA,CAAC,KAAKkjB,SAAb;AAAA,mBAApB,CAArB;AACA,sBAAIK,YAAY,GAAG7B,SAAS,CAACpmB,KAAV,CAAgB+nB,cAAhB,EAAgCD,YAAhC,CAAnB;AACA,sBAAIjE,MAAM,GAAG,iEAAiBqE,wBAAjB,CAA0CD,YAA1C,EAAwDP,OAAxD,EAAiEH,uBAAjE,EAA0F,CAAC,yDAASY,eAAV,EAA2B,yDAASC,QAApC,CAA1F,EAAyI7C,oBAAzI,CAAb;AACA,mFAAiB8C,2BAAjB,CAA6CxE,MAA7C,EAAqDuC,SAArD,EAAgEb,oBAAhE;AACAgC,yCAAuB,GAAG,gEAAgBe,SAAhB,CAA0B,gEAAgB7H,QAAhB,CAAyBoD,MAAM,CAAC,CAAD,CAAN,CAAUtf,IAAnC,IAA2C,CAArE,CAA1B;AACAkjB,iCAAe,GAAG5D,MAAlB;AACA,yBAAOA,MAAP;AACD,iBAVgB,CAAjB;AAWD,eAbD,CAaE,OAAO3lB,CAAP,EAAU;AACVC,uBAAO,CAACC,KAAR,CAAcF,CAAd;AACAC,uBAAO,CAACC,KAAR,CAAc,wBAAd;AACD,eAhCyF,CAkC1F;;;AACA,kBAAImqB,kBAAkB,GAAG,iEAAiBxkB,aAAjB,CAA+ByjB,cAA/B,CAAzB;AACA,kBAAIgB,aAAa,GAAG,gEAAgBnI,kBAAhB,CAAmCkI,kBAAkB,CAACjqB,GAAnB,CAAuB,UAAAoG,CAAC;AAAA,uBAAIA,CAAC,CAACH,IAAN;AAAA,eAAxB,CAAnC,CAApB;AACA,kBAAIkkB,YAAY,GAAGD,aAAa,CAACxoB,KAAd,CAAoBwoB,aAAa,CAACzoB,MAAd,GAAuB,CAA3C,EAA8C,CAACyoB,aAAa,CAACzoB,MAAf,GAAwB,CAAtE,CAAnB,CArC0F,CAsC1F;;AACA,kBAAI0oB,YAAY,CAAC1oB,MAAb,GAAsB,CAA1B,EAA6B;AAC3B5B,uBAAO,CAACC,KAAR,CAAc,kBAAd;AACD;;AAED,kBAAIsqB,cAAc,GAAG,sDAAMtb,OAAN,CAAcoa,cAAd,EAA8BlpB,GAA9B,CAAkC,UAACopB,OAAD,EAA0B;AAC/E,oBAAIiB,cAAc,GAAG,sDAAMvb,OAAN,CAAcsa,OAAd,CAArB;AACA,oBAAIkB,MAAM,GAAG,iEAAiB7kB,aAAjB,CAA+B4kB,cAA/B,EAA+CrqB,GAA/C,CAAmD,UAAAoG,CAAC;AAAA,yBAAIA,CAAC,CAACrF,KAAN;AAAA,iBAApD,CAAb;AACA,oBAAIwpB,UAAU,GAAG,iEAAiBC,kBAAjB,CAAoC,CAACF,MAAD,CAApC,EAA8CH,YAA9C,CAAjB;AACA,iFAAiBM,mCAAjB,CAAqD,iEAAiBhlB,aAAjB,CAA+B8kB,UAA/B,CAArD,EAAiGJ,YAAjG,EAA+GlD,oBAA/G;AACA,uBAAOsD,UAAP;AAED,eAPoB,CAArB;AAUA,kBAAIpC,SAAS,GAAGe,cAAc,CAACjB,MAAf,CAAsBmC,cAAtB,CAAhB;AACA,kBAAIM,cAAc,GAAG,iEAAiBjlB,aAAjB,CAA+B0iB,SAA/B,EAA0CnoB,GAA1C,CAA8C,UAAAoG,CAAC;AAAA,uBAAIA,CAAC,CAACH,IAAN;AAAA,eAA/C,CAArB;AAGA,kBAAIqiB,KAAK,GAAG,iEAAiBQ,uBAAjB,CAAyC,gEAAgB/G,kBAAhB,CAAmCmH,cAAc,CAAC,CAAD,CAAd,CAAkBlpB,GAAlB,CAAsB,UAAAoG,CAAC;AAAA,uBAAIA,CAAC,CAACH,IAAN;AAAA,eAAvB,CAAnC,CAAzC,EAAiH+iB,eAAjH,EAAkI,sDAAMxB,eAAN,CAAsBkD,cAAtB,CAAlI,EAAyK,CAAC,yDAASC,kBAAT,CAA4B,CAAC,CAA7B,EAAgC,CAAhC,CAAD,CAAzK,CAAZ;AACA,+EAAiBF,mCAAjB,CAAqD,iEAAiBhlB,aAAjB,CAA+B6iB,KAA/B,CAArD,EAA4FR,SAA5F,EAAuGb,oBAAvG;AACA,kBAAI2D,SAAS,GAAG,iEAAiBnlB,aAAjB,CAA+B6iB,KAA/B,CAAhB;AAGA,kBAAIuC,gBAAgB,GAAG,gEAAgB9I,kBAAhB,CAAoC,sDAAM+I,IAAN,CAAW5B,cAAX,EAA2ClpB,GAA3C,CAA+C,UAAAoG,CAAC;AAAA,uBAAIA,CAAC,CAACH,IAAN;AAAA,eAAhD,CAApC,CAAvB;AACA,kBAAI0iB,UAAU,GAAG,sDAAM7Z,OAAN,CAAcsb,cAAd,EAA8BpqB,GAA9B,CAAkC,UAAAopB,OAAO;AAAA,uBAAI,iEAAiBoB,kBAAjB,CAAoC,iEAAiB/kB,aAAjB,CAA+B2jB,OAA/B,EAAwCppB,GAAxC,CAA4C,UAAAoG,CAAC;AAAA,yBAAIA,CAAC,CAACrF,KAAN;AAAA,iBAA7C,CAApC,EAA+F8pB,gBAA/F,CAAJ;AAAA,eAAzC,CAAjB;AAEA,kBAAIjC,UAAU,GAAI,sDAAM9Z,OAAN,CAAc6Z,UAAd,CAAlB;AAGA,kBAAIE,UAAU,GAAG,iEAAiBC,uBAAjB,CAAyC4B,cAAzC,EAAyD1B,eAAzD,EAA0E,sDAAM8B,IAAN,CAAW,iEAAiBrlB,aAAjB,CAA+BmjB,UAA/B,CAAX,EAAuD3iB,IAAjI,EAAuI,CAAC,yDAASwiB,eAAV,EAA2B,yDAASqB,QAApC,CAAvI,CAAjB;AAGA,kBAAI1H,IAAI,GAAG,CAACkG,KAAD,EAAQY,cAAR,EAAwBkB,cAAxB,EAAwClB,cAAxC,EAAwDP,UAAxD,EAAoEO,cAApE,EAAoFN,UAApF,EAAgGM,cAAhG,EAAgHkB,cAAhH,EAAgIvB,UAAhI,CAAX;AAGA,qBAAOzG,IAAP;AAED;AA9JH;AAAA;AAAA,wCAiKc;AACV,qBAAO,CAAC,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAD,EAAsB,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAtB,EAA2C,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAA3C,EAAgE,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAhE,CAAP;AACD;AAnKH;AAAA;AAAA,sCAmKe;AACX,qBAAO,CAAC,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAD,EAAsB,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAtB,CAAP;AACD;AArKH;AAAA;AAAA,wCAuKc;AACV,qBAAQ,CAAC,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAD,EAAsB,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAAtB,EAA2C,IAAI,oDAAJ,CAAS,IAAT,EAAe,IAAf,CAA3C,CAAR;AAAyE;AAC1E;AAzKH;;AAAA;AAAA;;;2BAGa0E,kB;AAAkB,S;;;iBAAlBA,kB;AAAkB,mBAAlBA,kBAAkB,K;AAAA,sBAFjB;;;OADd;;;;;wEAGaA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVzhB,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA;AAAA;AAAA;AAAA,YAWa0lB,aAXb;AAAA;AAAA;;;gBAWaA;;;;6BAAAA,a;AAAa,W;AAAA,oBARf,CACP,4DADO,EAEP,uEAFO,EAGP,qEAHO,CAQe;;;OAX1B;;;4HAWaA,a,EAAa;AAAA,yBAVT,2EAUS;AAVO,oBAG7B,4DAH6B,EAI7B,uEAJ6B,EAK7B,qEAL6B,CAUP;AALX,oBAGD,2EAHC;AAKW,S;AAFI,O;;;;;wEAEjBA,a,EAAa;gBAXzB,sDAWyB;iBAXhB;AACRhpB,wBAAY,EAAE,CAAC,2EAAD,CADN;AAGRE,mBAAO,EAAE,CACP,4DADO,EAEP,uEAFO,EAGP,qEAHO,CAHD;AASND,mBAAO,EAAE,CAAC,2EAAD;AATH,W;AAWgB,U;;;;;;;;;;;;;;;;;;AClB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,wDAAGgpB,0BAAH,CAA8BC,SAA9B,GAA0C,kDAAGC,kBAAH,CAAsBC,KAAhE;;AACA,UAAI,sEAAYvc,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBwc,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIxrB,OAAO,CAACC,KAAR,CAAcurB,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACbA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAO9T,OAAO,CAACC,OAAR,GAAkBI,IAAlB,CAAuB,YAAW;AACxC,cAAIlY,CAAC,GAAG,IAAI4rB,KAAJ,CAAU,yBAAyBD,GAAzB,GAA+B,GAAzC,CAAR;AACA3rB,WAAC,CAAC6rB,IAAF,GAAS,kBAAT;AACA,gBAAM7rB,CAAN;AACA,SAJM,CAAP;AAKA;;AACD0rB,8BAAwB,CAACnqB,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAmqB,8BAAwB,CAAC5T,OAAzB,GAAmC4T,wBAAnC;AACAI,YAAM,CAAC1pB,OAAP,GAAiBspB,wBAAjB;AACAA,8BAAwB,CAACK,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["function standardizeName(oldName) {\n  return oldName.replace(/^\\_*/, \"\").replace(/\\_\\S*\\$/, \"\").replace(/\\_\\d/, \"\");\n}\n\nfunction instanceWithSimplifiedField(kotlinInstance, maxDeep, autoProxyMethod): any {\n  let newkotlinInstance = {};\n  Object.getOwnPropertyNames(kotlinInstance).forEach(\n    (oldName: string) => {\n      newkotlinInstance[oldName] = kotlinInstance[oldName]\n      let propertyclassName = !!kotlinInstance[oldName] && !!kotlinInstance[oldName].__proto__ && !!kotlinInstance[oldName].__proto__.constructor && kotlinInstance[oldName].__proto__.constructor.name;\n      let newName\n      if (!isNaN(parseInt(oldName))) {\n        newName = oldName;\n      } else {\n        newName = standardizeName(oldName);\n\n        if (propertyclassName === 'ArrayList' && !Array.isArray(kotlinInstance[oldName])) {\n          newName += \"Array\"\n        }\n        if (propertyclassName === \"HashMap\" || propertyclassName == \"LinkedHashMap\") {\n          newName += \"Map\"\n        }\n        if (propertyclassName === 'Function') {\n          newName += \"Function\"\n        }\n      }\n      let isNewNameAlreadyUsed = Object.getOwnPropertyDescriptor(newkotlinInstance, newName);\n      if (!kotlinInstance.__proto__) {\n        //TODO : most of the time it's inner object of stdlib class\n        newkotlinInstance[newName] = kotlinInstance[oldName]\n      }\n      if (!kotlinInstance.__proto__[newName]) {\n        try {\n          if (maxDeep >= 0) {\n            newkotlinInstance[newName] = parseKotlinToJsView(kotlinInstance[oldName], maxDeep - 1, autoProxyMethod)\n          } else {\n            newkotlinInstance[newName] = kotlinInstance[oldName]\n          }\n        } catch (e) {\n          console.error(e)\n        }\n\n      }\n\n    }\n  );\n  return newkotlinInstance;\n}\n\nexport function parseKotlinToJsView(kotlinInstance, maxDeep: number = 10000, autoProxyMethod = true) {\n  if (!!maxDeep && maxDeep < 0) {\n    return kotlinInstance\n  } else if (kotlinInstance === undefined || kotlinInstance === null) {\n    return kotlinInstance\n  } else if (typeof kotlinInstance !== 'object') {\n    return kotlinInstance\n  } else if (Array.isArray(kotlinInstance)) {\n    return kotlinInstance.map((item) => {\n      return parseKotlinToJsView(item, maxDeep, autoProxyMethod)\n    })\n\n  } else {\n    let className = kotlinInstance.__proto__.constructor.name\n    if (className === \"Function\") {\n\n      return (...args) => {\n        const retourMethod = kotlinInstance.apply(null, args)\n        if (autoProxyMethod) {\n          return parseKotlinToJsView(retourMethod, maxDeep - 1, autoProxyMethod);\n        } else {\n          return retourMethod;\n        }\n      }\n\n    } else if (className === 'ArrayList' || className === 'HashSet') {\n      return kotlinInstance.toArray().map((item) => {\n        if (maxDeep >= 0) {\n          return parseKotlinToJsView(item, maxDeep - 1, autoProxyMethod)\n        } else {\n          return item;\n\n        }\n      })\n    } else if (className === \"HashMap\" || className == \"LinkedHashMap\") {\n      let newkotlinInstance = {};\n      let protoMap = instanceWithSimplifiedField(kotlinInstance, 0, false);\n      if (protoMap.internalMap) {\n        protoMap = instanceWithSimplifiedField(protoMap.internalMap, 0, false)\n        if (protoMap.backingMap) {\n          Object.values(protoMap.backingMap)\n            .forEach((protoEntry: { value: any, key: any }) => {\n              let protoEntryProxy = instanceWithSimplifiedField(protoEntry, 0, false)\n              //keep the $\n              let key: string = protoEntryProxy.key.name$ ? protoEntryProxy.key.name$ : protoEntryProxy.key;\n              newkotlinInstance[key] = parseKotlinToJsView(protoEntryProxy.value, maxDeep - 1, false);\n            })\n        }\n      }\n      return newkotlinInstance\n    } else {\n\n      let newkotlinInstance = instanceWithSimplifiedField(kotlinInstance, maxDeep, autoProxyMethod);\n      newkotlinInstance.className = className;\n      return newkotlinInstance\n    }\n  }\n  return kotlinInstance;\n}\n\nexport function printProxyModel(obj, indentation = \"\") {\n\n  return Object.keys(obj).map(key => {\n\n    if (key.endsWith(\"Array\")) {\n      return printProxyModel(obj[key][0]);\n    }\n    return key;\n\n  })\n}\n\nexport function parseKotlinPathToJsView(instance, ...path) {\n\n  return parseKotlinToJsView(getFromKotlin(instance, ...path), 0, false)\n}\n\nexport function getFromKotlin(instance: any, ...path: string[]) {\n  if (path.length == 0 || !instance) {\n    return instance;\n  } else {\n    let propertyclassName = instance.__proto__.constructor.name;\n    if (instance.toArray) {\n      return getFromKotlin(instance.toArray()[path[0]], ...path.slice(1));\n    } else if (propertyclassName === \"HashMap\" || propertyclassName == \"LinkedHashMap\") {\n      return getFromKotlin(parseKotlinToJsView(instance, 0, false)[path[0]], ...path.slice(1));\n    } else {\n      let field: string = Object.keys(instance).find(fieldName => {\n        return standardizeName(fieldName) == path[0] //don't use ===, here\n      });\n      if (instance[field]) {\n        return getFromKotlin(instance[field], ...path.slice(1))\n      } else {\n        return instance[field]\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MusicViewComponent} from \"./music-view.component\";\nimport {PartitionViewComponent} from \"./partition-view/partition-view.component\";\nimport {TempViewComponent} from \"./partition-view/temp-view/temp-view.component\";\nimport {AsciiModule} from \"../utils/ascii/ascii.module\";\n\n\n@NgModule({\n  declarations: [MusicViewComponent, PartitionViewComponent, TempViewComponent],\n  exports: [\n    PartitionViewComponent\n  ],\n  imports: [\n    CommonModule,\n    AsciiModule\n  ]\n})\nexport class MusicModule {\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, Subject, Subscription} from \"rxjs\";\nimport {scan} from \"rxjs/operators\";\nimport {GameMusiqueService} from \"./game-musique.service\";\n\nimport * as tone from \"tone\";\nimport {compositionUtils, rhythmUtils, Note, instrumentUtils} from \"music-generator\"\nimport {ToneService} from \"./tone.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundService implements OnDestroy {\n\n  soundOnSubject$: Subject<boolean> = new BehaviorSubject<boolean>(false);\n  soundOn$ = this.soundOnSubject$.pipe(scan((previousValue, forcedValue) => {\n\n\n    let soundOn = forcedValue ? forcedValue : !previousValue;\n    if (!soundOn) {\n      console.warn(\"mute\")\n      tone.Destination.mute = true;\n\n    } else {\n      console.warn(\"unmute\")\n      tone.Destination.mute = false;\n    }\n    this.soundOn = soundOn;\n    return soundOn\n  }));\n\n  private soundOn: boolean;\n  private toneHaveBeenInitialized: boolean = false;\n\n\n  private gameMusic: tone.Part;\n  private menuMusic: tone.Part;\n  private currentAmbiance: tone.Part;\n\n  private moveSound: any;\n  private noSound: any;\n  private takeSound: any;\n  private ambiantInstrument: tone.Synth<any>;\n  private menuInstrument: tone.Synth<any>;\n  private gameInstrument: tone.Synth<any>;\n  private soundInstrument: tone.Synth<any>;\n\n  subscribeSoundOn(observer): Subscription {\n    return this.soundOn$.subscribe(observer)\n  }\n\n  constructor(private gameMusiqueService: GameMusiqueService, private toneService:ToneService) {\n    // document.body.addEventListener(\"mousemove\", () => this.soundOnSubject$.next(true), {once: true})\n\n\n    document.querySelector('body') && document.querySelector('body').addEventListener('click', async () => {\n      if (tone && !this.toneHaveBeenInitialized) {\n        this.toneService.start();\n        //this.currentAmbiance.volume-=10\n        console.log('audio is ready');\n        this.forceSoundOn()\n        this.toneHaveBeenInitialized = true;\n        tone.Transport.start()\n      } else if (this.toneHaveBeenInitialized) {\n        console.log(\"audio already ready\")\n      } else {\n\n        console.error('audio not ready')\n      }\n    });\n\n\n    this.menuInstrument = toneService.Synth();\n\n    this.gameInstrument =toneService.Synth();\n    this.soundInstrument = toneService.Synth();\n    this.gameInstrument.toDestination();\n    this.menuInstrument.toDestination();\n    this.soundInstrument.toDestination();\n    this.soundInstrument.volume.value -= 35\n    this.moveSound = this.gameMusiqueService.moveMusic();\n    this.takeSound = this.gameMusiqueService.takeMusic();\n    this.noSound = this.gameMusiqueService.noMusic();\n  }\n\n  generateMenuMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.menuMusic)\n        this.menuMusic = createLoop(this.menuInstrument, this.gameMusiqueService.menuMusicRandom(), 1.3);\n    });\n  }\n\n  generateGameMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.gameMusic)\n        this.gameMusic = createLoop(this.gameInstrument, this.gameMusiqueService.gameMusicRandom(), 0.8);\n    });\n  }\n\n  private tryNTimes(numberOfTry, callback) {\n    while (numberOfTry > 0) {\n      console.log(\"try generate menu music\")\n      try {\n        numberOfTry--;\n        callback()\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }\n\n  playMove() {\n    play(this.soundInstrument, this.moveSound, 0.5)\n  }\n\n  playTake() {\n    play(this.soundInstrument, this.takeSound, 0.5)\n  }\n\n  playNo() {\n    play(this.soundInstrument, this.noSound, 0.5)\n  }\n\n  async playMenuMusic() {\n    return this.playAmbiantMusic(this.menuMusic, this.menuInstrument);\n  }\n\n\n  public async playAmbiantMusic(newMusic:tone.Part<any>, instrument) {\n    console.log(\"new music to play\")\n    if (this.currentAmbiance) {\n      this.currentAmbiance.loop = false;\n      this.currentAmbiance.mute = true\n      await this.currentAmbiance.stop(tone.now())\n      this.ambiantInstrument.volume.value-=100;\n    }\n    newMusic.loop = true;\n    this.currentAmbiance = newMusic;\n    this.ambiantInstrument = instrument;\n    this.ambiantInstrument.volume.value=-45;\n    return newMusic.start()\n  }\n\n  private async playBruitageSound(music) {\n\n  }\n\n  async playGameMusic() {\n    return this.playAmbiantMusic(this.gameMusic, this.gameInstrument);\n\n  }\n\n  toogleSound() {\n    this.soundOnSubject$.next()\n  }\n\n  forceSoundOn() {\n    this.soundOnSubject$.next(true)\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.menuMusic) {\n      this.menuMusic.dispose()\n    }\n    if (this.gameMusic) {\n      this.gameMusic.dispose()\n    }\n    this.noSound.dispose()\n    this.takeSound.dispose()\n    this.moveSound.dispose()\n    this.ambiantInstrument.dispose()\n  }\n}\n\nexport function createLoop(instrument, partition: Array<any>, tempo = 1): tone.Part {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let timeC = 0;\n\n  let part = new tone.Part((time, note: Note) => {\n    let decalage = rhythmUtils.duration(note.value) * tempo;\n    instrument.triggerAttackRelease(note.tune, note.value, \"+\" + timeC)\n    timeC += decalage\n    //time = InstrumentUtils.playNote(instrument, n, time, 1.2)\n  }, flatpartition.map((note) => [0, note]));\n  part.loop = true;\n  return part;\n}\n\nexport function play(instrument, partition: Array<any>, tempo = 1) {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let now = tone.now()\n  instrument.toDestination()\n  for (let i = 0; i < 1; i++) {\n    flatpartition.forEach((n) => {\n      now = instrumentUtils.playNote(instrument, n, now, tempo)\n    })\n  }\n}\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {HighscoresService} from \"../service/highscores.service\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styles: [`.container {\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    text-align: center;\n  }\n\n\n  .title pre{\n    margin-left: auto;\n    margin-right: auto;\n    width: ${CHARACTER_SPACING * 60}px;\n  }\n\n  button {\n    text-align: center;\n    padding: 0 ${CHARACTER_SPACING * 4}px;\n  }\n  `]\n})\nexport class MenuComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('highScoreModal') highScoreModal: AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n  @ViewChild('newFormModal') newFormModal: AsciiModalComponent;\n  @ViewChild('characterFormModal') characterFormModal: AsciiModalComponent;\n  highscores: Array<any>;\n  private subscriptionHighscores: Subscription;\n\n  constructor(private router: Router,\n              private highscoresService: HighscoresService,\n              private soundService: SoundService) {\n  }\n\n  ngOnInit(): void {\n    this.subscriptionHighscores = this.highscoresService.getScores().subscribe((scores) => {\n      this.highscores = scores as Array<any>;\n    })\n    this.soundService.generateMenuMusic()\n  }\n\n  clickNew() {\n    this.soundService.playMove()\n    this.newFormModal.show()\n  }\n\n  clickMusic() {\n    this.router.navigateByUrl('/music');\n  }\n\n  clickCharacter() {\n\n    this.soundService.playMove()\n    this.characterFormModal.show()\n  }\n\n  saveHighScore() {\n    this.highscoresService.saveScore({name:'test'},Math.random()*100)\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionHighscores && this.subscriptionHighscores.unsubscribe()\n  }\n\n  ngAfterViewInit(): void {\n    this.soundService.playMenuMusic();\n  }\n}\n","<div class=\"title\">\n  <pre>\n\n\n\n   _           _        _____                           _\n  | |         | |      / ____|                         | |\n  | |     __ _| |__   | |  __  ___ _ __   ___ _ __ __ _| |_ ___  _ __\n  | |    / _` | '_ \\  | | |_ |/ _ \\ '_ \\ / _ \\ '__/ _` | __/ _ \\| '__|\n  | |___| (_| | |_) | | |__| |  __/ | | |  __/ | | (_| | || (_) | |\n  |______\\__,_|_.__/   \\_____|\\___|_| |_|\\___|_|  \\__,_|\\__\\___/|_|\n    <!--\n  _______ _            _       _\n  |__   __| |          | |     | |\n  | |  | |__   ___  | | __ _| |__\n  | |  | '_ \\ / _ \\ | |/ _` | '_ \\\n  | |  | | | |  __/ | | (_| | |_) |\n  |_|  |_| |_|\\___| |_|\\__,_|_.__/\n  __          ___                        _                            _\n  \\ \\        / / |                      | |                          | |\n  \\ \\  /\\  / /| |__   ___     ___  __ _| |_   _ __   ___  ___  _ __ | | ___\n  \\ \\/  \\/ / | '_ \\ / _ \\   / _ \\/ _` | __| | '_ \\ / _ \\/ _ \\| '_ \\| |/ _ \\\n  \\  /\\  /  | | | | (_) | |  __/ (_| | |_  | |_) |  __/ (_) | |_) | |  __/\n  \\/  \\/   |_| |_|\\___/   \\___|\\__,_|\\__| | .__/ \\___|\\___/| .__/|_|\\___|\n                                         | |              | |\n                                         |_|              |_|\n\n\n\n  ________        /___/   __\n  /_  __/ /  ___   / /__ _/ /\n  / / / _ \\/ -_) / / _ `/ _ \\\n  /_/ /_//_/\\__/ /_/\\_,_/_.__/    __                       __\n  | | /| / / /  ___    ___ ___ _/ /_  ___  ___ ___  ___  / /__\n  | |/ |/ / _ \\/ _ \\  / -_) _ `/ __/ / _ \\/ -_) _ \\/ _ \\/ / -_)\n  |__/|__/_//_/\\___/  \\__/\\_,_/\\__/ / .__/\\__/\\___/ .__/_/\\__/\n                                  /_/           /_/\n  -->\n  </pre>\n</div>\n<div class=\"container text\">\n  <button ascii-render\n       (click)=\"clickNew()\">NEW LABYRINTH\n  </button>\n  <button ascii-render\n       (click)=\"clickCharacter()\">CHANGE CHARACTER LOOK\n  </button>\n  <button ascii-render\n       (click)=\"saveHighScore();highScoreModal.show()\">HIGHSCORE\n  </button>\n  <button ascii-render\n       (click)=\"clickMusic()\">ABOUT THE MUSIC...\n  </button>\n</div>\n<app-ascii-modal #highScoreModal (click)=\"this.highScoreModal.hide()\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <div ascii-border\n         hoverClass=\"asciiHighlight\"\n    ><span>Highscore</span>\n    </div>\n    <div ascii-border>\n\n      Your best score\n      <br/>\n      Ever!\n      <div *ngFor=\"let score of highscores\">\n        <div ascii-border xRepeat=\"30\">\n          {{score.player.name}} : {{score.score}}</div>\n      </div>\n    </div>\n  </div>\n</app-ascii-modal>\n<app-ascii-modal #newFormModal [closable]=\"true\">\n  <app-labyrinth-form></app-labyrinth-form>\n</app-ascii-modal>\n<app-ascii-modal #loadingModal (click)=\"this.loadingModal.hide()\">Loading</app-ascii-modal>\n<app-ascii-modal #characterFormModal [closable]=\"true\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n  </div>\n</app-ascii-modal>\n\n<audio #player\n></audio>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LabyrinthGameComponent} from \"./labyrinth-game.component\";\nimport {SlidingComponent} from \"../../utils/ui/atom/sliding/sliding.component\";\nimport {KeypadFormComponent} from \"./keypad-form/keypad-form.component\";\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {MapViewComponent} from \"./map-view/map-view.component\";\nimport {InventoryViewComponent} from \"./inventory-view/inventory-view.component\";\nimport { ZoneViewComponent } from './level-view/zone-view/zone-view.component';\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {LoadingModule} from \"../loading/loading.module\";\n\n\n@NgModule({\n  declarations: [LabyrinthGameComponent,\n    SlidingComponent,\n    KeypadFormComponent,\n    LevelViewComponent,\n    MapViewComponent,\n    KeypadFormComponent,\n    InventoryViewComponent,\n    ZoneViewComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n    LoadingModule\n  ],\n    exports: [LabyrinthGameComponent,\n        SlidingComponent,\n        KeypadFormComponent,\n        LevelViewComponent,\n        MapViewComponent,\n        KeypadFormComponent,\n        InventoryViewComponent,\n      ZoneViewComponent]\n})\nexport class LabyrinthGameModule {\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport {Note, rhythmUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-temp-view',\n  templateUrl: './temp-view.component.html',\n  styleUrls: ['./temp-view.component.css']\n})\nexport class TempViewComponent implements OnInit {\n\n\n  @Input()\n  temp: Note\n  @Input()\n  scale: Array<string> = [];\n\n\n  style() {\n\n    return this.temp ? {\n      minWidth: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n      width: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n\n      display: \"inline-block\"\n    }:{}\n  }\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  noteStyle(note: any) {\n    if (note == this.temp.tune) {\n      return {}\n    } else {\n      return {color: 'lightgrey'}\n    }\n\n  }\n}\n","<div [style]=\"style()\">\n  <div>{{temp?.value}}</div>\n  <div *ngFor=\"let tune of scale\" [style]=\"noteStyle(tune)\">\n    {{tune}}</div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {GameMusiqueService} from \"../labyrinth/service/sound/game-musique.service\";\nimport {createLoop, SoundService} from \"../labyrinth/service/sound/sound.service\";\n\nimport * as tone from \"tone\";\n\n@Component({\n  selector: 'app-music-view',\n  templateUrl: './music-view.component.html',\n  styleUrls: ['./music-view.component.css']\n})\nexport class MusicViewComponent implements OnInit {\n\n  constructor(private musiqueService: GameMusiqueService,\n              private soundService: SoundService) {\n  }\n\n  currentMusicPartition: any;\n  currentPart: any;\n  currentInstrument: any;\n  instrument = new tone.Synth().toDestination();\n  instrument2 = new tone.Synth().toDestination();\n\n  ngOnInit(): void {\n  }\n\n  generateMenuMusic() {\n    this.changeMusic(this.musiqueService.menuMusicRandom(), this.instrument)\n  }\n\n  generateGameMusic() {\n    this.changeMusic(this.musiqueService.gameMusicRandom(), this.instrument2)\n  }\n\n  pause() {\n    this.currentPart.stop(tone.now());\n    this.currentInstrument.volume.value=-100;\n\n  }\n\n  play() {\n    this.currentPart.start();\n  }\n\n  clear() {\n    if (this.currentPart) {\n      this.currentPart.stop()\n    }\n  }\n\n  changeMusic(newPartition, instrument) {\n    console.log(\"changeMusic\")\n    this.currentMusicPartition = newPartition;\n    this.clear();\n    this.currentPart = createLoop(instrument, this.currentMusicPartition);\n    this.currentInstrument=instrument\n    this.currentInstrument.volume=-40;\n    this.soundService.playAmbiantMusic(this.currentPart, instrument);\n  }\n}\n","<div>\n  <div ascii-border contentClass=\"text\">About the music...</div>\n</div>\n<div>\n  <div ascii-border contentClass=\"text\">\n    <p>A new music is randomly generated at each new level.\n    </p>\n    <p>Only the music's menu is generated with a fix seed.</p>\n    <p>Try-it !</p>\n  </div>\n</div>\n<div>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateMenuMusic()\">Music menu</button>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateGameMusic()\">Random Level Music</button>\n</div>\n<div>\n  <button ascii-border (click)=\"pause()\">Pause</button>\n  <button ascii-border (click)=\"play()\">Play</button>\n</div>\n<div ascii-border contentClass=\"text\">\n  partition of the current musique:\n  <app-partition-view [partitionForms]=\"currentMusicPartition\"></app-partition-view>\n</div>\n","import {\n  Component, ContentChild, Directive, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Directive({\n  selector: '[app-ascii-on-grid-div] '\n})\nexport class AsciiInsideGridDivComponent {\n  @ContentChild(HTMLElement)\n  child: HTMLElement\n  @Input()\n  public content: string\n\n  @HostBinding(\"style\")\n  get hostStyle(): CSSStyleDeclaration {\n    let contentSplited = (this.content ? this.content : this.child ? this.child.textContent : 'x').split('\\n');\n    console.log(\"contentSplited\")\n    console.log(contentSplited)\n    return {\n      gridColumn: 'span ' + contentSplited[0].length,\n      gridRow: 'span ' + contentSplited.length\n    } as CSSStyleDeclaration;\n  }\n\n}\n","import {AfterViewChecked, AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'ascii-line',\n  templateUrl: './ascii-line.component.html',\n  styleUrls: ['./ascii-line.component.css']\n})\nexport class AsciiLineComponent implements OnInit {\n  @Input()\n  size: number = 1\n  char: String = \".\"\n\n  line: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.line = \"\";\n\n    for (let i = 0; i < this.size; i++)\n      this.line += this.char;\n  }\n\n\n}\n","{{line}}\n\n","import { Component, OnInit } from '@angular/core';\nimport {defaultButtonBorderTemplate}  from \"../../../labyrinth/service/render/resources/border\";\n@Component({\n  selector: 'app-ascii-button',\n  template: '<span ascii-border class=\"ihm-ui\" contentClass=\"text interact-ui\" [computeRenderEachTime]=\"false\" [borderTemplate]=\"defaultButtonBorderTemplate\" ><ng-content></ng-content></span>',\n  styleUrls: ['./ascii-button.component.css']\n})\nexport class AsciiButtonComponent implements OnInit {\n  label: string;\n  defaultButtonBorderTemplate = defaultButtonBorderTemplate\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {asciiStringToGridObject} from \"./border-compute\";\n\nlet paperRaw = \"\" +\n  \"  ________   \\n\" +\n  \" / \\\\      \\\\  \\n\" +\n  \"(  )|      | \\n\" +\n  \" \\\\_/|      |  \\n\" +\n  \"    |      |  \\n\" +\n  \"    |  ,___|_ \\n\" +\n  \"    \\\\_/_____/ \"\nexport let paperGridTemplate = asciiStringToGridObject(paperRaw, 8, 1, 4, 1)\n\n\nlet paperExitRaw = \"\" +\n  \"____  \\n\" +\n  \"\\\\   \\\\ \\n\" +\n  \"|   | \\n\" +\n  \" \\\\__| \"\nexport let paperExitGridTemplate = asciiStringToGridObject(paperExitRaw, 2, 1, 2, 1)\n\nlet mapZoneRaw = \"\" +\n  \" | \\n\" +\n  \"- -\\n\" +\n  \" | \"\nexport let mapGridTemplate = asciiStringToGridObject(mapZoneRaw, 1, 1, 1, 1)\n\nlet abcRaw = \"\" +\n  \"abc\\n\" +\n  \"d e\\n\" +\n  \"fgh\"\nexport let abcGridTemplate = asciiStringToGridObject(abcRaw, 1, 1, 1, 1)\n\nlet defaultBorderRaw = \"\" +\n  \"+-+\\n\" +\n  \"| |\\n\" +\n  \"+-+\"\nexport let defaultGridTemplate = asciiStringToGridObject(defaultBorderRaw, 1, 1, 1, 1)\n\nlet doubleBorderRaw = \"\" +\n  \"#=#\\n\" +\n  \"H H\\n\" +\n  \"#=#\"\nexport let doubleGridTemplate = asciiStringToGridObject(doubleBorderRaw, 1, 1, 1, 1)\n\nlet buttonBorderRaw = \"\" +\n  \",-.\\n\" +\n  \"| |\\n\" +\n  \"'-'\"\nexport let defaultButtonBorderTemplate = asciiStringToGridObject(buttonBorderRaw, 1, 1, 1, 1)\n\nlet titleBorderRaw = \"\" +\n  \".¨.\\n\" +\n  \": :\\n\" +\n  \" ¨ \"\nexport let defaultTitleBorderTemplate = asciiStringToGridObject(titleBorderRaw, 1, 1, 1, 1)\n\n\nlet loadingBorderRaw = \"\" +\n  \" _.-._. \\n\" +\n  \"(      )\\n\" +\n  \" )    (\\n\" +\n  \"(      )\\n\" +\n  \" '.-._. \"\nexport let loadingBorderGridTemplate = asciiStringToGridObject(loadingBorderRaw, 2, 4, 1, 2)\n\nlet viewCloseDoorZoneRaw = \"\" +\n  \" .-----------------------.\\n\" +\n  \" |\\\\    \\\\¨¨¨¨¨¨¨¨¨¨¨/    /|\\n\" +\n  \" | \\\\    \\\\    1    /    / |\\n\" +\n  \" |  \\\\    \\\\       /    /  |\\n\" +\n  \" |   \\\\____\\\\-----/____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:  '               '  :|\\n\" +\n  \" |: 1|               |1 :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/-----\\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /   1   \\\\    \\\\  |\\n\" +\n  \" | /    /_ _ _ _ _\\\\    \\\\ |\\n\" +\n  \" `-----------------------'\"\n\n\nlet viewOpenDoorZoneRaw = \"\" +\n  \" .-----------------------.\\n\" +\n  \" |\\\\    \\\\¨¨|¨¨¨¨¨|¨¨/    /|\\n\" +\n  \" | \\\\    \\\\ |     | /    / |\\n\" +\n  \" |  \\\\    \\\\|     |/    /  |\\n\" +\n  \" |   \\\\____\\\\     /____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:--'               '--:|\\n\" +\n  \" |:                     :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/     \\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /|     |\\\\    \\\\  |\\n\" +\n  \" | /    /_|_ _ _|_\\\\    \\\\ |\\n\" +\n  \" `-----------------------'\"\n\nlet viewWallZoneRaw = \"\" +\n  \" .----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\                   / |\\n\" +\n  \" |  \\\\                 /  |\\n\" +\n  \" |   \\\\_______________/   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /                 \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `----------------------'\"\n\n\nlet defaultZoneCornerWidth = 6;\nlet defaultZoneSideWidth = 15;\nlet defaultZoneCornerHeight = 5;\nlet defaultZoneSideHeight = 5;\nexport let viewCloseDoorGridTemplate = asciiStringToGridObject(viewCloseDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\n\nlet viewEmptyZoneRawOld = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\##########################/|\\n\" +\n  \" |#\\\\########################/#|\\n\" +\n  \" |##\\\\######################/##|\\n\" +\n  \" |###\\\\####################/###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###/####################\\\\###|\\n\" +\n  \" |##/######################\\\\##|\\n\" +\n  \" |#/########################\\\\#|\\n\" +\n  \" `---------------------------'\"\nlet viewEmptyZoneRawOld2 = \"\" +\n  \" .---- ---   --- --------.\\n\" +\n  \" |\\\\         .             /|\\n\" +\n  \" | \\\\                       |\\n\" +\n  \" |                      /  |\\n\" +\n  \"     \\\\__ ___ _____  ___:   |\\n\" +\n  \" |   |                 |    \\n\" +\n  \"  .  |                 |    \\n\" +\n  \" |                       ¨ |\\n\" +\n  \" |   |                 |   |\\n\" +\n  \"     |                 |    \\n\" +\n  \" |                          \\n\" +\n  \"     /    ¨¨  ¨  ¨¨¨  ¨\\\\   |\\n\" +\n  \" |                      \\\\  |\\n\" +\n  \"   /           .         \\\\ |\\n\" +\n  \" `---- --   - -- -  - ---'\"\nlet viewEmptyZoneRaw3 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nlet viewEmptyZoneRaw4 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        /                       \\n\" +\n  \"       /                        \\n\" +\n  \"      /                         \\n\" +\n  \"     /                          \\n\" +\n  \"    /                           \\n\" +\n  \"   /                            \\n\" +\n  \"  /                             \\n\" +\n  \" /                              \\n\" +\n  \"/                               \"\n\nlet viewWallZoneRaw2 = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |             /              /|\\n\" +\n  \" |            /              / |\\n\" +\n  \" |           /              /  |\\n\" +\n  \" |          /              /   |\\n\" +\n  \" |         /              /   |\\n\" +\n  \" |        /              /    |\\n\" +\n  \" |       /              /  |   |\\n\" +\n  \" |      /              /   |   |\\n\" +\n  \" |     /              /    |   |\\n\" +\n  \" |    /              /     |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨/¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /              /        \\\\  |\\n\" +\n  \" | /              /          \\\\ |\\n\" +\n  \" `---------------+-----------'\"\n\n\nlet viewEmptyDeepZoneRaw = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\                          /|\\n\" +\n  \" | \\\\                /       / |\\n\" +\n  \" |  \\\\      \\\\               /  |\\n\" +\n  \" |   \\\\                    /   |\\n\" +\n  \" |    \\\\           /      /    |\\n\" +\n  \" |     \\\\                /     |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |     /                \\\\     |\\n\" +\n  \" |    /                  \\\\    |\\n\" +\n  \" |   /     /              \\\\   |\\n\" +\n  \" |  /  /                   \\\\  |\\n\" +\n  \" | /                        \\\\ |\\n\" +\n  \" `---------------------------'\"\n\nlet viewEmptyDeepOmbreZoneRaw = \"\" +\n  \" .----.--  .----,----,---.\\n\" +\n  \" |\\\\                      /|\\n\" +\n  \" | \\\\            /       / |\\n\" +\n  \" |  \\\\      \\            / /\\n\" +\n  \" \\\\   \\\\                /    \\n\" +\n  \" |    \\\\       /      /    |\\n\" +\n  \"    -  \\\\\\\\ |  /    ///  _  |\\n\" +\n  \"      ¨=############=¨    |\\n\" +\n  \" |    _=############=_  - |\\n\" +\n  \"      /////   \\\\   \\\\\\\\\\\\     |\\n\" +\n  \" |  /  /        \\\\      \\\\  |\\n\" +\n  \" | /                    \\\\ |\\n\" +\n  \" `-- --'--'------`---`---'\"\n\n\nlet viewEmptyDeepWaterZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\           / /\\n\" +\n  \" \\\\   \\\\               /    \\n\" +\n  \" |    \\\\__-__-_--__  /    |\\n\" +\n  \" |  - ¨(  _-____   )¨ _  |\\n\" +\n  \"      ¨ )_-__  _  (¨    |\\n\" +\n  \" |    _(  -   -__  )_  - |\\n\" +\n  \"      /'--__--__---'\\\\    |\\n\" +\n  \" /   /     /          \\\\   \\\\\\n\" +\n  \" |  /  /       \\\\      \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\nlet viewEmptySpikeZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\          / /\\n\" +\n  \"     \\\\_______________/   |\\n\" +\n  \" |   |   A  /\\\\  /\\\\   |    \\n\" +\n  \" |   |  / \\\\  /\\\\      |   |\\n\" +\n  \"     |           ^   |   |\\n\" +\n  \"     |   ^           |   |\\n\" +\n  \" |   |     /\\\\    / \\\\ |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \"  / /  /       \\\\      \\\\  \\\\\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\n\nlet viewEmptyObstructedZoneRaw = \"\" +\n  \" .                ---    \\n\" +\n  \"                         \\n\" +\n  \" |                       \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      \\n\" +\n  \"     --          ---  \"\nlet viewObstructed2lZoneRaw = \"\" +\n  \" .----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-, |\\n\" +\n  \" |  |                  | |\\n\" +\n  \" | |     °            |  |\\n\" +\n  \" |  |            °     | |\\n\" +\n  \" | |      O            | |\\n\" +\n  \" | |                   | |\\n\" +\n  \" |  |             0   |  |\\n\" +\n  \" | |      °            | |\\n\" +\n  \" | |   o       °       | |\\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `----------------------'\"\nlet viewObstructed3lZoneRaw = \"\" +\n  \" .-  ---- - ---    --- -.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-,  \\n\" +\n  \"    |                  | |\\n\" +\n  \"   |     °            |  |\\n\" +\n  \"    |            °     |  \\n\" +\n  \" | |      O            |  \\n\" +\n  \"   |                   | |\\n\" +\n  \"   |           O       | |\\n\" +\n  \" |  |                 |   \\n\" +\n  \"   |   o       °       |  \\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `------    ----  --  --'\"\n\n\nlet viewEmptyZoneRaw5 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        ( @   @ )                  \\n\" +\n  \"         \\\\ A /                   \\n\" +\n  \"          uUuu                      \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nexport let viewEmptyZoneGridTemplate = asciiStringToGridObject(viewObstructed3lZoneRaw, 6, 0, 5, 0)\nexport let viewEmptyZones = [viewObstructed3lZoneRaw, viewObstructed2lZoneRaw, viewEmptySpikeZoneRaw, viewEmptyObstructedZoneRaw, viewEmptyDeepWaterZoneRaw]\nexport let viewEmptyZoneGridTemplates = viewEmptyZones.map((z => asciiStringToGridObject(z, 6, 0, 5, 0)));\n\n\nexport let viewOpenDoorGridTemplate = asciiStringToGridObject(viewOpenDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\nexport let viewWallGridTemplate = asciiStringToGridObject(viewWallZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\nexport let exitTemplate: any = \"\" +\n  \"  |--|  \\n\" +\n  \"  |--|  \\n\" +\n  \":¨|--|¨:\\n\" +\n  \"'¨¨¨¨¨¨'\\n\" +\n  \"  exit \";\nexport let startTemplate: any = \"\" +\n  \"+______\\n\" +\n  \"|start<\\n\" +\n  \"+¨¨¨¨¨¨\\n\" +\n  \"|      \\n\" +\n  \"|      \";\nlet bagRaw = \"\" +\n  \"(@=======(@   \\n\" +\n  \"||       ||   \\n\" +\n  \" \\\\\\\\ '' '//    \\n\" +\n  \"  \\\\\\\\   //     \\n\" +\n  \"   \\\\===/      \";\n\nlet handRaw = \"\" +\n  \"       /EN\\\\         \\n\" +\n  \"   /NV||..||TO\\\\     \\n\" +\n  \"   |..||  ||..|     \\n\" +\n  \"/I||..||''||..|     \\n\" +\n  \"|.||..\\\\/..\\\\/..| / RY|\\n\" +\n  \"|.|          \\\\/\\\\  /\\n\" +\n  \"|              \\\\|  \\\\/ \\n\" +\n  \"\\\\                /   \\n\" +\n  \" \\\\              /    \"\n\n\nlet bigHandRaw = \"\" +\n  \"         /EN\\\\         \\n\" +\n  \"    / NV||...||TO \\\\     \\n\" +\n  \"    |...||   ||...|     \\n\" +\n  \"/I ||...||'''||...|     \\n\" +\n  \"|..||...\\\\/...\\\\/...| / RY |\\n\" +\n  \"|..|            \\\\/\\\\   /\\n\" +\n  \"|                \\\\|   \\\\/ \\n\" +\n  \"\\\\                    /   \\n\" +\n  \" \\\\                  /    \"\n\nlet otherHandRaw = \"\" +\n  \"     (IN) (VEN)(TOR)    \\n\" +\n  \"     |¨¨| |¨¨¨||¨¨¨|(Y) \\n\" +\n  \"\\\\\\\"-_ |¨¨| |¨¨¨||¨¨¨||¨| \\n\" +\n  \" \\\\  \\\\|¨¨¨  ¨¨¨  ¨¨¨ ¨¨/ \\n\" +\n  \"  \\\\  :               ¨| \\n\" +\n  \"   \\\\_               /   \\n\" +\n  \"     \\\\              /    \"\n\n\n\n\n\nexport let bagGridTemplate = asciiStringToGridObject(otherHandRaw, 6, 15, 4, 1)\n\nlet inventoryBox =  \"\" +\n  \".=====.\\n\" +\n  \"|\\\\   /|\\n\" +\n  \"| \\\\=/ |\\n\" +\n  \"| | | |\\n\" +\n  \"| /=\\\\ |\\n\" +\n  \"|/   \\\\|\\n\" +\n  \"`====='\"\nexport let inventoryBoxGridTemplate = asciiStringToGridObject(inventoryBox, 3, 1, 3, 1)\n\nconsole.log(bagGridTemplate)\n","import {Injectable} from '@angular/core';\n\nimport {Observable, of, ReplaySubject, Subject} from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport * as gameRules from 'gameRules';\n// @ts-ignore\n\nimport {DataStorageService} from \"./data-storage.service\";\nimport {SoundService} from \"./sound/sound.service\";\n\nlet labeatGeneration = gameRules.fr.perso.labyrinth.labeat.generation;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateLabService {\n\n  constructor(private router: Router,\n              private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    this.generateSpirale()\n  }\n\n\n  generate(size, playerName: string): void {\n    let party = labeatGeneration.initPartieMapLabWithKey(size, playerName) //labeatGeneration.initPartieCompositeLabWithKeyFunction(size)\n    this.dataStorageService.saveParty(party)\n    this.soundService.generateGameMusic();\n  }\n\n  generateEmpty(size): void {\n    let party = {level: labeatGeneration.connectAllZoneOfBoard(labeatGeneration.generateEmptyBoard(size))}\n    this.dataStorageService.saveParty(party)\n    this.router.navigateByUrl('/game');\n  }\n\n  generateSpirale(): void {\n    let party = labeatGeneration.initPartieSpiral()\n    this.dataStorageService.saveParty(party)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {\n  viewCloseDoorGridTemplate,\n  viewOpenDoorGridTemplate,\n  viewWallGridTemplate\n} from \"../../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../../service/render/fullsize-ascii-render.service\";\nimport {utils} from \"music-generator\";\nimport {LINE_HEIGHT} from \"../../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../../utils/kotlinUtils\";\n\nlet backgroundTemplate = utils.shuffle([' ¨    \\n  °',\n  ' -      \\n       -   \\n    -',\n  \"\",\n  //'__/___/____\\\\_\\\\_\\n_/_/_______\\\\___\\n_____/____\\\\____\\n___/____\\\\______\\n_/_______\\\\___\\\\_\\n',\n  ' _/  _/____\\\\_\\\\_\\n_/_/___    \\\\___\\n_____/  __\\\\____\\n___/____\\\\__    \\n_/   ___\\\\__ \\\\_\\n',\n  //' _/___ /_ \\\\_\\\\_\\n_/_/_ __  _\\\\___\\n____ /__ _\\\\_ __\\n_ _/_ _ \\\\__ ___\\n_/__ __ _\\\\__\\\\__\\n',\n  //' _/_/__ \\\\__ \\\\_\\n___/ / __\\\\__  \\\\\\n __/ /__ \\\\_\\\\\\\\_\\n_ __/  __\\\\_\\\\ \\\\\\n/ __/_/_\\\\__  \\\\_',\n\n  ' ,`    ,  \\'  \\n ,\\'    \\'  ,  ,,  \\n       ,  \\n    \\'\\'  , ` ,     ',\n  ' .    .  \\n    .   .   \\n    .',\n  ' .       .  \\n       .    .   \\n       .',\n  ' °       o  \\n       °    .   \\n  o   °       .',\n  ' ..    ..... .. \\n. . .... ..... .\\n.. ... ..   ....\\n....     .... . \\n. .      ...   .\\n'\n\n])\n\n@Component({\n  selector: 'app-zone-view',\n  templateUrl: './zone-view.component.html',\n  styleUrls: ['./zone-view.component.css'],\n  styles: [`.zoneContent {\n    position: relative;\n    min-height: ${LINE_HEIGHT * 5}px;\n  }`]\n\n})\nexport class ZoneViewComponent implements OnInit {\n\n  @Input()\n  zone?: any;\n  proxy?: any;\n\n  constructor(public gameplayLabService: GameplayLabService,\n              public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnInit(): void {\n    if (!this.zone)\n      this.zone = {}\n    this.proxy = parseKotlinToJsView(this.zone, 7)\n  }\n\n  borderRendered() {\n    let borderRendered = {...viewWallGridTemplate}\n    let directions: Array<string> = ['left', \"right\", 'top', 'bottom'];//should stay lowcase\n    directions.forEach((direction: string) => {\n      let door = this.gameplayLabService.doorAt(this.proxy, direction.toUpperCase())\n      borderRendered[direction + \"BorderClass\"] = 'decor-ui'\n      if (door) {\n        borderRendered[direction + \"BorderClass\"] = 'interact-ui'\n        if (door.key) {\n          borderRendered[direction + \"Template\"] = viewCloseDoorGridTemplate[direction + \"Template\"].replace(\"1\", door.name)//TODO : use template instead of replace\n        } else {\n          borderRendered[direction + \"Template\"] = viewOpenDoorGridTemplate[direction + \"Template\"]\n        }\n        borderRendered[direction + \"Tooltip\"] = this.computeTooltip(door)\n      }\n    })\n\n    return borderRendered;\n  }\n\n  backgroundRender() {\n    return backgroundTemplate[(this.proxy.x + this.proxy.y * 3) % backgroundTemplate.length]\n  }\n\n  clickOnBorder: any = (direction: string, event: Event) => {\n    if (this.gameplayLabService.hasPlayer(this.zone)) {\n      if (this.gameplayLabService.move(direction)) {\n          event.preventDefault();\n        }\n    } else {\n     this.clickOnZone(event)\n    }\n  }\n\n  takeObj: any = (obj) => {\n    this.gameplayLabService.take(obj)\n  }\n\n  clickOnZone: any = (e: Event) => {\n    if (this.gameplayLabService.moveAtCase(this.zone)) {\n      e.preventDefault();\n    }\n  };\n\n  renderObj(obj: any) {\n    return this.renderService.renderObj(obj)\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n  getLevelContent() {\n    return this.gameplayLabService.levelContent(this.proxy)\n  }\n}\n","<div ascii-border class=\"zone asciiArt decor-ui\"\n     [borderTemplate]=\"borderRendered()\"\n     [borderClick]=\"clickOnBorder\"\n\n     [xRepeat]=\"1\"\n     [yRepeat]=\"1\"\n     [name]=\"'zone'\"\n>\n  <div class=\"zoneContent\" (click)=\"clickOnZone( $event)\">\n    <div class=\"background-ui zoneBackground\">{{backgroundRender()}}</div>\n    <div app-ascii-on-grid-div>\n      <span app-ascii\n           *ngFor=\"let obj of getLevelContent()\"\n           class=\"zoneObject asciiArt interact-ui\"\n           (click)=\"this.takeObj(obj)\"\n           [tooltip]=\"computeTooltip(obj)\"\n           [content]=\"renderObj(obj)\"\n      >\n      </span>\n    </div>\n\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\n\nconst defaultData = {\n  top: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  right: 'auto',\n  marginTop: 'auto',\n  marginBottom: 'auto',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  color: 'initial',\n  position: 'initial',\n  transform: 'initial',\n}\n\n\nfunction generateStyle(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle[key] = '{{ ' + dataName + '' + key + ' }}'\n  }\n  return style(tokenStyle);\n}\n\nfunction generateDefaultParams(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle['' + dataName + '' + key] = defaultData[key]\n  }\n\n  return tokenStyle\n}\n\n\n@Component({\n  selector: 'app-sliding',\n  templateUrl: './sliding.component.html',\n  styleUrls: ['./sliding.component.css'],\n  animations: [\n    trigger('openClose', [\n      // ...\n      state('open', generateStyle('_openData'), {\n        params: generateDefaultParams('_openData')\n      }),\n      state('close', generateStyle('_closeData'), {\n        params: generateDefaultParams('_closeData')\n      }),\n      transition('* => open', [\n        animate('2s')\n      ]),\n      transition('* => close', [\n        animate('1s')\n      ]),\n    ]),\n  ],\n})\nexport class SlidingComponent implements OnInit, OnChanges {\n  @Input()\n  public openData: any = {}\n  @Input()\n  public closeData: any = {}\n  @Input()\n  public slideOnlyOnClick = false\n\n  public isOpen = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  ngOnChanges(): void {\n\n\n  }\n\n\n  open() {\n    this.isOpen = true\n  }\n\n  close() {\n    this.isOpen = false\n  }\n\n  onAnimationEvent($event: any) {\n  }\n\n  generateParams() {\n    const params = {}\n\n    for (let key in defaultData) {\n      params['_openData' + key] = this.openData[key] ? this.openData[key] : defaultData[key]\n      params['_closeData' + key] = this.closeData[key] ? this.closeData[key] : defaultData[key]\n\n    }\n    return params\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  mouseOver() {\n    !this.slideOnlyOnClick && this.open()\n  }\n\n  mouseLeave() {\n    !this.slideOnlyOnClick && this.close()\n  }\n\n  click() {\n    if (this.slideOnlyOnClick) {\n      this.toggle();\n    } else {\n      this.close()\n    }\n  }\n}\n","<div class=\"slideContainer\"\n     (mouseover)=\"mouseOver()\"\n     (mouseout)=\"mouseLeave()\"\n     (mouseleave)=\"mouseLeave()\"\n     (mousedown)=\"click()\"\n     [@openClose]=\"{value:isOpen?'open':'close', params: this.generateParams()}\"\n     (@openClose.start)=\"onAnimationEvent($event)\"\n     (@openClose.done)=\"onAnimationEvent($event)\"\n>\n  <ng-content></ng-content>\n</div>\n","import {Component, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {DataStorageService} from \"../../labyrinth/service/data-storage.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\nimport {CharacterRenderData, CharacterRenderService} from \"../../labyrinth/service/render/character-render.service\";\n\n\n\n@Component({\n  selector: 'app-character-form',\n  templateUrl: './character-form.component.html',\n  styleUrls: ['./character-form.component.css'],\n  styles: [`input {\n    width: ${CHARACTER_SPACING * 6}px;\n    padding: 0;\n  }\n  `]\n})\nexport class CharacterFormComponent implements OnInit, OnDestroy {\n\n\n  data: CharacterRenderData = new CharacterRenderData()\n\n  render: String = \"\"\n  private interval:any;\n\n\n  constructor(public renderService: CharacterRenderService,\n              public dataStorage: DataStorageService,\n              public ngZone: NgZone) {\n\n  }\n\n  update() {\n    this.dataStorage.saveCharacter(this.data)\n  }\n\n\n  ngOnInit(): void {\n    this.update();\n    this.initCharacterRotation();\n  }\n\n  private initCharacterRotation() {\n\n    let time: number = 0;\n    this.ngZone.runOutsideAngular(() => {\n      this.interval = setInterval(this.rotate(time), 1000)\n    });\n  }\n\n  public rotate(time: number) {\n    return () => {\n      time = (time + 1) % 4;\n      let direction: string\n      switch (time) {\n        case 0:\n          direction = 'LEFT';\n          break;\n        case 1:\n          direction = 'BOTTOM';\n          break;\n        case 2:\n          direction = 'RIGHT';\n          break;\n        case 3:\n          direction = 'TOP';\n          break;\n        default:\n          direction = 'LEFT'\n      }\n      this.render = this.renderService.render(this.data, direction);\n    };\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n}\n","<h1 ascii-render class=\"text  ihm-ui\" >aspect of your character</h1>\n<div class=\"layout\">\n  <div *ngFor=\"let bodyPart of renderService.bodyPartsKey\">\n    <h2 ascii-render class=\"text\">{{bodyPart}}</h2>\n\n    <div class=\"input--border\" ascii-render>\n      <input class=\"interact-ui\"\n             [(ngModel)]=\"data[bodyPart]\"\n             (change)=\"update()\"\n             [maxLength]=\"bodyPart==='hat'?6:1\">\n    </div>\n  </div>\n  <div>  <h2 ascii-render class=\"text\">You</h2>\n    <div ascii-render [xRepeat]=\"6\" [yRepeat]=\"4\" class=\"character-render asciiArt\"\n         borderTemplateName=\"double\">\n     <span class=\"important-ui\">{{render}}</span>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport * as tone from \"tone\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToneService {\n\n  constructor() {\n  }\n\n  public Synth() {\n    return new tone.Synth()\n  };\n\n  start() {\n    tone.start();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {bagGridTemplate} from \"../../service/render/resources/border\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING} from \"../../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'inventory-view',\n  templateUrl: './inventory-view.component.html',\n  styles:[`:host {\n    background: white;\n    display: inline-block;\n  }\n\n  .title {\n    width: ${CHARACTER_SPACING}px;\n    margin-left: -${CHARACTER_SPACING*2}px;\n    margin-right: ${CHARACTER_SPACING}px;\n    display: inline-block;\n  }\n\n  .content {\n    display: inline-block;\n    width: ${CHARACTER_SPACING*(6*2+1)}px;\n  }\n  `]\n})\nexport class InventoryViewComponent implements OnInit {\n  @Input()\n  player: any;\n  borderDatas: any = bagGridTemplate;\n\n  constructor(private _renderService:FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  render(obj) {\n    return this._renderService.renderObj(obj);\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n}\n","<div class=\"inventory container decor-ui\"\n     ascii-border\n     borderTemplateName=\"inventoryBoxGridTemplate\"\n     [xRepeat]=\"15\">\n  <div class=\"title\">I N V E N T O R Y</div>\n\n  <div class=\"content\"\n       app-ascii-on-grid-div\n  >\n    <ng-container *ngIf=\"!!this.player && !!this.player.inventoryArray && this.player.inventoryArray.length==0\"> .\n    </ng-container>\n    <ng-container *ngFor=\"let item of this.player.inventoryArray\">\n      <div app-ascii class=\"important-ui\"\n           [tooltip]=\"computeTooltip(item)\"\n           [content]=\"render(item)\"></div>\n    </ng-container>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-ascii-modal',\n  templateUrl: './ascii-modal.component.html',\n  styleUrls: ['./ascii-modal.component.css']\n})\nexport class AsciiModalComponent implements OnInit {\n\n  @Input()\n  _show = false\n\n  @Input()\n  closable = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  show() {\n    this._show = true\n  }\n\n  hide() {\n\n    this._show = false\n  }\n\n}\n","<div class=\"modalScreen\" *ngIf=\"_show===true\">\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"backgroundModal\">\n\n    <div ascii-border\n      *ngIf=\"closable\" (click)=\"hide()\"\n      class=\"cross asciiArt ihm-ui\"\n      [borderTemplateName]=\"'paperExitGridTemplate'\">X\n    </div>\n    <ng-content></ng-content>\n\n  </div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n</div>\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsciiGeneratorService {\n\n  constructor() {\n    for (let key in {...this.reverseChar}) {\n      this.reverseChar[this.reverseChar[key]] = key;\n    }\n  }\n\n  reverseChar: Object = {\n    'd': 'b',\n    '/': '\\\\',\n    'q': 'p',\n    '(': ')'\n\n  }\n\n  private reverseString(str) {\n\n    return this.reverseChar[str] ? this.reverseChar[str] : str;\n  }\n\n  reverseTemplate(template, partsKey) {\n    return template.split(\"\\n\")\n      .map(row => {\n        let reversedRow = row.split(/\\$\\{(\\w+)\\}/g)\n          .filter(s => s != \"\")\n          .map((word) => {\n\n\n            if (!partsKey.includes(word) && !partsKey.includes(word.replace(\"Reversed\", \"\"))) {\n              return word.split(\"\").map(e => {\n                return this.reverseChar[e] ? this.reverseChar[e] : e\n              })\n                .reverse().join(\"\");\n            } else if (word.endsWith(\"Reversed\")) {\n              return `$\\{${word.replace(\"Reversed\", \"\")}}`;\n            } else {\n              return `$\\{${word}Reversed}`;\n            }\n          }).reverse().join(\"\");\n        return reversedRow\n      })\n      .join(\"\\n\")\n\n  }\n\n  reverseData(data: any) {\n    let ret = {}\n    for (let key in data) {\n      ret[key + \"Reversed\"] = this.reverseString(data[key])\n    }\n    return ret;\n  }\n\n  templateString(template: String, data: any) {\n    return template.replace(/\\$\\{(\\w+)\\}/g, (_, name) => {\n      return data[name] || \"?\"\n    });\n  }\n\n}\n","import {Component,Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: '[app-ascii]',\n  templateUrl: './ascii.component.html',\n  styleUrls: ['./ascii.component.css']\n})\nexport class AsciiComponent implements OnInit {\n  @Input()\n  public content: string\n  @Input()\n  public tooltip: string\n  @Input()\n  public asciiClass: string = ''\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pre [ngClass]=\"[asciiClass, 'asciiArt']\" class=\"withtooltip\">{{content}}<ng-content></ng-content><div class=\"tooltiptext text\" *ngIf=\"tooltip\">[{{tooltip}}]</div>\n</pre>\n","import {Injectable} from '@angular/core';\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapAsciiRenderService extends AsciiRenderService {\n\n  constructor(asciiGeneratorService: AsciiGeneratorService) {\n\n    let directions = [\"top\", \"bottom\", \"left\", \"right\"]\n    super(asciiGeneratorService);\n    directions.forEach((dir) => {\n\n      this[dir + \"DoorTemplate\"] = \"${name}\";\n      this[dir + \"WallTemplate\"] = \" \";\n\n    })\n    this.leftBottomCornerTemplate = \" \";\n    this.rightBottomCornerTemplate = \" \";\n    this.leftTopCornerTemplate = \" \";\n    this.rightTopCornerTemplate = \" \";\n  }\n\n  renderPlayer(characterData: any) {\n    return \"@\"\n  }\n\n  renderCenter(zone, party): String {\n    let content = zone.content.toArray().filter(it => !it.destination)\n    if (party.player.location.x === zone.x && party.player.location.y === zone.y)\n      return \"@\";\n    else if (zone.x===party.level.exit.x &&zone.y===party.level.exit.y ) {\n      return \"€\"\n    }\n    else if (content.length > 0) {\n      if (content.toArray().filter(it => it.name === \"start\").length > 0)\n        return \"$\"\n\n      else\n        return content.toArray()[0].name\n    } else return \"+\"\n  }\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let doorName;\n    if (!door)\n      doorName = \" \"\n    else if (door.name != \"door\") {\n      doorName = door.name;\n    } else {\n      if (direction == 'TOP' || direction == \"BOTTOM\")\n        doorName = \"|\"\n      else\n        doorName = \"-\"\n    }\n\n    let data: any = {...this.defaultData, name: doorName};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderObj(obj: any, characterRenderData: any) {\n\n    if (obj.classname === \"KeyObjectZone\") {\n      return obj.name;\n    } else if (obj.name === \"player\") {\n      return \"¤\"\n    } else if (obj.name === \"exit\") {\n      return \"€\"\n    } else if (obj.name === \"start\") {\n      return \"$\"\n    }else if (obj.name === \"compass\") {\n      return \"%\"\n    }else if (obj.name === \"boussole\") {\n      return \"@\"\n    }\n    else if (obj.name === \"radar\") {\n      return \"®\"\n    }\n    else if (obj.name === \"map\") {\n      return \"#\"\n    } else {\n      return obj.name;\n    }\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiCharacterComponent} from \"./ascii-character/ascii-character.component\";\nimport {AsciiComponent} from \"./component/ascii.component\";\nimport {AsciiLineComponent} from \"./ascii-line/ascii-line.component\";\nimport {AsciiModalComponent} from \"./ascii-modal/ascii-modal.component\";\nimport {AsciiBorderComponent} from \"./ascii-border/ascii-border.component\";\nimport { AsciiButtonComponent } from './ascii-button/ascii-button.component';\nimport { BrowserModule} from '@angular/platform-browser';\nimport {AsciiGridModule} from \"./ascii-on-grid-div/ascii-grid.module\";\n\n@NgModule({\n  declarations: [\n    AsciiComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent,\n    AsciiCharacterComponent,\n  ],\n  exports: [\n    AsciiComponent,\n    AsciiCharacterComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiGridModule\n  ]\n})\nexport class AsciiModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, ReplaySubject, Subject} from \"rxjs\";\nimport {CharacterRenderData} from \"./render/character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  currentParty$: Subject<any> = new ReplaySubject<any>(1);\n  lastMessage$: Subject<any> = new ReplaySubject<any>(1);\n  characterDirection$: Subject<any> = new ReplaySubject<any>(1);\n  currentCharaRenderData$: Subject<CharacterRenderData> = new ReplaySubject<CharacterRenderData>(1);\n\n  constructor() {\n    this.characterDirection$.next('LEFT')\n    this.currentCharaRenderData$.next(new CharacterRenderData())\n  }\n\n  saveParty(party: { level: any }) {\n\n    this.currentParty$.next(party)\n  }\n\n  saveLastMessages(...messages: string[]) {\n\n    this.lastMessage$.next(messages[messages.length - 1])\n  }\n\n  getCurrentParty(): Observable<any> {\n    return this.currentParty$\n  }\n\n\n  saveCharacter(chardata: CharacterRenderData) {\n    this.currentCharaRenderData$.next(chardata)\n  }\n\n  saveCharacterDirection(direction) {\n    this.characterDirection$.next(direction)\n  }\n\n  getCurrentCharaRenderData() {\n    return this.currentCharaRenderData$\n  }\n\n  getPlayerDirection() {\n    return this.characterDirection$\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {take} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighscoresService  {\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public saveScore(player, score) {\n    let objectObservable = this.http.post(\"http://sarahbuisson-server-sample.herokuapp.com/score\", {\n      player: player,\n      score\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).pipe(take(1))\n      .subscribe(\n        data => console.log('success', data),\n        error => console.log('oops', error)\n      );\n    return objectObservable\n  }\n\n  public getScores() {\n    return this.http.get(\"http://sarahbuisson-server-sample.herokuapp.com/scores\");\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-labyrinth-form',\n  templateUrl: './new-labyrinth-form.component.html',\n  styles:[`\n    input {\n      width: ${CHARACTER_SPACING * 8}px\n    }\n\n\n    .grid {\n      max-width: ${CHARACTER_SPACING * 30}px;\n      display: grid;\n      grid-template-columns: 2fr ${CHARACTER_SPACING*9}px;\n      align-items: center;\n      text-align: center;\n    }\n  `]\n})\nexport class NewLabyrinthFormComponent implements OnInit {\n\n  size: Number = 5\n  playerName: string\n\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n\n  constructor(private labService: GenerateLabService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.size = params['size']?params['size']:5;\n    });\n  }\n\n  play(): void {\n    this.loadingModal.show()\n\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      setTimeout(() => resolve('done'), 5000);\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      this.labService.generate(this.size, this.playerName);\n      resolve({}); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n  emptyBoard(): void {\n    this.labService.generateEmpty(this.size);\n  }\n}\n","<div ascii-render class=\"container text background-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n\n  <h1 ascii-render class=\"text ihm-ui\">Level creation</h1>\n  <div class=\"grid\">\n    <span>\n    Labyrinth Size:\n    </span>\n    <div class=\"input--border\" ascii-render><input class=\"text\" [(ngModel)]=\"size\"></div>\n    <div></div>\n    <button ascii-render class=\"text important-ui\"\n            (click)=\"play()\">play\n    </button>\n  </div>\n\n\n</div>\n<app-ascii-modal #loadingModal>\n  <app-loading></app-loading>\n</app-ascii-modal>\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website-angular';\n}\n","<router-outlet></router-outlet>\n<ui-sound></ui-sound>\n<a href=\"https://github.com/sarahBuisson/labyrinth-game/actions\" class=\"text repository\">repository github</a>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {paperGridTemplate, mapGridTemplate} from \"../../service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinPathToJsView, parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n\nlet mapBorderData = paperGridTemplate;\n\n@Component({\n  selector: 'map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css'],\n  styles: [`\n    .title {\n      display: inline-flex;\n      flex-direction: column;\n      width: ${CHARACTER_SPACING * 3}px;\n      padding:${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n    .legend {\n        min-width: ${CHARACTER_SPACING * 10}px;\n    }`]\n})\nexport class MapViewComponent implements OnInit {\n\n\n  @Input()\n  currentParty: any\n  currentPartyProxy: any\n\n  @Input()\n  renderService: any\n\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n\n  borderData = mapBorderData\n  showMap: any;\n\n  constructor(public gameplayLabService: GameplayLabService) {\n  }\n\n  ngOnInit(): void {\n    this.currentPartyProxy = parseKotlinPathToJsView(this.currentParty, 7);\n  }\n\n  isStart(levelCase) {\n    let start = this.currentParty.level.start;\n    return start.x === levelCase.x && start.y === levelCase.y\n  }\n\n  isExit(levelCase) {\n    let exit = this.currentParty.level.exit;\n    return exit.x === levelCase.x && exit.y === levelCase.y\n  }\n\n  hasPlayer(levelCase) {\n    let location = this.currentParty.player.location;\n    return location.x === levelCase.x && location.y === levelCase.y\n  }\n\n  isCaseShowable(levelCase) {\n    if (this.rangeArroundPlayer < 0)\n      return true\n    let location = this.currentParty.player.location;\n    return (Math.abs(location.x - levelCase.x) <= this.rangeArroundPlayer\n      && Math.abs(location.y - levelCase.y) <= this.rangeArroundPlayer);\n  }\n\n  borderRendered(levelCase) {\n    let borderRendered = {...mapGridTemplate}\n    let directions: Array<String> = ['LEFT', 'RIGHT', 'TOP', 'BOTTOM'];\n\n    directions.forEach((direction: string) => {\n\n      let door = this.gameplayLabService.doorAt(levelCase, direction)\n      borderRendered[direction + \"Class\"] = \"decor-ui\"\n      if (door) {\n        if (door.key) {\n          borderRendered[direction + \"Template\"] = door.name\n          borderRendered[direction + \"Class\"] = \"interact-ui\"\n        } else {\n\n        }\n\n      } else {\n        borderRendered[direction + \"Template\"] = ' '\n      }\n    })\n    return borderRendered;\n  }\n\n\n  contentRendered(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(parseKotlinToJsView(levelCaseInput,3));\n    if (content[0]) {\n\n      return this.renderService.renderObj(content[0])\n    } else {\n      let nbrOfConnections = levelCaseInput.connected.toArray().length;\n      if (nbrOfConnections == 1) {\n        return \" \";\n      }\n      if (nbrOfConnections == 2) {\n        return \".\"\n      } else {\n        return \"+\"\n      }\n    }\n  }\n\n  computeClass(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(parseKotlinToJsView(levelCaseInput, 3))\n    if (content[0]) {\n      if (content[0].name === \"player\" || content[0].name === \"exit\") {\n        return \"important-ui\"\n      }\n    }\n    return \"ihm-ui\"\n  }\n}\n","<div ascii-render class=\"container decor-ui\"\n     [borderTemplate]=\"borderData\"\n>\n  <div class=\"row1\" *ngIf=\"currentPartyProxy\">\n    <div class=\"title text decor-ui\">\n      <div>M</div>\n      <div>A</div>\n      <div>P</div>\n    </div>\n    <div class=\"main asciiArt ihm-ui\"\n         [ngStyle]=\"{'grid-template-columns': 'repeat(auto-fill, '+ currentPartyProxy.level.contentArray[0].length + ')'}\">\n      <div class=\"row\" *ngFor=\"let row of currentPartyProxy.level.contentArray; let x = index \">\n        <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n          <ng-container *ngIf=\"isCaseShowable(levelCaseInput)\">\n            <div class=\"mapzone\"\n                 ascii-border\n                 xRepeat=\"1\"\n                 yRepeat=\"1\"\n                 [borderTemplate]=\"borderRendered(levelCaseInput)\"\n            ><span [ngClass]=\"computeClass(levelCaseInput)\">{{contentRendered(levelCaseInput)}}</span>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"legend text decor-ui\" ascii-border>\n    <span class=\"important-ui\">legend:</span>\n    <br/>\n    <div class=\"important-ui\"> ¤ = You are here</div>\n    <div class=\"important-ui\"> € = Exit</div>\n    <br/>\n    <div> A-Z = Locked door</div>\n    <div> a-z = keys</div>\n    <br/>\n    <div> | <br/>.+- = open path</div>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AsciiOnGridDivComponent} from \"./ascii-on-grid-div.component\";\nimport {AsciiInsideGridDivComponent} from \"./ascii-inside-grid.component\";\n\n\n\n@NgModule({\n  declarations: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],exports: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AsciiGridModule { }\n","import {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ElementRef, HostBinding,\n  Input, NgZone, OnDestroy,\n  OnInit, Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport * as borderTemplates from \"../../../labyrinth/service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\nimport {timer} from \"rxjs\";\nimport {delay} from \"rxjs/operators\";\nimport {Style} from \"@angular/cli/lib/config/schema\";\nimport {BorderTemplate} from \"../../../labyrinth/service/render/resources/border-compute\";\n\n@Component({\n  selector: 'ascii-border , [ascii-border] , div [ascii-render], span [ascii-render], button [ascii-render], p [ascii-render], h1 [ascii-render]',\n  templateUrl: './ascii-border.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./ascii-border.component.css']\n})\nexport class AsciiBorderComponent implements OnInit, AfterViewInit, AfterContentChecked, OnDestroy {\n\n  /**\n   * place the border on the outside of the div, making the div bigger\n   * put at false if you want the border on the inside, making the div the sameSize but compressing the content\n   */\n\n  @Input()\n  name?: string\n\n  @Input()\n  computeRenderEachTime?: boolean = undefined\n  haveAlreadyBeComputed: boolean = false\n\n  @Input()\n  contentClass: string\n\n  @Input()\n  xRepeat: number | undefined\n  xComputedRepeat: number = 0\n  @Input()\n  yRepeat: number | undefined\n  yComputedRepeat: number = 0\n\n  renders: {\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string\n  } = {}\n  borderClasses: {\n    default?: string,\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string,\n    topLeft?: string\n    topRight?: string\n    bottomLeft?: string\n    bottomRight?: string\n  } = {}\n\n  @Input()\n  borderTemplateName: string;\n\n  @Input()\n  borderTemplate: BorderTemplate;\n\n\n  computedData: {\n    computed?: string;\n\n    widthPx?: number;\n    heightPx?: number;\n\n    borderSizePx: {\n      top?: number,\n      bottom?: number,\n      left?: number,\n      right?: number\n    }\n  } = {borderSizePx: {}, computed: 'none'}\n\n  toClear: any[] = [];\n  @Input()\n  borderClick: any = () => {\n  }\n\n  @HostBinding(\"style\")\n get hostStyle(): CSSStyleDeclaration {\n    let hostStyle = {\n      border: 'solid transparent',\n      borderTopWidth: this.computedData.borderSizePx.top + 'px',\n      borderBottomWidth: this.computedData.borderSizePx.bottom + 'px',\n      borderRightWidth: this.computedData.borderSizePx.right + 'px',\n      borderLeftWidth: this.computedData.borderSizePx.left + 'px',\n      height: this.yRepeat ? (this.yRepeat * this.borderTemplate.leftSideHeight * LINE_HEIGHT) + 'px' : undefined,\n      width: this.xRepeat ? (this.xRepeat * this.borderTemplate.topSideWidth * CHARACTER_SPACING)+'px':undefined\n    } as CSSStyleDeclaration\n\n\n    return hostStyle;\n\n  }\n  @Input()\n  debug = false;\n\n  constructor(private readonly _changeDetectorRef: ChangeDetectorRef,\n              private hostRef: ElementRef,\n              private renderer: Renderer2,\n              private ngZone: NgZone) {\n\n  }\n\n  ngOnInit() {\n    try {\n      this.borderTemplateName = this.borderTemplateName || this.hostRef.nativeElement.nodeName\n      this.borderTemplate = this.borderTemplate || this.getAsciiBorderForName(this.borderTemplateName)\n\n      this.computeData();\n\n\n      if (this.computeRenderEachTime == undefined) {\n        this.computeRenderEachTime = true// this.hostRef.nativeElement.clientWidth ? false : true\n      }\n\n      if (this.xRepeat && this.yRepeat) {\n        this.computeBorderDimension()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  computeData() {\n    if (this.borderTemplate) {\n      this.computedData = {\n        ...this.computedData,\n        borderSizePx:\n          {\n            top: this.borderTemplate.topPartHeight * LINE_HEIGHT,\n            bottom: this.borderTemplate.bottomPartHeight * LINE_HEIGHT,\n            right: this.borderTemplate.rightPartWidth * CHARACTER_SPACING,\n            left: this.borderTemplate.leftPartWidth * CHARACTER_SPACING\n          }\n      }\n    }\n  }\n\n  @HostBinding('attr.dataComputed')\n  get compJson() {\n    return JSON.stringify(this.computedData)\n  }\n\n\n  /**\n   * return an array of counter\n   * @param size\n   */\n  counter(size): number[] {\n    let array = new Array<number>();\n    for (let i = 0; i < size; i++) {\n      array.push(i)\n    }\n    return array;//TODO check why dont work for modal: [...Array(size).keys()]\n  }\n\n  ngAfterViewInit() {\n    this.computeAndUpdateDimension();\n  }\n\n  private computeAndUpdateDimension() {\n    try {\n      if (this.computeBorderDimension()) {\n        this.ngZone.runOutsideAngular(() => {\n          let timeout = setTimeout(() => {\n            this._changeDetectorRef.detectChanges();\n\n            clearTimeout(timeout);\n          }, 100);\n          this.toClear.push(timeout);\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private computeBorderDimension(): boolean {\n    if (!this.computedData.borderSizePx.top)\n      this.computeData()\n\n\n    let mainElement = <HTMLElement>this.hostRef.nativeElement;\n\n    let height: number, width: number;\n    if (mainElement.clientWidth) {\n      height = mainElement.clientHeight// - this.computedData.borderTopSizePx - this.computedData.borderBottomSizePx\n      width = mainElement.clientWidth\n      this.computedData.computed = 'client'\n    } else if(mainElement.offsetWidth){\n      this.computedData.computed = 'offset' + mainElement.offsetWidth\n      height = mainElement.offsetHeight - this.computedData.borderSizePx.top - this.computedData.borderSizePx.bottom\n      width = mainElement.offsetWidth - this.computedData.borderSizePx.left - this.computedData.borderSizePx.right\n    }else{\n      this.computedData.computed = 'none'\n      return false;\n    }\n    if (isNaN(height) || isNaN(width)) {\n      console.warn(\"no dimension \" + height + \" \" + width)\n      return false;\n    }\n\n    const hostHaveChanged = this.computedData.widthPx != width || this.computedData.heightPx != height;\n\n    let shouldCompute = (width || this.xRepeat) && (height || this.yRepeat) && hostHaveChanged && (this.computeRenderEachTime || !this.haveAlreadyBeComputed);\n\n    if (shouldCompute) {\n      this.computedData.widthPx = width;\n      this.computedData.heightPx = height;\n      let oldX = this.xComputedRepeat;\n      let oldY = this.yComputedRepeat\n      if (this.yRepeat != undefined) {\n        this.yComputedRepeat = this.yRepeat;\n      } else {\n        this.yComputedRepeat = Math.floor(height / (LINE_HEIGHT * this.borderTemplate.leftSideHeight));\n      }\n      if (this.xRepeat != undefined) {\n        this.xComputedRepeat = this.xRepeat;\n      } else {\n        this.xComputedRepeat = Math.floor(width / (CHARACTER_SPACING * this.borderTemplate.topSideWidth));\n      }\n\n      let allDataPresent = this.xComputedRepeat && this.yComputedRepeat;\n      let computedDataHaveChange = oldX != this.xComputedRepeat || oldY != this.yComputedRepeat;\n      if (allDataPresent && computedDataHaveChange) {\n        try {\n\n          let splitTop = this.borderTemplate.topTemplate.split(\"\\n\")\n          let splitBottom = this.borderTemplate.bottomTemplate.split(\"\\n\")\n\n          let counterX = this.counter(this.xComputedRepeat);\n          let counterY = this.counter(this.yComputedRepeat);\n\n\n          this.renders = {\n            top: splitTop.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n            bottom: splitBottom.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n            left: counterY.map((i) => this.borderTemplate.leftTemplate).join('\\n'),\n            right: counterY.map((i) => this.borderTemplate.rightTemplate).join('\\n')\n          }\n          this.haveAlreadyBeComputed = true;\n          return true;\n        } catch (e) {\n          console.error(e);\n          return true;\n        }\n      }\n    }\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.computeRenderEachTime || this.haveAlreadyBeComputed)\n      this.ngZone.runOutsideAngular(() => {\n        let timeout=setTimeout(() => {\n          try {\n            this.computeAndUpdateDimension()\n            clearTimeout(timeout);\n          } catch (e) {\n            console.error(e);\n          }\n        }, 100);\n        this.toClear.push(timeout)\n      });\n  }\n\n\n  getAsciiBorderForName(name: string): BorderTemplate {\n\n    if (Object.keys(borderTemplates).includes(name + 'GridTemplate'))\n      return borderTemplates[name + 'GridTemplate']//TODO : we need to test the include otherwise it bug\n\n    if (Object.keys(borderTemplates).includes(name))\n      return borderTemplates[name]//TODO : we need to test the include otherwise it bug\n\n    if (name === 'BUTTON') {\n      return borderTemplates.defaultButtonBorderTemplate;\n    }\n    if (name === 'DIV') {\n      return borderTemplates.defaultGridTemplate;\n    }\n    if (name === 'H1') {\n      return borderTemplates.defaultTitleBorderTemplate;\n    }\n    return borderTemplates.defaultGridTemplate;\n  }\n\n  styleOfPart(directions: string[]) {\n    let style: any = {position: 'absolute', top: 0, left: 0}\n    directions.forEach(dir => {\n      if (dir === 'left') {\n        style.left = -this.computedData.borderSizePx.left + 'px';\n        style.width = this.computedData.borderSizePx.left + 'px';\n      }\n      if (dir === 'right') {\n        style.width = this.computedData.borderSizePx.right + 'px';\n        style.right = -this.computedData.borderSizePx.right + 'px';\n        style.left = undefined;\n        //style.marginRight = -this.computedData.borderSizePx.right + 'px';\n        //style.top = '0px';\n        /* if (directions.length === 1) {\n           style.top = this.computedData.borderSizePx.top + 'px';\n         }*/\n      }\n      if (dir === 'top') {\n        style.top = -this.computedData.borderSizePx.top + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n      }\n      if (dir === 'bottom') {\n        style.bottom = -this.computedData.borderSizePx.bottom + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n        style.top = undefined;\n      }\n    })\n    return style;\n  }\n\n  ngOnDestroy(): void {\n\n    this.toClear.forEach((timeout)=>{\n\n      clearTimeout(timeout)\n    })\n  }\n}\n\n","<ng-content></ng-content>\n\n\n<ng-container *ngIf=\"debug\">\n  <span>\n  <div class=\"debug top left\"></div>\n  <div class=\"debug top right\"></div>\n  <div class=\"debug bottom left\"></div>\n  <div class=\"debug bottom right\"></div>\n    </span>\n</ng-container>\n\n<div class=\"asciiArt border-part top left\"\n      style=\"display: inline-block;position: absolute;\"\n      [ngStyle]=\"styleOfPart(['top','left'])\"\n      [ngClass]=\"borderClasses.topLeft||borderClasses.default\">{{borderTemplate.topLeftTemplate}}</div>\n\n  <div\n    class=\"asciiArt border-part top\"\n    [ngClass]=\"borderClasses.top||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top'])\"\n    (click)=\"this.borderClick('TOP',$event)\"\n  >{{renders.top}}</div>\n\n  <div\n    class=\"asciiArt border-part top right\"\n    [ngClass]=\"borderClasses.topRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top','right'])\"\n  >{{borderTemplate.topRightTemplate}}</div>\n\n\n  <div class=\"asciiArt rightSide\"\n        [ngClass]=\"borderClasses.right||borderClasses.default\"\n        [ngStyle]=\"styleOfPart(['right'])\"\n        (click)=\"this.borderClick('RIGHT',$event)\">{{renders.right}}</div>\n\n\n\n\n<div class=\"asciiArt border-part leftSide\" [ngClass]=\"borderClasses.left||borderClasses.default\"\n     *ngIf=\"yComputedRepeat>0\"\n     style=\"position: absolute;\"\n     [ngStyle]=\"styleOfPart(['left'])\"\n     (click)=\"this.borderClick('LEFT',$event)\"\n>{{renders.left}}</div>\n\n\n<div class=\"borderBottom\"\n\n></div>\n    <div\n      class=\"asciiArt border-part bottom left\"\n      [ngStyle]=\"styleOfPart(['bottom','left'])\"\n      [ngClass]=\"borderClasses.bottomLeft||borderClasses.default\"\n    >{{borderTemplate.bottomLeftTemplate}}</div>\n  <div\n    (click)=\"this.borderClick('BOTTOM',$event)\"\n    *ngIf=\"xComputedRepeat>0\"\n    class=\"asciiArt border-part bottom\"\n    [ngClass]=\"borderClasses.bottom||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom'])\"\n  >{{renders.bottom}}</div>\n  <div\n    class=\"asciiArt border-part bottom right\"\n    [ngClass]=\"borderClasses.bottomRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom','right'])\"\n  >{{borderTemplate.bottomRightTemplate}}</div>\n\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CharacterFormComponent} from './characterEditor/character-form/character-form.component';\nimport {NewLabyrinthFormComponent} from './labyrinth/new-form/new-labyrinth-form.component';\nimport {MenuComponent} from './labyrinth/menu/menu.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AsciiModule} from \"./utils/ascii/ascii.module\";\nimport {LabyrinthGameModule} from \"./labyrinth/game-view/labyrinth-game.module\";\nimport { SoundComponent } from './utils/ui/atom/sound/sound.component';\nimport { MusicViewComponent } from './music-view/music-view.component';\nimport {MusicModule} from \"./music-view/music.module\";\nimport { AsciiGalleryComponent } from './ascii-gallery/ascii-gallery.component';\nimport { LoadingComponent } from './labyrinth/loading/loading.component';\nimport {LoadingModule} from \"./labyrinth/loading/loading.module\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharacterFormComponent,\n    NewLabyrinthFormComponent,\n    MenuComponent,\n    SoundComponent,\n    AsciiGalleryComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AsciiModule,\n    LabyrinthGameModule,\n    MusicModule, LoadingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\n\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {CharacterRenderData} from \"./character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract  class AsciiRenderService {\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService) {\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate:string=\"TODO\"\n\n  bottomDoorTemplate:string=\"TODO\"\n  leftDoorTemplate:string=\"TODO\";\n  rightDoorTemplate:string=\"TODO\";\n  leftWallTemplate:string=\"TODO\"\n  rightWallTemplate:string=\"TODO\";\n\n  topWallTemplate:string=\"TODO\";\n\n  bottomWallTemplate:string=\"TODO\";\n\n  leftBottomCornerTemplate :string=\"TODO\";\n  rightBottomCornerTemplate:string=\"TODO\";\n\n  leftTopCornerTemplate:string=\"TODO\";\n  rightTopCornerTemplate:string=\"TODO\";\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let data: any = {...this.defaultData, name: door && door.name != \"door\" ? door.name : \" \"};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderCorner(dir1: string, dir2: string) {\n    let templateName = dir2.toLowerCase() + this.capitalize(dir1.toLowerCase()) + \"CornerTemplate\";\n    let data = this.defaultData\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n\n  }\n\n  capitalize(s) {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n  abstract renderPlayer(characterData: CharacterRenderData)\n\n  abstract renderCenter(zone, party): String\n\n  abstract renderObj(obj: any, characterRenderData: CharacterRenderData)\n}\n","export class BorderTemplate {\n  topTemplate = \"\";\n  bottomTemplate = \"\";\n  leftTemplate = \"\";\n  rightTemplate = \"\";\n  topLeftTemplate = \"\";\n  topRightTemplate = \"\";\n  bottomLeftTemplate = \"\";\n  bottomRightTemplate = \"\";\n  leftPartWidth = 1;\n  topSideWidth = 1;\n  topPartHeight = 1;\n  leftSideHeight = 1;\n  rightPartWidth = 1;\n  bottomPartHeight = 1;\n}\n\n\nexport function asciiStringToGridObject(str, leftCornerWidth, topSideWidth,\n                                        leftCornerHeight, leftSideHeight): BorderTemplate {\n  try {\n    let templates = new BorderTemplate();\n\n    let strR = str.split(\"\\n\")\n\n    for (let y = 0; y < leftCornerHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.topLeftTemplate += strR[y][x]\n      }\n      templates.topLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.topTemplate += strR[y][x]\n      }\n      templates.topTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.topRightTemplate += strR[y][x]\n      }\n      templates.topRightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight; y < leftCornerHeight + leftSideHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.leftTemplate += strR[y][x]\n      }\n      templates.leftTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.rightTemplate += strR[y][x]\n      }\n      templates.rightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight + leftSideHeight; y < strR.length; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.bottomLeftTemplate += strR[y][x]\n      }\n      templates.bottomLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.bottomTemplate += strR[y][x]\n      }\n\n      templates.bottomTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.bottomRightTemplate += strR[y][x]\n      }\n      templates.bottomRightTemplate += \"\\n\"\n    }\n    Object.keys(templates).forEach((k) => {\n        if (templates[k].slice) {\n          if(templates[k].endsWith(\"\\n\"))\n            templates[k] = templates[k].slice(0, -1);\n          //add a space at the end so the template with \\n have the same length than the other\n          if ((k != 'bottomTemplate' && k != 'topTemplate')) {\n            templates[k] += \" \"\n          }\n        }\n      }\n    )\n    let topRightFirstLine = templates.topRightTemplate.split(\"\\n\")[0];\n    let borderTemplate = {\n      ...templates,\n      leftPartWidth: leftCornerWidth,\n      topSideWidth,\n      leftSideHeight,\n      rightPartWidth: topRightFirstLine.length + ( templates.topRightTemplate.includes('\\n') ? 1 : 0),\n      topPartHeight: leftCornerHeight,\n      bottomPartHeight: templates.bottomLeftTemplate.split(\"\\n\").length,\n    } as BorderTemplate;\n\n\n\n    return borderTemplate;\n  } catch (e) {\n    console.error(e)\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {SoundService} from \"../../../../labyrinth/service/sound/sound.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'ui-sound',\n  templateUrl: './sound.component.html',\n  styleUrls: ['./sound.component.css']\n})\nexport class SoundComponent implements OnInit, OnDestroy {\n  soundOn: boolean;\n  soundSubscription: Subscription;\n  on = '' +\n    '           __ \\n' +\n    ' ((\\'c\\') < d d \\n';\n  //≮\n  off = '' +\n    '            _ \\n' +\n    ' ((\\'x\\') ° (d) \\n';\n\n  constructor(private soundService: SoundService) {\n\n    this.soundService.subscribeSoundOn((data) => {\n\n      this.soundOn = data;\n    })\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.soundSubscription.unsubscribe();\n  }\n\n  toogle() {\n    this.soundService.toogleSound();\n  }\n}\n","<div ascii-border (click)=\"toogle()\" class=\"asciiArt\">\n  <div app-ascii *ngIf=\"soundOn\" tooltip=\"mute\" [content]=\"on\" ></div>\n  <div app-ascii *ngIf=\"!soundOn\" tooltip=\"music\" [content]=\"off\"></div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styles: [`\n    .container {\n        max-width: ${CHARACTER_SPACING * 16 * 4}px;\n        min-width: ${CHARACTER_SPACING * 10 * 4}px;\n        min-height: ${LINE_HEIGHT * 6 * 4}px;\n        text-align: center;\n        padding: ${LINE_HEIGHT}px ${CHARACTER_SPACING}px;\n    }\n\n    .content {\n\n    }\n    ul {\n        text-align: left;\n    }\n\n  `]\n})\nexport class LoadingComponent implements OnInit {\n\n  currentLoadingMessage: number = 0;\n  maxNumberOfMessage: number = 6;\n\n  constructor(public fullViewRenderService: FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  clickDuringLoading() {\n    this.currentLoadingMessage = Math.floor( this.maxNumberOfMessage*Math.random())\n    console.log( this.currentLoadingMessage )\n  }\n\n}\n","<div ascii-render\n     class=\"container text background-ui\"\n     borderTemplateName=\"loadingBorderGridTemplate\">\n  <h1 ascii-render class=\"ihm-ui\"> Labyrinth generating ...</h1>\n  <br/>\n\n\n  <div class=\"content ihm-ui\" ascii-border>\n    <div>Do you know it ? ({{currentLoadingMessage}}/{{maxNumberOfMessage}})</div>\n<br/>\n    <ng-container  *ngIf=\"currentLoadingMessage===0\">\n      Find the ladder to the exit to win.\n      <div app-render class=\"asciiArt\">{{fullViewRenderService.renderObj({name: 'exit'})}}</div>\n    </ng-container >\n\n    <ng-container *ngIf=\"currentLoadingMessage===1\">\n      You can move by :\n      <ul>\n        <li>clicking on the room you want to go</li>\n        <li>clicking on the door you want to use</li>\n        <li>using directional key</li>\n        <li>using the pad at the bottom of the screen</li>\n      </ul>\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===2\">\n      some door are closed and need a key to be open\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===3\">\n      You have a map\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===4\">\n      <div>The lab didn't really take that much time to generate.</div>\n      <div>The dev just wanted a way to give tips to player.</div>\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===5\">All labyrinths always have a solution\n    </ng-container>\n    <br/>\n    <div>\n      <button ascii-render (click)=\"clickDuringLoading()\">next advice</button>\n    </div>\n  </div>\n\n\n</div>\n","export const CHARACTER_FONT_SIZE = 12;\nexport const LINE_HEIGHT = 14;\nexport const CHARACTER_HEIGHT = 8;\nexport const CHARACTER_SPACING = 9;\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {\n  viewEmptyZones\n} from \"../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n@Component({\n  selector: 'level-view',\n  templateUrl: './level-view.component.html',\n  styles: [`\n    .levelRowRender {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, ${CHARACTER_SPACING * 30}px);\n    grid-template-rows: repeat(auto-fit, ${LINE_HEIGHT * 15}px);\n  }\n  `]\n})\nexport class LevelViewComponent implements OnInit, OnChanges {\n\n  @Input()\n  currentParty: any\n\n  constructor(public gameplayLabService: GameplayLabService, public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\n    this.updateFieldOfView();\n  }\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n  fieldOfView: Array<Array<any>>;\n\n  ngOnInit(): void {\n    this.updateFieldOfView();\n  }\n\n  public updateFieldOfView() {\n    if (this.rangeArroundPlayer === -1) {\n      this.fieldOfView = this.currentParty.level.content;\n    } else {\n      this.fieldOfView = new Array();\n      let location = this.currentParty.player.location;\n      for (let dy = -this.rangeArroundPlayer; dy <= this.rangeArroundPlayer; dy++) {\n        this.fieldOfView[this.rangeArroundPlayer + dy] = new Array();\n        for (let dx = -this.rangeArroundPlayer; dx <= this.rangeArroundPlayer; dx++) {\n\n          let x: number = 0 + location.x + dx;\n          let y: number = 0 + location.y + dy;\n          let ix = 0 + this.rangeArroundPlayer + dx;\n          let iy = 0 + this.rangeArroundPlayer + dy;\n\n          let zone = this.currentParty.level.getXY(x, y)\n          this.fieldOfView[iy][ix] = zone\n        }\n      }\n    }\n  }\n\n\n  emptyRendered(x, y) {\n\n    let dx = x + this.currentParty.player.location.x\n    let dy = y + this.currentParty.player.location.y\n\n    let index = (dx + dy) % viewEmptyZones.length;\n    let borderTemplate = viewEmptyZones[index];\n    return borderTemplate;\n  }\n}\n","<div class=\"levelRender\" >\n  <div class=\"levelRowRender\" *ngFor=\"let row of fieldOfView; let x = index \">\n    <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n      <ng-container *ngIf=\"!!levelCaseInput&& levelCaseInput.content.toArray().length>0; else backgroundZone\">\n        <app-zone-view [zone]=\"levelCaseInput\"> </app-zone-view>\n      </ng-container>\n      <ng-template #backgroundZone>\n        <div app-ascii class=\"zone outside background-ui\"\n        [content]=\"emptyRendered(x,y)\"\n        >\n        </div>\n      </ng-template>\n    </ng-container>\n  </div>\n</div>\n","import {Component, HostListener, OnDestroy, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {DataStorageService} from \"../../service/data-storage.service\";\n\n@Component({\n  selector: 'keypad-form',\n  templateUrl: './keypad-form.component.html',\n  styleUrls: ['./keypad-form.component.css']\n})\nexport class KeypadFormComponent implements OnInit, OnDestroy {\n  message: string = \"use keyword to move or click on destination, use enter or click to grab object\\n\";\n  subscription: any;\n\n  constructor(private gameplayLabService: GameplayLabService, private dataService: DataStorageService) {\n\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.dataService.lastMessage$.subscribe((m) => {\n      this.message = m\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.gameplayLabService.takeAll();\n    }\n    if (event.key === 'ArrowUp') {\n      this.gameplayLabService.move('TOP');\n    }\n    if (event.key === 'ArrowDown') {\n      this.gameplayLabService.move('BOTTOM');\n    }\n    if (event.key === 'ArrowLeft') {\n      this.gameplayLabService.move('LEFT');\n    }\n    if (event.key === 'ArrowRight') {\n      this.gameplayLabService.move('RIGHT');\n    }\n  }\n\n  take(): void {\n    this.gameplayLabService.takeAll();\n  }\n}\n","<div app-ascii>\n  <div>&nbsp;&nbsp;&nbsp;&nbsp;+---+   </div>\n  <div>\n    <span>&nbsp;&nbsp;&nbsp;&nbsp;|</span>\n    <span class=\"key\" (click)=\"move('TOP')\">/^\\</span>\n    <span>|  </span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('LEFT')\"><<-</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('BOTTOM')\" >\\V/</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('RIGHT')\">->></span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"take()\">Prendre</span>\n    <span>|</span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div> {{message}}</div>\n  </div>\n","import {\n  Component, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Component({\n  selector: '[app-ascii-on-grid-div]',\n  template: `\n    <div class=\"grid-content\"\n         [ngStyle]=\"{gridTemplateRows: gridRow, gridTemplateColumns: gridColumn}\">\n      <ng-content></ng-content>\n    </div>`,\n  styles: [\n    ` .grid-content {\n         display: inline-grid;\n         grid-auto-flow: row dense;\n         grid-template-rows: repeat(auto-fill, ${LINE_HEIGHT}px);\n         grid-template-columns: repeat(15, ${CHARACTER_SPACING}px);\n    }`\n  ]\n})\nexport class AsciiOnGridDivComponent implements OnInit {\n\n  public gridColumn: string;\n\n\n  public gridRow: string;\n  @Input()\n  public width: string = 'auto-fit';\n\n  @Input()\n  public height: string | undefined;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.gridColumn = 'repeat(' + this.width + ', ' + CHARACTER_SPACING + ')';\n    if (this.height)\n      this.gridRow = 'repeat(' + this.width + ', ' + CHARACTER_HEIGHT + ')';\n  }\n\n}\n","import {Component, OnInit, Input, OnChanges} from '@angular/core';\nimport {compositionUtils, harmoniqueUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-partition-view',\n  template: `<span *ngIf=\"!partitionForms\" class=\"text\">no partition</span>\n  <div class=\"vertical musicForm\" *ngFor=\"let form of partitionForms\" [style]=\"{borderColor:borderColor}\">\n    <ng-container *ngIf=\"isPattern(form) \">\n      <app-temp-view *ngFor=\"let note of form\" [temp]=\"note\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"isNote(form) \">\n      <app-temp-view [temp]=\"form\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"!isNote(form)&&!isPattern(form) \">\n      <app-partition-view [partitionForms]=\"form\" [initscale]=\"scale\"></app-partition-view>\n    </ng-container>\n  </div> `\n  ,\n  styleUrls: ['./partition-view.component.css']\n})\nexport class PartitionViewComponent implements OnInit, OnChanges {\n  @Input()\n  partitionForms: Array<any>;\n  @Input()\n  initscale: any\n  scale: any;\n  borderColor: string\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.borderColor = '#' + Math.round(Math.random() * 9) + Math.round(Math.random() * 9) + Math.round(Math.random() * 9)\n  }\n\n  ngOnChanges(): void {\n    if (this.initscale)\n      this.scale = this.initscale\n    else if (this.partitionForms) {\n      let tunes = compositionUtils.flatPartition(this.partitionForms).map((n) => n.tune)\n      this.scale = harmoniqueUtils.getSuroundingTunes(tunes).sort((a, b) => harmoniqueUtils.getLevel(b) - harmoniqueUtils.getLevel(a));\n    }\n  }\n\n\n  isPattern(form: any) {\n    return Array.isArray(form) && !Array.isArray(form[0])\n\n  }\n\n  isNote(form: any) {\n    return !Array.isArray(form)\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\n\n\nexport class CharacterRenderData {\n  eye: String = \"'\";\n  hair: String = \"(\";\n  torso: String = \"M\";\n  hat: String = \"_--_\";\n  leg: String = \"d\";\n}\n\nexport class TemplateAnimation {\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterRenderService {\n\n  constructor(private asciiGeneratorService: AsciiGeneratorService) {\n    this.bodyPartsKey = Object.keys(this.defaultData)\n    this.templateRight = this.asciiGeneratorService.reverseTemplate(this.templateLeft, this.bodyPartsKey)\n  }\n\n  public bodyPartsKey: Array<String>\n\n  templateLeft: String =\n    \"${hat}\\n\" +\n    \"${hair}${eye}${eye} ${hairReversed}${hairReversed}\\n\" +\n    \" /${torso} \\\\ \\n\" +\n    \"  ${leg}${leg}  \\n\";\n\n  templateFront: String =\n    \"${hat}\\n\" +\n    \"${hair} ${eye}${eye} ${hairReversed}\\n\" +\n    \" / ${torso}\\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n\n  templateBack: String =\n    \"${hat}\\n\" +\n    \"${hair}${hair}${hair}${hairReversed}${hairReversed}${hairReversed}\\n\" +\n    \" /  \\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n  templateRight: String\n  defaultData: CharacterRenderData = Object.assign(new CharacterRenderData(), {\n    eye: \"'\",\n    hair: \"(\",\n    torso: \"M\",\n    hat: \" _--_ \",\n    leg: \"d\"\n  })\n\n\n  render(data: CharacterRenderData, direction = 'LEFT') {\n\n    let template;\n    switch (direction) {\n      case 'LEFT':\n        template = this.templateLeft;\n        break;\n      case 'RIGHT':\n        template = this.templateRight;\n        break;\n      case 'TOP':\n        template = this.templateBack;\n        break;\n      case 'BOTTOM':\n        template = this.templateFront;\n        break;\n      default:\n        template = this.templateLeft;\n        break;\n    }\n    return this.asciiGeneratorService.templateString(template, {...data, ...this.asciiGeneratorService.reverseData(data)})\n\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {exitTemplate, startTemplate} from \"./resources/border\";\nimport {DataStorageService} from \"../data-storage.service\";\nimport {Subscription} from \"rxjs\";\nimport {CharacterRenderData, CharacterRenderService} from \"./character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullsizeAsciiRenderService extends AsciiRenderService implements OnDestroy {\n  private dirSub: Subscription;\n  private playerRenderDataSub: Subscription;\n  private playerDirection: String;\n  private playerRenderData: CharacterRenderData;\n\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService,\n              private dataStorageService: DataStorageService,\n              private characterRenderService: CharacterRenderService) {\n    super(asciiGeneratorService);\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n    this.dirSub = this.dataStorageService\n      .getPlayerDirection()\n      .subscribe((c) => this.playerDirection = c);\n    this.playerRenderDataSub = this.dataStorageService\n      .getCurrentCharaRenderData()\n      .subscribe((c) => this.playerRenderData = c)\n\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate = \"-------------------\\n\" +\n    \"\\n\" +\n    \"    \\\\¨¨¨¨¨¨¨¨¨/\\n\" +\n    \"     \\\\   ${name}   /\\n\" +\n    \"______\\\\${closedTop}/______\"\n\n  bottomDoorTemplate = \"¨¨¨¨¨¨/${closedBottom}\\\\¨¨¨¨¨¨\\n\" +\n    \"     /   ${name}   \\\\\\n\" +\n    \"    /_________\\\\\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n  leftDoorTemplate = \" |   |\\n\" +\n    \" ||\\\\ |\\n\" +\n    \" || \\\\|\\n\" +\n    \" ||  \\\\\\n\" +\n    \" || ${name}${closedLeft}\\n\" +\n    \" ||  ${closedLeft}\\n\" +\n    \" |'---\\n\" +\n    \" |   |\"\n  rightDoorTemplate;\n  leftWallTemplate = \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\";\n  rightWallTemplate;\n\n  topWallTemplate = \"-------------------\\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \"___________________\"\n\n  bottomWallTemplate = \"¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n\n  leftBottomCornerTemplate = \" |   /\\n\" +\n    \" |  / \\n\" +\n    \" | /  \\n\" +\n    \" |/   \\n\" +\n    \" '----\";\n  rightBottomCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftBottomCornerTemplate, this.partsKeys)\n\n\n  leftTopCornerTemplate = \" +----\\n\" +\n    \" |\\\\   \\n\" +\n    \" | \\\\  \\n\" +\n    \" |  \\\\ \\n\" +\n    \" |   \\\\\"\n  rightTopCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftTopCornerTemplate, this.partsKeys)\n\n\n  renderPlayer(characterData, direction = undefined) {\n    return this.characterRenderService.render(characterData, direction)\n  }\n\n  renderCenter(zone, party): String {\n    return \"\\n\\n\" + zone.content.toArray().filter(it => it.className !== \"DoorObjectZone\").map((it) => \"[\" + it.name + \"]\");\n  }\n\n\n  renderObj(obj: any) {\n\n    if (obj.name === 'exit')\n      return exitTemplate\n    if (obj.name === 'start')\n      return startTemplate\n    if (obj.name === 'player')\n      return this.renderPlayer(this.playerRenderData, this.playerDirection)\n    if (obj.type === \"key\")\n      return `(${obj.name})--±`\n    if (obj.name === \"boussole\")\n      return `(;)`\n    if (obj.name === \"radar\")\n      return `(®)`\n    if (obj.name === \"map\")\n      return `/#/`\n    if (obj.name === \"compas\")\n      return `%/`\n    return `[${obj.name}]`\n  }\n\n  ngOnDestroy(): void {\n\n    this.dirSub.unsubscribe();\n    this.playerRenderDataSub.unsubscribe();\n  }\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit, ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CHARACTER_SPACING} from \"../AsciiConst\";\n\n@Component({\n  selector: 'app-ascii-character',\n  templateUrl: './ascii-character.component.html',\n  styleUrls: ['./ascii-character.component.css'],\n\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AsciiCharacterComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  @Input()\n  content: any;\n\n  @Input()\n  tooltip: string;\n\n  xRepeat: number = 1\n\n  @ViewChild('contentDiv') contentDiv: ElementRef\n\n  constructor(  private readonly _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    if((<HTMLElement>this.contentDiv.nativeElement))\n    this.xRepeat =  Math.ceil((<HTMLElement>this.contentDiv.nativeElement).getBoundingClientRect().width / CHARACTER_SPACING)\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.ngAfterViewInit();\n  }\n\n}\n","<div [ngStyle]=\"{'column-span':this.xRepeat}\">\n  <span #contentDiv app-ascii class=\"content\"\n             [tooltip]=\"tooltip\"\n             [content]=\"content\"></span>\n</div>\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\n\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport {MapAsciiRenderService} from \"../service/render/map-ascii-render.service\";\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {DataStorageService} from \"../service/data-storage.service\";\nimport {GameplayLabService} from \"../service/gameplay-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-labyrinth-game',\n  templateUrl: './labyrinth-game.component.html',\n  styleUrls: ['./labyrinth-game.component.css'],\n\n  styles: [`\n    .container {\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 4}px;\n      grid-template-rows: ${LINE_HEIGHT * 45}px ${LINE_HEIGHT * 8}px;\n      grid-template-areas:\n    \"main sidebar\"\n    \"toolbar toolbar\";\n      margin-left: auto;\n      margin-right: auto;\n      width: ${CHARACTER_SPACING * 110}px;\n      overflow-x: hidden;\n    }\n    .menuBar {  display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-items: center;\n    }\n    .toolbar {\n      z-index: 100;\n      grid-area: toolbar;\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 6}px 1fr;\n    }\n\n    .noPartyMessage {\n      padding: ${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n  `]\n})\nexport class LabyrinthGameComponent implements OnInit, OnDestroy {\n  currentParty: any\n  currentLevel: any\n  @ViewChild('level-view') levelView:LevelViewComponent;\n  @ViewChild('winModal') winModal:AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal;\n  score: any;\n  private subscriptionCurrentParty: Subscription;\n\n  constructor(private labService: GenerateLabService,\n              private dataStorageService: DataStorageService,\n              private gameplayLabService: GameplayLabService,\n              public fullViewRenderService: FullsizeAsciiRenderService,\n              public mapRenderService: MapAsciiRenderService,\n              private router: Router,\n              private soundService: SoundService) {\n  }\n\n  ngOnInit(): void {\n\n    this.subscribeCurrentParty()\n    this.soundService.playGameMusic()\n  }\n\n  subscribeCurrentParty(): any {\n    this.subscriptionCurrentParty = this.dataStorageService.getCurrentParty()\n      .subscribe((nextParty) => {\n\n          this.currentParty = {...nextParty}\n          if (nextParty) {\n            this.currentLevel = this.currentParty.level\n            console.log(nextParty)\n            console.log(\"update\")\n            if (this.currentParty.status.name$ == \"WIN\") {\n              this.winModal.show()\n            }\n            this.score =  this.gameplayLabService.computePartieScore();\n          }\n        }\n      )\n    return this.currentParty\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  take() {\n    this.gameplayLabService.takeAll();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionCurrentParty.unsubscribe();\n  }\n\n  nextLevel(): void {\n    this.loadingModal.show();\n    this.winModal.hide();\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      setTimeout(() => resolve('done'), 5000);\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      resolve(this.labService.generate( (parseInt(this.score.size)+1), this.currentParty.player.name)); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n}\n\n","<div class=\"menuBar text\" ascii-border borderTemplateName=\"doubleGridTemplate\">\n  <span>LAB GENERATOR </span>\n  <button ascii-render class=\"ihm-ui\"><a href=\"./menu\" class=\"interact-ui text\">menu</a></button>\n  <button ascii-render class=\"ihm-ui\"><a href=\"./new\" class=\"interact-ui text\">new Labyrinth</a></button>\n  <span></span>\n</div>\n<div class=\"noPartyMessage\" *ngIf=\"!currentParty\">\n  <div ascii-border class=\"text interact-ui\">no game loaded for the moment, please wait or create a new game\n    <button class=\"ihm-ui\" ascii-border><a class=\"text interact-ui\" href=\"./new\">new game</a></button>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"currentParty\">\n  <div class=\"mainArea\">\n    <level-view [currentParty]=\"currentParty\"\n                [rangeArroundPlayer]=\"1\"\n    ></level-view>\n  </div>\n  <div class=\"sidebar\">\n\n    <app-sliding\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'-100%'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-81px)',\n       left:'100%'}\"\n      [slideOnlyOnClick]=\"true\"\n      style=\"background-color:red; overflow: hidden;\"\n    >\n      <map-view [currentParty]=\"currentParty\"\n                [renderService]=\"mapRenderService\"\n      ></map-view>\n\n\n    </app-sliding>\n\n    <app-sliding\n      slideOnlyOnClick=\"true\"\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'50%',\n      bottom:'0'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-27px)',\n       left:'-100%',\n          bottom:'0'}\">\n      <div class=\"inventoryArea\">\n        <inventory-view\n          [player]=\"this.currentParty.player\"\n        ></inventory-view>\n      </div>\n    </app-sliding>\n\n  </div>\n  <div class=\"toolbar\">\n    <div class=\"gameplay\">\n      <keypad-form></keypad-form>\n    </div>\n    <div class=\"inventoryArea\">\n\n    </div>\n  </div>\n  <app-ascii-modal #winModal class=\"text\">\n    <div ascii-border  class=\"background-ui\">\n    <h1 ascii-border  class=\" text important-ui\"> YOU WIN !</h1>\n    <span app-ascii>{{fullViewRenderService.renderObj({name: 'exit'})}}</span>\n    <span app-ascii>\n      {{fullViewRenderService.renderObj(this.currentParty.player)}}\n    </span>\n\n\n    <div ascii-border xRepeat=\"40\">\n      <div>total size:{{this.score.size}}</div>\n      <div>total number of room:{{this.score.numberOfRooms}}</div>\n      <div>minimum solution:{{this.score.solutionLength}} m</div>\n      <div>total number of wrong exit:{{this.score.numberOfCulDeSac}}</div>\n      <div>total walked distance:{{this.score.numberOfSteps}} m</div>\n      <div></div>\n      <div>total score:{{this.score.score}}</div>\n    </div>\n    <button ascii-border class=\"important-ui\" (click)=\"nextLevel()\">next level</button>\n    </div>\n  </app-ascii-modal>\n\n  <app-ascii-modal #loadingModal>\n    <app-loading></app-loading>\n  </app-ascii-modal>\n\n\n</div>\n","import {Injectable} from '@angular/core';\nimport {GenerateLabService} from \"./generate-lab.service\";\nimport {getFromKotlin, parseKotlinPathToJsView, parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport * as gameRules from \"gameRules\";\nimport {DataStorageService} from \"./data-storage.service\";\nimport findKey from 'lodash/findKey';\nimport {SoundService} from \"./sound/sound.service\";\n\n// @ts-ignore\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameplayLabService {\n  currentParty: any;\n  currentPartyProxy: any;\n  gameplay: any;\n\n  constructor(private serviceLabService: GenerateLabService, private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    dataStorageService\n      .getCurrentParty()\n      .subscribe((party) => {\n        this.currentParty = party;\n        this.currentPartyProxy = parseKotlinToJsView(party,7);\n      })\n    this.gameplay = gameRules.fr.perso.labyrinth.labeat\n\n  }\n\n  move(direction: string) {\n    this.dataStorageService.saveCharacterDirection(direction);\n    let connectionsMap = this.currentPartyProxy.player.location.connectionsMap\n    let nextLocation = connectionsMap[direction];\n    console.log(nextLocation)\n    if (nextLocation) {\n      console.log(\"next\")\n      let door = this.currentParty.player.location.content.toArray()\n        .find(it => {\n          let proxy = parseKotlinToJsView(it, 2)\n          return proxy.destination\n          && it.destination.x === nextLocation.x\n          && it.destination.y === nextLocation.y})\n\n      if (door) {\n        console.log(\"door\")\n        let interaction = this.play(door);\n        console.log(interaction)\n        if (interaction.result==\"Success\") {\n          this.soundService.playMove()\n          return false;\n        } else {\n          this.soundService.playNo()\n          return true;\n        }\n\n      }\n\n    }\n  }\n\n  take(objToTake) {\n    this.dataStorageService.saveCharacterDirection('LEFT');\n    this.currentParty.player.location.content.toArray()//getJsViewFromKotlin(this.currentParty, \"player\", \"location\", \"content\")\n      .filter(it => it.name === objToTake.name)\n      .forEach((it) => {\n        if(this.play(it).result == \"Success\"){\n          this.soundService.playTake()}\n\n      })\n\n  }\n\n  takeAll() {\n    this.currentParty.player.location.content.toArray()\n      .filter(it => it.type != \"door\")\n      .forEach((it) => {\n        this.take(it)\n      })\n  }\n\n  private play(obj): any {\n    let interactionResult = this.gameplay.playerInteractWith(this.currentParty, obj);\n    this.dataStorageService.saveParty(this.currentParty)\n    this.dataStorageService.saveLastMessages(parseKotlinPathToJsView(interactionResult, \"messages\"))\n    return interactionResult;\n\n  }\n\n\n  levelContent(levelCase) {\n    let content = parseKotlinPathToJsView(levelCase,\"content\");\n\n    return content.filter(it => !this.isDoor(it))\n  }\n\n  private isDoor(it) {\n    return it.destination !== undefined\n  }\n\n  doorAt(levelCase, direction: string): any | undefined {\n    let destination = parseKotlinPathToJsView(levelCase, \"connections\")[direction]\n    if (destination) {\n      return parseKotlinPathToJsView(levelCase, \"content\")\n        .filter(obj => {\n          let doorDestination = parseKotlinPathToJsView(obj, 'destination');\n          return doorDestination && doorDestination.x === destination.x && doorDestination.y === destination.y;\n        })[0]\n    }\n  }\n\n\n  moveAtCase(levelCase: any):boolean {\n    let connectionsMap = this.currentPartyProxy.player.location.connectionsMap\n    let direction = findKey(connectionsMap, (it) => {\n      return it && it.x === levelCase.x && it.y === levelCase.y\n    })\n    if (direction) {\n      return this.move(direction)\n    }\n    return false;\n  }\n\n  hasPlayer(levelCase: any) {\n    return parseKotlinPathToJsView(levelCase,\"content\")\n      .find(p => {\n        return p.type === \"player\"\n      });\n  }\n\n  computePartieScore() {\n    return this.gameplay.computePartieScore(this.currentParty)\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n  abcGridTemplate,\n  mapGridTemplate, paperGridTemplate,\n  viewEmptyZoneGridTemplates\n} from \"../labyrinth/service/render/resources/border\";\nimport * as gameRules from \"gameRules\"\n@Component({\n  selector: 'app-ascii-gallery',\n  templateUrl: './ascii-gallery.component.html',\n  styleUrls: ['./ascii-gallery.component.css']\n})\nexport class AsciiGalleryComponent implements OnInit {\n  emptyZone: any\n  defaultZone: any\n  display = false\n  abc: any = abcGridTemplate;\n  outsideZone: any = viewEmptyZoneGridTemplates[0];\n  parchemin: any = paperGridTemplate;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    console.log(\"ngOnInit\")\n    try {\n      let emptyParty = gameRules.fr.perso.labyrinth.labeat.generation.initPartieEmpty(3, \"empty\");\n      this.emptyZone = emptyParty.level.content.toArray()[0].toArray()[0]\n      this.defaultZone = emptyParty.level.content.toArray()[1].toArray()[1]\n      this.defaultZone = gameRules.fr.perso.labyrinth.labeat.generation.initPartieMapLabWithKey(4, \"key\").level.content.toArray()[0].toArray()[1]\n    } catch (e) {\n      console.log(e)\n    }\n    console.log(this.emptyZone)\n    console.log(this.defaultZone)\n  }\n\n  toggle(): void {\n    this.display = !this.display;\n  }\n}\n","<span (click)=\"toggle()\" class=\"text\"> toggle galery</span>\n<app-zone-view [zone]=\"defaultZone\"> </app-zone-view>\n<app-zone-view [zone]=\"emptyZone\"> </app-zone-view>\n\n\n<div *ngIf=\"display\">\n  <app-loading></app-loading>\n  <inventory-view [player]=\"{inventoryArray:defaultZone.content.toArray()}\"></inventory-view>\n\n\n  <span ascii-border><span class=\"text\">text</span>\n    <span class=\"asciiArt\">art</span></span>\n\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'bigspan'\" class=\"text\">button</button>\n\n  <br/>\n  <br/>\n  <br/>\n  <br/>\n  <span ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\">X</span>\n  <input ascii-render value=\"inputAlone\"/>\n  <br/><br/>\n  <div style=\"display: inline-block\" ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\"><input value=\"inputDiv\"></div>\n  <br/><br/>\n  <br/><br/>\n\n  <span ascii-render [name]=\"'bigspan'\" class=\"text\">spon</span>\n  <br/>\n  <h1 ascii-render [name]=\"'bigspan'\" class=\"text\">H1</h1>\n\n  <br/>\n  <br/>\n  <span ascii-render [name]=\"'new'\" class=\"text\">SPA LABYRINTH</span>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\">BTN LABYRINTH</button>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\"><span app-ascii [content]=\"'BTN \\nLABYRINTH'\"></span></button>\n  <br/>\n  <br/>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render class=\"asciiArt\">button</button>\n  <br/>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\">text div</div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\" [borderTemplate]=\"parchemin\"><span app-ascii\n                                                                                      [content]=\"'div \\nmulti\\n line'\"></span>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n line'\"></span></div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n with content'\"></span>\n    <span ascii-render [name]=\"'bigspan'\" class=\"text\">span</span>\n\n    <div ascii-render> another div</div>\n  </div>\n  <br/>\n  <input ascii-render [defaultValue]=\"'input'\"/>\n  <div style=\"width:300px\">\n    <p> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz hiehfozehfnhoif zz</p>\n    <p ascii-render> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz\n      hiehfozehfnhoif zz</p>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"asciiArt\" borderTemplateName=\"paper\">div</div>\n\n\n</div>\n\n\n\n<!-- -->\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {CharacterFormComponent} from \"./characterEditor/character-form/character-form.component\";\nimport {NewLabyrinthFormComponent} from \"./labyrinth/new-form/new-labyrinth-form.component\";\nimport {LabyrinthGameComponent} from \"./labyrinth/game-view/labyrinth-game.component\";\nimport {MenuComponent} from \"./labyrinth/menu/menu.component\";\nimport {MusicViewComponent} from \"./music-view/music-view.component\";\nimport {AsciiGalleryComponent} from \"./ascii-gallery/ascii-gallery.component\";\n\nconst routes: Routes = [{path: 'character', component: CharacterFormComponent},\n  {path: 'new', component: NewLabyrinthFormComponent},\n  {path: 'menu', component: MenuComponent},\n  {path: 'game', component: LabyrinthGameComponent},\n  {path: 'music', component: MusicViewComponent},\n  {path: 'ascii', component: AsciiGalleryComponent},\n  {path: '**', redirectTo: '/menu'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {compositionUtils, chooseNoteUtils, Note, utils, selector, harmoniqueUtils} from \"music-generator\";\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameMusiqueService {\n\n  constructor() {\n  }\n\n  gameDeprimanteMusicRandom(): any {\n    function choseNoteFromRandomNWhoRespect(sizeOfChoice) {\n      let chooseNoteWhoRespect = (note: string, possibilites: Array<string>, filters: Array<(n1: string, n2: string) => boolean>) => {\n        const values = possibilites.filter((newNote) => {\n          return filters.every((f) => {\n            return f.bind(this)(note, newNote)\n          })\n        });\n        return utils.randomFromArray(values.slice(0, sizeOfChoice));\n      }\n      return chooseNoteWhoRespect;\n    }\n\n    let chooseNoteWhoRespect = choseNoteFromRandomNWhoRespect(3);\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  menuDeprimanteMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstTuneWhoRespect;\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  gameMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getRandomFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n  menuMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n\n  generateMusicDeprimante(chooseNoteWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytme = utils.shuffle([[\"4n\", \"4n\"], [\"4n\", \"4n\"], [\"4n\", \"4n.\"]]);\n\n    mainRhytme[0] = [\"4n\"].concat(mainRhytme[0])\n    mainRhytme[2] = mainRhytme[2].concat([\"4n.\"])\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 4))\n    let mainTheme = compositionUtils.fillPatternWithNoteDescendantes(firstNoteTheme, mainRhytme, mainNotes, chooseNoteWhoRespect);\n\n\n    let firstNoteIntro = utils.randomFromArray(mainNotes.slice(0, 4).filter(n => firstNoteTheme != n))\n\n    let intro = compositionUtils.fillPatternWithNoteDescendantes(firstNoteIntro, mainRhytme, mainNotes, chooseNoteWhoRespect);\n    let beforeLastNoteIntro = compositionUtils.flatPartition(intro).reverse()[1].tune\n\n    let lastNoteIntro = chooseNoteWhoRespect(firstNoteTheme, mainNotes, [selector.isConsonnanteOf, (n, n2) => {\n      return selector.isConsonnanteOf(n2, beforeLastNoteIntro)\n    }])\n    compositionUtils.flatPartition(intro).reverse()[0].tune = lastNoteIntro;\n\n    let variation1 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune), chooseNoteWhoRespect);\n    let variation2 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune && n != variation1[0].tune), chooseNoteWhoRespect);\n\n\n    let conclusion = compositionUtils.fillWithNotesRespecting(mainNotes.filter(n => n != mainTheme.reverse()[0].tune && n != variation1.reverse()[0].tune && n != variation2.reverse()[0].tune), mainRhytme, mainTheme[0][0].tune, chooseNoteWhoRespect);\n\n    let form = [intro, mainTheme, variation1, mainTheme, variation2, mainTheme, conclusion]\n    let partition = compositionUtils.flatPartition(form)\n\n    return partition\n\n  }\n\n\n  generateMusicAngoissante(chooseNoteWhoRespect=chooseNoteUtils.getRandomFromBestsWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytmePart1 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"4n\", \"4n\", \"4n\"]]).slice(0, 2);\n    let mainRhytmePart2 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"8n\", \"8n\", \"8n\", \"8n\", \"4n\",],]).slice(0, 2);\n    ;\n    //mainRhytmePart1[0] = [\"4n\"].concat(mainRhytmePart1[0])\n    //mainRhytmePart1[2] = mainRhytmePart1[2].concat([\"8n\", \"4n\"])\n    let mainRhytme = mainRhytmePart1.concat(mainRhytmePart2)\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 3))\n\n    let lastNotePreviousPattern = firstNoteTheme\n    let mainThemePart1;\n    try {\n      let previousPattern = [null, new Note(firstNoteTheme, \"\"), null]\n      mainThemePart1 = mainRhytmePart1.map((pattern, indexP) => {\n        let firstNote = previousPattern.length > 2 ? utils.randomFromArray(previousPattern.slice(1, -1)).tune : utils.randomFromArray(harmoniqueUtils.getTunesBeetween(previousPattern[0].tune, previousPattern[1].tune))\n        let maxNoteIndex = Math.round((indexP + pattern.length * 2) * mainNotes.length / (mainRhytmePart1.length + pattern.length * 2));\n        let firstNoteIndex = mainNotes.findIndex((n) => n === firstNote)\n        let currentNotes = mainNotes.slice(firstNoteIndex, maxNoteIndex);\n        let result = compositionUtils.fillWithNotesRespecting2(currentNotes, pattern, lastNotePreviousPattern, [selector.isDescendanceOf, selector.isDiffOf], chooseNoteWhoRespect);\n        compositionUtils.insertResolutionAtEndIfNeed(result, mainNotes, chooseNoteWhoRespect);\n        lastNotePreviousPattern = harmoniqueUtils.getTuneAt(harmoniqueUtils.getLevel(result[0].tune) - 1)\n        previousPattern = result;\n        return result;\n      })\n    } catch (e) {\n      console.error(e)\n      console.error(\"fail create main theme\")\n    }\n\n    //  let mainThemePart1 = fillWithNotesRespecting(mainNotes, mainRhytmePart1, firstNoteTheme, [isInIntervalConsonnance(-1), isInIntervalDegres(6, 3), isDiffOf], chooseNoteWhoRespect);\n    let flatMainThemePart1 = compositionUtils.flatPartition(mainThemePart1);\n    let noteFromPart1 = harmoniqueUtils.getSuroundingTunes(flatMainThemePart1.map(n => n.tune));\n    let noteForPart2 = noteFromPart1.slice(noteFromPart1.length / 4, -noteFromPart1.length / 4)\n    //noteForPart2 = mainNotes.concat(getSuroundingTunes(noteForPart2));\n    if (noteForPart2.length < 2) {\n      console.error(\"not enought note\")\n    }\n\n    let mainThemePart2 = utils.shuffle(mainThemePart1).map((pattern: Array<Note>) => {\n      let shufflePattern = utils.shuffle(pattern)\n      let rythme = compositionUtils.flatPartition(shufflePattern).map(n => n.value);\n      let newPattern = compositionUtils.fillWithRandomNote([rythme], noteForPart2)\n      compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(newPattern), noteForPart2, chooseNoteWhoRespect)\n      return newPattern;\n\n    });\n\n\n    let mainTheme = mainThemePart1.concat(mainThemePart2)\n    let mainThemeNotes = compositionUtils.flatPartition(mainTheme).map(n => n.tune);\n\n\n    let intro = compositionUtils.fillWithNotesRespecting(harmoniqueUtils.getSuroundingTunes(mainThemePart1[0].map(n => n.tune)), mainRhytmePart2, utils.randomFromArray(mainThemeNotes), [selector.isInIntervalDegres(-3, 3)]);\n    compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(intro), mainNotes, chooseNoteWhoRespect)\n    let flatIntro = compositionUtils.flatPartition(intro);\n\n\n    let noteForVariation = harmoniqueUtils.getSuroundingTunes((utils.last(mainThemePart1) as Array<Note>).map(n => n.tune))\n    let variation1 = utils.shuffle(mainThemePart2).map(pattern => compositionUtils.fillWithRandomNote(compositionUtils.flatPartition(pattern).map(n => n.value), noteForVariation))\n\n    let variation2 = (utils.shuffle(variation1))\n\n\n    let conclusion = compositionUtils.fillWithNotesRespecting(mainThemeNotes, mainRhytmePart2, utils.last(compositionUtils.flatPartition(variation2)).tune, [selector.isConsonnanteOf, selector.isDiffOf]);\n\n\n    let form = [intro, mainThemePart1, mainThemePart2, mainThemePart1, variation1, mainThemePart1, variation2, mainThemePart1, mainThemePart2, conclusion]\n\n\n    return form\n\n  }\n\n\n  moveMusic() {\n    return [new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\")];\n  }  noMusic() {\n    return [new Note(\"C3\", \"8n\"),new Note(\"B3\", \"8n\")];\n  }\n\n  takeMusic() {\n    return  [new Note(\"C3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"G3\", \"8n\")];;\n  }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n\n@NgModule({\n  declarations: [LoadingComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n\n  ],\n    exports: [LoadingComponent]\n})\nexport class LoadingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport {mu} from \"kotlin-logging\";\n\nmu.KotlinLoggingConfiguration.LOG_LEVEL = mu.KotlinLoggingLevel.ERROR;\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}