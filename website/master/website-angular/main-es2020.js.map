{"version":3,"sources":["./src/app/utils/kotlinUtils.ts","./src/app/music-view/music.module.ts","./src/app/labyrinth/service/sound/sound.service.ts","./src/app/labyrinth/menu/menu.component.ts","./src/app/labyrinth/menu/menu.component.html","./src/app/labyrinth/game-view/labyrinth-game.module.ts","./src/app/music-view/partition-view/temp-view/temp-view.component.ts","./src/app/music-view/partition-view/temp-view/temp-view.component.html","./src/app/music-view/music-view.component.ts","./src/app/music-view/music-view.component.html","./src/app/utils/ascii/ascii-on-grid-div/ascii-inside-grid.component.ts","./src/app/utils/ascii/ascii-line/ascii-line.component.ts","./src/app/utils/ascii/ascii-line/ascii-line.component.html","./src/app/utils/ascii/ascii-button/ascii-button.component.ts","./src/app/labyrinth/service/render/resources/border.ts","./src/app/labyrinth/service/generate-lab.service.ts","./src/environments/environment.ts","./src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.ts","./src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.html","./src/app/utils/ui/atom/sliding/sliding.component.ts","./src/app/utils/ui/atom/sliding/sliding.component.html","./src/app/characterEditor/character-form/character-form.component.ts","./src/app/characterEditor/character-form/character-form.component.html","./src/app/labyrinth/service/sound/tone.service.ts","./src/app/labyrinth/game-view/inventory-view/inventory-view.component.ts","./src/app/labyrinth/game-view/inventory-view/inventory-view.component.html","./src/app/utils/ascii/ascii-modal/ascii-modal.component.ts","./src/app/utils/ascii/ascii-modal/ascii-modal.component.html","./src/app/utils/ascii/ascii-generator.service.ts","./src/app/utils/ascii/component/ascii.component.ts","./src/app/utils/ascii/component/ascii.component.html","./src/app/labyrinth/service/render/map-ascii-render.service.ts","./src/app/utils/ascii/ascii.module.ts","./src/app/labyrinth/service/data-storage.service.ts","./src/app/labyrinth/service/highscores.service.ts","./src/app/labyrinth/new-form/new-labyrinth-form.component.ts","./src/app/labyrinth/new-form/new-labyrinth-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/labyrinth/game-view/map-view/map-view.component.ts","./src/app/labyrinth/game-view/map-view/map-view.component.html","./src/app/utils/ascii/ascii-on-grid-div/ascii-grid.module.ts","./src/app/utils/ascii/ascii-border/ascii-border.component.ts","./src/app/utils/ascii/ascii-border/ascii-border.component.html","./src/app/app.module.ts","./src/app/labyrinth/service/render/ascii-render.service.ts","./src/app/labyrinth/service/render/resources/border-compute.ts","./src/app/utils/ui/atom/sound/sound.component.ts","./src/app/utils/ui/atom/sound/sound.component.html","./src/app/labyrinth/loading/loading.component.ts","./src/app/labyrinth/loading/loading.component.html","./src/app/utils/ascii/AsciiConst.ts","./src/app/labyrinth/game-view/level-view/level-view.component.ts","./src/app/labyrinth/game-view/level-view/level-view.component.html","./src/app/labyrinth/game-view/keypad-form/keypad-form.component.ts","./src/app/labyrinth/game-view/keypad-form/keypad-form.component.html","./src/app/utils/ascii/ascii-on-grid-div/ascii-on-grid-div.component.ts","./src/app/music-view/partition-view/partition-view.component.ts","./src/app/labyrinth/service/render/character-render.service.ts","./src/app/labyrinth/service/render/fullsize-ascii-render.service.ts","./src/app/utils/ascii/ascii-character/ascii-character.component.ts","./src/app/utils/ascii/ascii-character/ascii-character.component.html","./src/app/labyrinth/game-view/labyrinth-game.component.ts","./src/app/labyrinth/game-view/labyrinth-game.component.html","./src/app/labyrinth/service/gameplay-lab.service.ts","./src/app/ascii-gallery/ascii-gallery.component.ts","./src/app/ascii-gallery/ascii-gallery.component.html","./src/app/app-routing.module.ts","./src/app/labyrinth/service/sound/game-musique.service.ts","./src/app/labyrinth/loading/loading.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2020.js","sourcesContent":["function standardizeName(oldName) {\n  return oldName.replace(/^\\_*/, \"\").replace(/\\_\\S*\\$/, \"\").replace(/\\_\\d/, \"\");\n}\n\nfunction instanceWithSimplifiedField(kotlinInstance, maxDeep, autoProxyMethod): any {\n  let newkotlinInstance = {};\n  Object.getOwnPropertyNames(kotlinInstance).forEach(\n    (oldName: string) => {\n      newkotlinInstance[oldName] = kotlinInstance[oldName]\n      let propertyclassName = !!kotlinInstance[oldName] && !!kotlinInstance[oldName].__proto__ && !!kotlinInstance[oldName].__proto__.constructor && kotlinInstance[oldName].__proto__.constructor.name;\n      let newName\n      if (!isNaN(parseInt(oldName))) {\n        newName = oldName;\n      } else {\n        newName = standardizeName(oldName);\n\n        if (propertyclassName === 'ArrayList' && !Array.isArray(kotlinInstance[oldName])) {\n          newName += \"Array\"\n        }\n        if (propertyclassName === \"HashMap\" || propertyclassName == \"LinkedHashMap\") {\n          newName += \"Map\"\n        }\n        if (propertyclassName === 'Function') {\n          newName += \"Function\"\n        }\n      }\n      let isNewNameAlreadyUsed = Object.getOwnPropertyDescriptor(newkotlinInstance, newName);\n      if (!kotlinInstance.__proto__) {\n        //TODO : most of the time it's inner object of stdlib class\n        newkotlinInstance[newName] = kotlinInstance[oldName]\n      }\n      if (!kotlinInstance.__proto__[newName]) {\n        try {\n          if (maxDeep >= 0) {\n            newkotlinInstance[newName] = parseKotlinToJsView(kotlinInstance[oldName], maxDeep - 1, autoProxyMethod)\n          } else {\n            newkotlinInstance[newName] = kotlinInstance[oldName]\n          }\n        } catch (e) {\n          console.error(e)\n        }\n\n      }\n\n    }\n  );\n  return newkotlinInstance;\n}\n\nexport function parseKotlinToJsView(kotlinInstance, maxDeep: number = 10000, autoProxyMethod = true) {\n  if (!!maxDeep && maxDeep < 0) {\n    return kotlinInstance\n  } else if (kotlinInstance === undefined || kotlinInstance === null) {\n    return kotlinInstance\n  } else if (typeof kotlinInstance !== 'object') {\n    return kotlinInstance\n  } else if (Array.isArray(kotlinInstance)) {\n    return kotlinInstance.map((item) => {\n      return parseKotlinToJsView(item, maxDeep, autoProxyMethod)\n    })\n\n  } else {\n    let className = kotlinInstance.__proto__.constructor.name\n    if (className === \"Function\") {\n\n      return (...args) => {\n        const retourMethod = kotlinInstance.apply(null, args)\n        if (autoProxyMethod) {\n          return parseKotlinToJsView(retourMethod, maxDeep - 1, autoProxyMethod);\n        } else {\n          return retourMethod;\n        }\n      }\n\n    } else if (className === 'ArrayList' || className === 'HashSet') {\n      return kotlinInstance.toArray().map((item) => {\n        if (maxDeep >= 0) {\n          return parseKotlinToJsView(item, maxDeep - 1, autoProxyMethod)\n        } else {\n          return item;\n\n        }\n      })\n    } else if (className === \"HashMap\" || className == \"LinkedHashMap\") {\n      let newkotlinInstance = {};\n      let protoMap = instanceWithSimplifiedField(kotlinInstance, 0, false);\n      if (protoMap.internalMap) {\n        protoMap = instanceWithSimplifiedField(protoMap.internalMap, 0, false)\n        if (protoMap.backingMap) {\n          Object.values(protoMap.backingMap)\n            .forEach((protoEntry: { value: any, key: any }) => {\n              let protoEntryProxy = instanceWithSimplifiedField(protoEntry, 0, false)\n              //keep the $\n              let key: string = protoEntryProxy.key.name$ ? protoEntryProxy.key.name$ : protoEntryProxy.key;\n              newkotlinInstance[key] = parseKotlinToJsView(protoEntryProxy.value, maxDeep - 1, false);\n            })\n        }\n      }\n      return newkotlinInstance\n    } else {\n\n      let newkotlinInstance = instanceWithSimplifiedField(kotlinInstance, maxDeep, autoProxyMethod);\n      newkotlinInstance.className = className;\n      return newkotlinInstance\n    }\n  }\n  return kotlinInstance;\n}\n\nexport function printProxyModel(obj, indentation = \"\") {\n\n  return Object.keys(obj).map(key => {\n\n    if (key.endsWith(\"Array\")) {\n      return printProxyModel(obj[key][0]);\n    }\n    return key;\n\n  })\n}\n\nexport function parseKotlinPathToJsView(instance, ...path) {\n\n  return parseKotlinToJsView(getFromKotlin(instance, ...path), 0, false)\n}\n\nexport function getFromKotlin(instance: any, ...path: any[]) {\n  if (path.length == 0 || !instance) {\n    return instance;\n  } else {\n    let propertyclassName = instance.__proto__.constructor.name;\n    if (instance.toArray) {\n      return getFromKotlin(instance.toArray()[path[0]], ...path.slice(1));\n    } else if (propertyclassName === \"HashMap\" || propertyclassName == \"LinkedHashMap\") {\n      return getFromKotlin(parseKotlinToJsView(instance, 0, false)[path[0]], ...path.slice(1));\n    } else {\n      let field: string = Object.keys(instance).find(fieldName => {\n        return standardizeName(fieldName) == path[0] //don't use ===, here\n      });\n      if (instance[field]) {\n        return getFromKotlin(instance[field], ...path.slice(1))\n      } else {\n        return instance[field]\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MusicViewComponent} from \"./music-view.component\";\nimport {PartitionViewComponent} from \"./partition-view/partition-view.component\";\nimport {TempViewComponent} from \"./partition-view/temp-view/temp-view.component\";\nimport {AsciiModule} from \"../utils/ascii/ascii.module\";\n\n\n@NgModule({\n  declarations: [MusicViewComponent, PartitionViewComponent, TempViewComponent],\n  exports: [\n    PartitionViewComponent\n  ],\n  imports: [\n    CommonModule,\n    AsciiModule\n  ]\n})\nexport class MusicModule {\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, Subject, Subscription} from \"rxjs\";\nimport {scan} from \"rxjs/operators\";\nimport {GameMusiqueService} from \"./game-musique.service\";\n\nimport * as tone from \"tone\";\nimport {compositionUtils, rhythmUtils, Note, instrumentUtils} from \"music-generator\"\nimport {ToneService} from \"./tone.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundService implements OnDestroy {\n\n  soundOnSubject$: Subject<boolean> = new BehaviorSubject<boolean>(false);\n  soundOn$ = this.soundOnSubject$.pipe(scan((previousValue, forcedValue) => {\n\n\n    let soundOn = forcedValue ? forcedValue : !previousValue;\n    if (!soundOn) {\n      console.warn(\"mute\")\n      tone.Destination.mute = true;\n\n    } else {\n      console.warn(\"unmute\")\n      tone.Destination.mute = false;\n    }\n    this.soundOn = soundOn;\n    return soundOn\n  }));\n\n  private soundOn: boolean;\n  private toneHaveBeenInitialized: boolean = false;\n\n\n  private gameMusic: tone.Part;\n  private menuMusic: tone.Part;\n  private currentAmbiance: tone.Part;\n\n  private moveSound: any;\n  private noSound: any;\n  private takeSound: any;\n  private ambiantInstrument: tone.Synth<any>;\n  private menuInstrument: tone.Synth<any>;\n  private gameInstrument: tone.Synth<any>;\n  private soundInstrument: tone.Synth<any>;\n\n  subscribeSoundOn(observer): Subscription {\n    return this.soundOn$.subscribe(observer)\n  }\n\n  constructor(private gameMusiqueService: GameMusiqueService, private toneService:ToneService) {\n    // document.body.addEventListener(\"mousemove\", () => this.soundOnSubject$.next(true), {once: true})\n\n\n    document.querySelector('body') && document.querySelector('body').addEventListener('click', async () => {\n      if (tone && !this.toneHaveBeenInitialized) {\n        this.toneService.start();\n        //this.currentAmbiance.volume-=10\n        console.log('audio is ready');\n        this.forceSoundOn()\n        this.toneHaveBeenInitialized = true;\n        tone.Transport.start()\n      } else if (this.toneHaveBeenInitialized) {\n        console.log(\"audio already ready\")\n      } else {\n\n        console.error('audio not ready')\n      }\n    });\n\n\n    this.menuInstrument = toneService.Synth();\n\n    this.gameInstrument =toneService.Synth();\n    this.soundInstrument = toneService.Synth();\n    this.gameInstrument.toDestination();\n    this.menuInstrument.toDestination();\n    this.soundInstrument.toDestination();\n    this.soundInstrument.volume.value -= 35\n    this.moveSound = this.gameMusiqueService.moveMusic();\n    this.takeSound = this.gameMusiqueService.takeMusic();\n    this.noSound = this.gameMusiqueService.noMusic();\n  }\n\n  generateMenuMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.menuMusic)\n        this.menuMusic = createLoop(this.menuInstrument, this.gameMusiqueService.menuMusicRandom(), 1.3);\n    });\n  }\n\n  generateGameMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.gameMusic)\n        this.gameMusic = createLoop(this.gameInstrument, this.gameMusiqueService.gameMusicRandom(), 0.8);\n    });\n  }\n\n  private tryNTimes(numberOfTry, callback) {\n    while (numberOfTry > 0) {\n      console.log(\"try generate menu music\")\n      try {\n        numberOfTry--;\n        callback()\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }\n\n  playMove() {\n    play(this.soundInstrument, this.moveSound, 0.5)\n  }\n\n  playTake() {\n    play(this.soundInstrument, this.takeSound, 0.5)\n  }\n\n  playNo() {\n    play(this.soundInstrument, this.noSound, 0.5)\n  }\n\n  async playMenuMusic() {\n    return this.playAmbiantMusic(this.menuMusic, this.menuInstrument);\n  }\n\n\n  public async playAmbiantMusic(newMusic:tone.Part<any>, instrument) {\n    console.log(\"new music to play\")\n    if (this.currentAmbiance) {\n      this.currentAmbiance.loop = false;\n      this.currentAmbiance.mute = true\n      await this.currentAmbiance.stop(tone.now())\n      this.ambiantInstrument.volume.value-=100;\n    }\n    newMusic.loop = true;\n    this.currentAmbiance = newMusic;\n    this.ambiantInstrument = instrument;\n    this.ambiantInstrument.volume.value=-45;\n    return newMusic.start()\n  }\n\n  private async playBruitageSound(music) {\n\n  }\n\n  async playGameMusic() {\n    return this.playAmbiantMusic(this.gameMusic, this.gameInstrument);\n\n  }\n\n  toogleSound() {\n    this.soundOnSubject$.next()\n  }\n\n  forceSoundOn() {\n    this.soundOnSubject$.next(true)\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.menuMusic) {\n      this.menuMusic.dispose()\n    }\n    if (this.gameMusic) {\n      this.gameMusic.dispose()\n    }\n    this.noSound.dispose()\n    this.takeSound.dispose()\n    this.moveSound.dispose()\n    this.ambiantInstrument.dispose()\n  }\n\n  createInstrument() {\n    return new tone.Synth().toDestination();\n  }\n}\n\nexport function createLoop(instrument, partition: Array<any>, tempo = 1): tone.Part {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let timeC = 0;\n\n  let part = new tone.Part((time, note: Note) => {\n    let decalage = rhythmUtils.duration(note.value) * tempo;\n    instrument.triggerAttackRelease(note.tune, note.value, \"+\" + timeC)\n    timeC += decalage\n    //time = InstrumentUtils.playNote(instrument, n, time, 1.2)\n  }, flatpartition.map((note) => [0, note]));\n  part.loop = true;\n  return part;\n}\n\nexport function play(instrument, partition: Array<any>, tempo = 1) {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let now = tone.now()\n  instrument.toDestination()\n  for (let i = 0; i < 1; i++) {\n    flatpartition.forEach((n) => {\n      now = instrumentUtils.playNote(instrument, n, now, tempo)\n    })\n  }\n}\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {HighscoresService} from \"../service/highscores.service\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styles: [`.container {\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    text-align: center;\n  }\n\n\n  .title pre{\n    margin-left: auto;\n    margin-right: auto;\n    width: ${CHARACTER_SPACING * 60}px;\n  }\n\n  button {\n    text-align: center;\n    padding: 0 ${CHARACTER_SPACING * 4}px;\n  }\n  `]\n})\nexport class MenuComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('highScoreModal') highScoreModal: AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n  @ViewChild('newFormModal') newFormModal: AsciiModalComponent;\n  @ViewChild('characterFormModal') characterFormModal: AsciiModalComponent;\n  highscores: Array<any>;\n  private subscriptionHighscores: Subscription;\n\n  constructor(private router: Router,\n              private highscoresService: HighscoresService,\n              private soundService: SoundService) {\n  }\n\n  ngOnInit(): void {\n    this.subscriptionHighscores = this.highscoresService.getScores().subscribe((scores) => {\n      this.highscores = scores as Array<any>;\n    })\n    this.soundService.generateMenuMusic()\n  }\n\n  clickNew() {\n    this.soundService.playMove()\n    this.newFormModal.show()\n  }\n\n  clickMusic() {\n    this.router.navigateByUrl('/music');\n  }\n\n  clickCharacter() {\n\n    this.soundService.playMove()\n    this.characterFormModal.show()\n  }\n\n  saveHighScore() {\n    this.highscoresService.saveScore({name:'test'},Math.random()*100)\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionHighscores && this.subscriptionHighscores.unsubscribe()\n  }\n\n  ngAfterViewInit(): void {\n    this.soundService.playMenuMusic();\n  }\n}\n","<div class=\"title\">\n  <pre>\n\n\n\n   _           _        _____                           _\n  | |         | |      / ____|                         | |\n  | |     __ _| |__   | |  __  ___ _ __   ___ _ __ __ _| |_ ___  _ __\n  | |    / _` | '_ \\  | | |_ |/ _ \\ '_ \\ / _ \\ '__/ _` | __/ _ \\| '__|\n  | |___| (_| | |_) | | |__| |  __/ | | |  __/ | | (_| | || (_) | |\n  |______\\__,_|_.__/   \\_____|\\___|_| |_|\\___|_|  \\__,_|\\__\\___/|_|\n    <!--\n  _______ _            _       _\n  |__   __| |          | |     | |\n  | |  | |__   ___  | | __ _| |__\n  | |  | '_ \\ / _ \\ | |/ _` | '_ \\\n  | |  | | | |  __/ | | (_| | |_) |\n  |_|  |_| |_|\\___| |_|\\__,_|_.__/\n  __          ___                        _                            _\n  \\ \\        / / |                      | |                          | |\n  \\ \\  /\\  / /| |__   ___     ___  __ _| |_   _ __   ___  ___  _ __ | | ___\n  \\ \\/  \\/ / | '_ \\ / _ \\   / _ \\/ _` | __| | '_ \\ / _ \\/ _ \\| '_ \\| |/ _ \\\n  \\  /\\  /  | | | | (_) | |  __/ (_| | |_  | |_) |  __/ (_) | |_) | |  __/\n  \\/  \\/   |_| |_|\\___/   \\___|\\__,_|\\__| | .__/ \\___|\\___/| .__/|_|\\___|\n                                         | |              | |\n                                         |_|              |_|\n\n\n\n  ________        /___/   __\n  /_  __/ /  ___   / /__ _/ /\n  / / / _ \\/ -_) / / _ `/ _ \\\n  /_/ /_//_/\\__/ /_/\\_,_/_.__/    __                       __\n  | | /| / / /  ___    ___ ___ _/ /_  ___  ___ ___  ___  / /__\n  | |/ |/ / _ \\/ _ \\  / -_) _ `/ __/ / _ \\/ -_) _ \\/ _ \\/ / -_)\n  |__/|__/_//_/\\___/  \\__/\\_,_/\\__/ / .__/\\__/\\___/ .__/_/\\__/\n                                  /_/           /_/\n  -->\n  </pre>\n</div>\n<div class=\"container text\">\n  <button ascii-render\n       (click)=\"clickNew()\">NEW LABYRINTH\n  </button>\n  <button ascii-render\n       (click)=\"clickCharacter()\">CHANGE CHARACTER LOOK\n  </button>\n  <button ascii-render\n       (click)=\"saveHighScore();highScoreModal.show()\">HIGHSCORE\n  </button>\n  <button ascii-render\n       (click)=\"clickMusic()\">ABOUT THE MUSIC...\n  </button>\n</div>\n<app-ascii-modal #highScoreModal (click)=\"this.highScoreModal.hide()\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <div ascii-border\n         hoverClass=\"asciiHighlight\"\n    ><span>Highscore</span>\n    </div>\n    <div ascii-border>\n\n      Your best score\n      <br/>\n      Ever!\n      <div *ngFor=\"let score of highscores\">\n        <div ascii-border xRepeat=\"30\">\n          {{score.player.name}} : {{score.score}}</div>\n      </div>\n    </div>\n  </div>\n</app-ascii-modal>\n<app-ascii-modal #newFormModal [closable]=\"true\">\n  <app-labyrinth-form></app-labyrinth-form>\n</app-ascii-modal>\n<app-ascii-modal #loadingModal (click)=\"this.loadingModal.hide()\">Loading</app-ascii-modal>\n<app-ascii-modal #characterFormModal [closable]=\"true\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n  </div>\n</app-ascii-modal>\n\n<audio #player\n></audio>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LabyrinthGameComponent} from \"./labyrinth-game.component\";\nimport {SlidingComponent} from \"../../utils/ui/atom/sliding/sliding.component\";\nimport {KeypadFormComponent} from \"./keypad-form/keypad-form.component\";\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {MapViewComponent} from \"./map-view/map-view.component\";\nimport {InventoryViewComponent} from \"./inventory-view/inventory-view.component\";\nimport { ZoneViewComponent } from './level-view/zone-view/zone-view.component';\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {LoadingModule} from \"../loading/loading.module\";\n\n\n@NgModule({\n  declarations: [LabyrinthGameComponent,\n    SlidingComponent,\n    KeypadFormComponent,\n    LevelViewComponent,\n    MapViewComponent,\n    KeypadFormComponent,\n    InventoryViewComponent,\n    ZoneViewComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n    LoadingModule\n  ],\n    exports: [LabyrinthGameComponent,\n        SlidingComponent,\n        KeypadFormComponent,\n        LevelViewComponent,\n        MapViewComponent,\n        KeypadFormComponent,\n        InventoryViewComponent,\n      ZoneViewComponent]\n})\nexport class LabyrinthGameModule {\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport {Note, rhythmUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-temp-view',\n  templateUrl: './temp-view.component.html',\n  styleUrls: ['./temp-view.component.css']\n})\nexport class TempViewComponent implements OnInit {\n\n\n  @Input()\n  temp: Note\n  @Input()\n  scale: Array<string> = [];\n\n\n  style() {\n\n    return this.temp ? {\n      minWidth: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n      width: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n\n      display: \"inline-block\"\n    }:{}\n  }\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  noteStyle(note: any) {\n    if (note == this.temp.tune) {\n      return {}\n    } else {\n      return {color: 'lightgrey'}\n    }\n\n  }\n}\n","<div [style]=\"style()\">\n  <div>{{temp?.value}}</div>\n  <div *ngFor=\"let tune of scale\" [style]=\"noteStyle(tune)\">\n    {{tune}}</div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {GameMusiqueService} from \"../labyrinth/service/sound/game-musique.service\";\nimport {createLoop, SoundService} from \"../labyrinth/service/sound/sound.service\";\n\nimport * as tone from \"tone\";\n\n@Component({\n  selector: 'app-music-view',\n  templateUrl: './music-view.component.html',\n  styleUrls: ['./music-view.component.css']\n})\nexport class MusicViewComponent implements OnInit {\n\n  constructor(private musiqueService: GameMusiqueService,\n              private soundService: SoundService) {\n  }\n\n  currentMusicPartition: any;\n  currentPart: any;\n  currentInstrument: any;\n  ngOnInit(): void {\n  }\n\n  generateMenuMusic() {\n    this.changeMusic(this.musiqueService.menuMusicRandom())\n  }\n\n  generateGameMusic() {\n    this.changeMusic(this.musiqueService.gameMusicRandom())\n  }\n\n  pause() {\n    this.currentPart.stop(tone.now());\n    this.currentInstrument.volume.value=-100;\n\n  }\n\n  play() {\n    this.currentPart.start();\n  }\n\n  clear() {\n    if (this.currentPart) {\n      this.currentPart.stop()\n    }\n  }\n\n  changeMusic(newPartition) {\n    console.log(\"changeMusic\")\n    if (this.currentInstrument)\n      this.currentInstrument.clear()\n    this.currentInstrument = this.soundService.createInstrument();\n    this.currentMusicPartition = newPartition;\n    this.clear();\n    this.currentPart = createLoop(this.currentInstrument, this.currentMusicPartition);\n\n    this.currentInstrument.volume = -40;\n    this.soundService.playAmbiantMusic(this.currentPart, this.currentInstrument);\n  }\n}\n","<div>\n  <div ascii-border contentClass=\"text\">About the music...</div>\n</div>\n<div>\n  <div ascii-border contentClass=\"text\">\n    <p>A new music is randomly generated at each new level.\n    </p>\n    <p>Only the music's menu is generated with a fix seed.</p>\n    <p>Try-it !</p>\n  </div>\n</div>\n<div>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateMenuMusic()\">Music menu</button>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateGameMusic()\">Random Level Music</button>\n</div>\n<div>\n  <button ascii-border (click)=\"pause()\">Pause</button>\n  <button ascii-border (click)=\"play()\">Play</button>\n</div>\n<div ascii-border contentClass=\"text\">\n  partition of the current musique:\n  <app-partition-view [partitionForms]=\"currentMusicPartition\"></app-partition-view>\n</div>\n","import {\n  Component, ContentChild, Directive, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Directive({\n  selector: '[app-ascii-on-grid-div] '\n})\nexport class AsciiInsideGridDivComponent {\n  @ContentChild(HTMLElement)\n  child: HTMLElement\n  @Input()\n  public content: string\n\n  @HostBinding(\"style\")\n  get hostStyle(): CSSStyleDeclaration {\n    let contentSplited = (this.content ? this.content : this.child ? this.child.textContent : 'x').split('\\n');\n    console.log(\"contentSplited\")\n    console.log(contentSplited)\n    return {\n      gridColumn: 'span ' + contentSplited[0].length,\n      gridRow: 'span ' + contentSplited.length\n    } as CSSStyleDeclaration;\n  }\n\n}\n","import {AfterViewChecked, AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'ascii-line',\n  templateUrl: './ascii-line.component.html',\n  styleUrls: ['./ascii-line.component.css']\n})\nexport class AsciiLineComponent implements OnInit {\n  @Input()\n  size: number = 1\n  char: String = \".\"\n\n  line: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.line = \"\";\n\n    for (let i = 0; i < this.size; i++)\n      this.line += this.char;\n  }\n\n\n}\n","{{line}}\n\n","import { Component, OnInit } from '@angular/core';\nimport {defaultButtonBorderTemplate}  from \"../../../labyrinth/service/render/resources/border\";\n@Component({\n  selector: 'app-ascii-button',\n  template: '<span ascii-border class=\"ihm-ui\" contentClass=\"text interact-ui\" [computeRenderEachTime]=\"false\" [borderTemplate]=\"defaultButtonBorderTemplate\" ><ng-content></ng-content></span>',\n  styleUrls: ['./ascii-button.component.css']\n})\nexport class AsciiButtonComponent implements OnInit {\n  label: string;\n  defaultButtonBorderTemplate = defaultButtonBorderTemplate\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {asciiStringToGridObject} from \"./border-compute\";\n\nlet paperRaw = \"\" +\n  \"  ________   \\n\" +\n  \" / \\\\      \\\\  \\n\" +\n  \"(  )|      | \\n\" +\n  \" \\\\_/|      |  \\n\" +\n  \"    |      |  \\n\" +\n  \"    |  ,___|_ \\n\" +\n  \"    \\\\_/_____/ \"\nexport let paperGridTemplate = asciiStringToGridObject(paperRaw, 8, 1, 4, 1)\n\n\nlet paperExitRaw = \"\" +\n  \"____  \\n\" +\n  \"\\\\   \\\\ \\n\" +\n  \"|   | \\n\" +\n  \" \\\\__| \"\nexport let paperExitGridTemplate = asciiStringToGridObject(paperExitRaw, 2, 1, 2, 1)\n\nlet mapZoneRaw = \"\" +\n  \" | \\n\" +\n  \"- -\\n\" +\n  \" | \"\nexport let mapGridTemplate = asciiStringToGridObject(mapZoneRaw, 1, 1, 1, 1)\n\nlet abcRaw = \"\" +\n  \"abc\\n\" +\n  \"d e\\n\" +\n  \"fgh\"\nexport let abcGridTemplate = asciiStringToGridObject(abcRaw, 1, 1, 1, 1)\n\nlet defaultBorderRaw = \"\" +\n  \"+-+\\n\" +\n  \"| |\\n\" +\n  \"+-+\"\nexport let defaultGridTemplate = asciiStringToGridObject(defaultBorderRaw, 1, 1, 1, 1)\n\nlet doubleBorderRaw = \"\" +\n  \"#=#\\n\" +\n  \"H H\\n\" +\n  \"#=#\"\nexport let doubleGridTemplate = asciiStringToGridObject(doubleBorderRaw, 1, 1, 1, 1)\n\nlet buttonBorderRaw = \"\" +\n  \",-.\\n\" +\n  \"| |\\n\" +\n  \"'-'\"\nexport let defaultButtonBorderTemplate = asciiStringToGridObject(buttonBorderRaw, 1, 1, 1, 1)\n\nlet titleBorderRaw = \"\" +\n  \".¨.\\n\" +\n  \": :\\n\" +\n  \" ¨ \"\nexport let defaultTitleBorderTemplate = asciiStringToGridObject(titleBorderRaw, 1, 1, 1, 1)\n\n\nlet loadingBorderRaw = \"\" +\n  \" _.-._. \\n\" +\n  \"(      )\\n\" +\n  \" )    (\\n\" +\n  \"(      )\\n\" +\n  \" '.-._. \"\nexport let loadingBorderGridTemplate = asciiStringToGridObject(loadingBorderRaw, 2, 4, 1, 2)\n\nlet viewCloseDoorZoneRaw = \"\" +\n  \" .-----------------------.\\n\" +\n  \" |\\\\    \\\\¨¨¨¨¨¨¨¨¨¨¨/    /|\\n\" +\n  \" | \\\\    \\\\    1    /    / |\\n\" +\n  \" |  \\\\    \\\\       /    /  |\\n\" +\n  \" |   \\\\____\\\\-----/____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:  '               '  :|\\n\" +\n  \" |: 1|               |1 :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/-----\\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /   1   \\\\    \\\\  |\\n\" +\n  \" | /    /_ _ _ _ _\\\\    \\\\ |\\n\" +\n  \" `-----------------------'\"\n\n\nlet viewOpenDoorZoneRaw = \"\" +\n  \" .-----------------------.\\n\" +\n  \" |\\\\    \\\\¨¨|¨¨¨¨¨|¨¨/    /|\\n\" +\n  \" | \\\\    \\\\ |     | /    / |\\n\" +\n  \" |  \\\\    \\\\|     |/    /  |\\n\" +\n  \" |   \\\\____\\\\     /____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:--'               '--:|\\n\" +\n  \" |:                     :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/     \\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /|     |\\\\    \\\\  |\\n\" +\n  \" | /    /_|_ _ _|_\\\\    \\\\ |\\n\" +\n  \" `-----------------------'\"\n\nlet viewWallZoneRaw = \"\" +\n  \" .----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\                   / |\\n\" +\n  \" |  \\\\                 /  |\\n\" +\n  \" |   \\\\_______________/   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /                 \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `----------------------'\"\n\n\nlet defaultZoneCornerWidth = 6;\nlet defaultZoneSideWidth = 15;\nlet defaultZoneCornerHeight = 5;\nlet defaultZoneSideHeight = 5;\nexport let viewCloseDoorGridTemplate = asciiStringToGridObject(viewCloseDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\n\nlet viewEmptyZoneRawOld = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\##########################/|\\n\" +\n  \" |#\\\\########################/#|\\n\" +\n  \" |##\\\\######################/##|\\n\" +\n  \" |###\\\\####################/###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###/####################\\\\###|\\n\" +\n  \" |##/######################\\\\##|\\n\" +\n  \" |#/########################\\\\#|\\n\" +\n  \" `---------------------------'\"\nlet viewEmptyZoneRawOld2 = \"\" +\n  \" .---- ---   --- --------.\\n\" +\n  \" |\\\\         .             /|\\n\" +\n  \" | \\\\                       |\\n\" +\n  \" |                      /  |\\n\" +\n  \"     \\\\__ ___ _____  ___:   |\\n\" +\n  \" |   |                 |    \\n\" +\n  \"  .  |                 |    \\n\" +\n  \" |                       ¨ |\\n\" +\n  \" |   |                 |   |\\n\" +\n  \"     |                 |    \\n\" +\n  \" |                          \\n\" +\n  \"     /    ¨¨  ¨  ¨¨¨  ¨\\\\   |\\n\" +\n  \" |                      \\\\  |\\n\" +\n  \"   /           .         \\\\ |\\n\" +\n  \" `---- --   - -- -  - ---'\"\nlet viewEmptyZoneRaw3 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nlet viewEmptyZoneRaw4 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        /                       \\n\" +\n  \"       /                        \\n\" +\n  \"      /                         \\n\" +\n  \"     /                          \\n\" +\n  \"    /                           \\n\" +\n  \"   /                            \\n\" +\n  \"  /                             \\n\" +\n  \" /                              \\n\" +\n  \"/                               \"\n\nlet viewWallZoneRaw2 = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |             /              /|\\n\" +\n  \" |            /              / |\\n\" +\n  \" |           /              /  |\\n\" +\n  \" |          /              /   |\\n\" +\n  \" |         /              /   |\\n\" +\n  \" |        /              /    |\\n\" +\n  \" |       /              /  |   |\\n\" +\n  \" |      /              /   |   |\\n\" +\n  \" |     /              /    |   |\\n\" +\n  \" |    /              /     |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨/¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /              /        \\\\  |\\n\" +\n  \" | /              /          \\\\ |\\n\" +\n  \" `---------------+-----------'\"\n\n\nlet viewEmptyDeepZoneRaw = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\                          /|\\n\" +\n  \" | \\\\                /       / |\\n\" +\n  \" |  \\\\      \\\\               /  |\\n\" +\n  \" |   \\\\                    /   |\\n\" +\n  \" |    \\\\           /      /    |\\n\" +\n  \" |     \\\\                /     |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |     /                \\\\     |\\n\" +\n  \" |    /                  \\\\    |\\n\" +\n  \" |   /     /              \\\\   |\\n\" +\n  \" |  /  /                   \\\\  |\\n\" +\n  \" | /                        \\\\ |\\n\" +\n  \" `---------------------------'\"\n\nlet viewEmptyDeepOmbreZoneRaw = \"\" +\n  \" .----.--  .----,----,---.\\n\" +\n  \" |\\\\                      /|\\n\" +\n  \" | \\\\            /       / |\\n\" +\n  \" |  \\\\      \\            / /\\n\" +\n  \" \\\\   \\\\                /    \\n\" +\n  \" |    \\\\       /      /    |\\n\" +\n  \"    -  \\\\\\\\ |  /    ///  _  |\\n\" +\n  \"      ¨=############=¨    |\\n\" +\n  \" |    _=############=_  - |\\n\" +\n  \"      /////   \\\\   \\\\\\\\\\\\     |\\n\" +\n  \" |  /  /        \\\\      \\\\  |\\n\" +\n  \" | /                    \\\\ |\\n\" +\n  \" `-- --'--'------`---`---'\"\n\n\nlet viewEmptyDeepWaterZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\           / /\\n\" +\n  \" \\\\   \\\\               /    \\n\" +\n  \" |    \\\\__-__-_--__  /    |\\n\" +\n  \" |  - ¨(  _-____   )¨ _  |\\n\" +\n  \"      ¨ )_-__  _  (¨    |\\n\" +\n  \" |    _(  -   -__  )_  - |\\n\" +\n  \"      /'--__--__---'\\\\    |\\n\" +\n  \" /   /     /          \\\\   \\\\\\n\" +\n  \" |  /  /       \\\\      \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\nlet viewEmptySpikeZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\          / /\\n\" +\n  \"     \\\\_______________/   |\\n\" +\n  \" |   |   A  /\\\\  /\\\\   |    \\n\" +\n  \" |   |  / \\\\  /\\\\      |   |\\n\" +\n  \"     |           ^   |   |\\n\" +\n  \"     |   ^           |   |\\n\" +\n  \" |   |     /\\\\    / \\\\ |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \"  / /  /       \\\\      \\\\  \\\\\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\n\nlet viewEmptyObstructedZoneRaw = \"\" +\n  \" .                ---    \\n\" +\n  \"                         \\n\" +\n  \" |                       \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      \\n\" +\n  \"     --          ---  \"\nlet viewObstructed2lZoneRaw = \"\" +\n  \" .----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-, |\\n\" +\n  \" |  |                  | |\\n\" +\n  \" | |     °            |  |\\n\" +\n  \" |  |            °     | |\\n\" +\n  \" | |      O            | |\\n\" +\n  \" | |                   | |\\n\" +\n  \" |  |             0   |  |\\n\" +\n  \" | |      °            | |\\n\" +\n  \" | |   o       °       | |\\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `----------------------'\"\nlet viewObstructed3lZoneRaw = \"\" +\n  \" .-  ---- - ---    --- -.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-,  \\n\" +\n  \"    |                  | |\\n\" +\n  \"   |     °            |  |\\n\" +\n  \"    |            °     |  \\n\" +\n  \" | |      O            |  \\n\" +\n  \"   |                   | |\\n\" +\n  \"   |           O       | |\\n\" +\n  \" |  |                 |   \\n\" +\n  \"   |   o       °       |  \\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `------    ----  --  --'\"\n\n\nlet viewEmptyZoneRaw5 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        ( @   @ )                  \\n\" +\n  \"         \\\\ A /                   \\n\" +\n  \"          uUuu                      \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nexport let viewEmptyZoneGridTemplate = asciiStringToGridObject(viewObstructed3lZoneRaw, 6, 0, 5, 0)\nexport let viewEmptyZones = [viewObstructed3lZoneRaw, viewObstructed2lZoneRaw, viewEmptySpikeZoneRaw, viewEmptyObstructedZoneRaw, viewEmptyDeepWaterZoneRaw]\nexport let viewEmptyZoneGridTemplates = viewEmptyZones.map((z => asciiStringToGridObject(z, 6, 0, 5, 0)));\n\n\nexport let viewOpenDoorGridTemplate = asciiStringToGridObject(viewOpenDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\nexport let viewWallGridTemplate = asciiStringToGridObject(viewWallZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\nexport let exitTemplate: any = \"\" +\n  \"  |--|  \\n\" +\n  \"  |--|  \\n\" +\n  \":¨|--|¨:\\n\" +\n  \"'¨¨¨¨¨¨'\\n\" +\n  \"  exit \";\nexport let startTemplate: any = \"\" +\n  \"+______\\n\" +\n  \"|start<\\n\" +\n  \"+¨¨¨¨¨¨\\n\" +\n  \"|      \\n\" +\n  \"|      \";\nlet bagRaw = \"\" +\n  \"(@=======(@   \\n\" +\n  \"||       ||   \\n\" +\n  \" \\\\\\\\ '' '//    \\n\" +\n  \"  \\\\\\\\   //     \\n\" +\n  \"   \\\\===/      \";\n\nlet handRaw = \"\" +\n  \"       /EN\\\\         \\n\" +\n  \"   /NV||..||TO\\\\     \\n\" +\n  \"   |..||  ||..|     \\n\" +\n  \"/I||..||''||..|     \\n\" +\n  \"|.||..\\\\/..\\\\/..| / RY|\\n\" +\n  \"|.|          \\\\/\\\\  /\\n\" +\n  \"|              \\\\|  \\\\/ \\n\" +\n  \"\\\\                /   \\n\" +\n  \" \\\\              /    \"\n\n\nlet bigHandRaw = \"\" +\n  \"         /EN\\\\         \\n\" +\n  \"    / NV||...||TO \\\\     \\n\" +\n  \"    |...||   ||...|     \\n\" +\n  \"/I ||...||'''||...|     \\n\" +\n  \"|..||...\\\\/...\\\\/...| / RY |\\n\" +\n  \"|..|            \\\\/\\\\   /\\n\" +\n  \"|                \\\\|   \\\\/ \\n\" +\n  \"\\\\                    /   \\n\" +\n  \" \\\\                  /    \"\n\nlet otherHandRaw = \"\" +\n  \"     (IN) (VEN)(TOR)    \\n\" +\n  \"     |¨¨| |¨¨¨||¨¨¨|(Y) \\n\" +\n  \"\\\\\\\"-_ |¨¨| |¨¨¨||¨¨¨||¨| \\n\" +\n  \" \\\\  \\\\|¨¨¨  ¨¨¨  ¨¨¨ ¨¨/ \\n\" +\n  \"  \\\\  :               ¨| \\n\" +\n  \"   \\\\_               /   \\n\" +\n  \"     \\\\              /    \"\n\n\n\n\n\nexport let bagGridTemplate = asciiStringToGridObject(otherHandRaw, 6, 15, 4, 1)\n\nlet inventoryBox =  \"\" +\n  \".=====.\\n\" +\n  \"|\\\\   /|\\n\" +\n  \"| \\\\=/ |\\n\" +\n  \"| | | |\\n\" +\n  \"| /=\\\\ |\\n\" +\n  \"|/   \\\\|\\n\" +\n  \"`====='\"\nexport let inventoryBoxGridTemplate = asciiStringToGridObject(inventoryBox, 3, 1, 3, 1)\n\nconsole.log(bagGridTemplate)\n","import {Injectable} from '@angular/core';\n\nimport {Observable, of, ReplaySubject, Subject} from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport * as gameRules from 'gameRules';\n// @ts-ignore\n\nimport {DataStorageService} from \"./data-storage.service\";\nimport {SoundService} from \"./sound/sound.service\";\n\nlet labeatGeneration = gameRules.fr.perso.labyrinth.labeat.generation;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateLabService {\n\n  constructor(private router: Router,\n              private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    this.generateSpirale()\n  }\n\n\n  generate(size, playerName: string): void {\n    let party = labeatGeneration.initPartieMapLabWithKey(size, playerName) //labeatGeneration.initPartieCompositeLabWithKeyFunction(size)\n    this.dataStorageService.saveParty(party)\n    this.soundService.generateGameMusic();\n  }\n\n  generateEmpty(size): void {\n    let party = {level: labeatGeneration.connectAllZoneOfBoard(labeatGeneration.generateEmptyBoard(size))}\n    this.dataStorageService.saveParty(party)\n    this.router.navigateByUrl('/game');\n  }\n\n  generateSpirale(): void {\n    let party = labeatGeneration.initPartieSpiral()\n    this.dataStorageService.saveParty(party)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {\n  viewCloseDoorGridTemplate,\n  viewOpenDoorGridTemplate,\n  viewWallGridTemplate\n} from \"../../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../../service/render/fullsize-ascii-render.service\";\nimport {utils} from \"music-generator\";\nimport {LINE_HEIGHT} from \"../../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../../utils/kotlinUtils\";\n\nlet backgroundTemplate = utils.shuffle([' ¨    \\n  °',\n  ' -      \\n       -   \\n    -',\n  \"\",\n  //'__/___/____\\\\_\\\\_\\n_/_/_______\\\\___\\n_____/____\\\\____\\n___/____\\\\______\\n_/_______\\\\___\\\\_\\n',\n  ' _/  _/____\\\\_\\\\_\\n_/_/___    \\\\___\\n_____/  __\\\\____\\n___/____\\\\__    \\n_/   ___\\\\__ \\\\_\\n',\n  //' _/___ /_ \\\\_\\\\_\\n_/_/_ __  _\\\\___\\n____ /__ _\\\\_ __\\n_ _/_ _ \\\\__ ___\\n_/__ __ _\\\\__\\\\__\\n',\n  //' _/_/__ \\\\__ \\\\_\\n___/ / __\\\\__  \\\\\\n __/ /__ \\\\_\\\\\\\\_\\n_ __/  __\\\\_\\\\ \\\\\\n/ __/_/_\\\\__  \\\\_',\n\n  ' ,`    ,  \\'  \\n ,\\'    \\'  ,  ,,  \\n       ,  \\n    \\'\\'  , ` ,     ',\n  ' .    .  \\n    .   .   \\n    .',\n  ' .       .  \\n       .    .   \\n       .',\n  ' °       o  \\n       °    .   \\n  o   °       .',\n  ' ..    ..... .. \\n. . .... ..... .\\n.. ... ..   ....\\n....     .... . \\n. .      ...   .\\n'\n\n])\n\n@Component({\n  selector: 'app-zone-view',\n  templateUrl: './zone-view.component.html',\n  styleUrls: ['./zone-view.component.css'],\n  styles: [`.zoneContent {\n    position: relative;\n    min-height: ${LINE_HEIGHT * 5}px;\n  }`]\n\n})\nexport class ZoneViewComponent implements OnInit {\n\n  @Input()\n  zone?: any;\n  proxy?: any;\n\n  constructor(public gameplayLabService: GameplayLabService,\n              public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnInit(): void {\n    if (!this.zone)\n      this.zone = {}\n    this.proxy = parseKotlinToJsView(this.zone, 7)\n  }\n\n  borderRendered() {\n    let borderRendered = {...viewWallGridTemplate}\n    let directions: Array<string> = ['left', \"right\", 'top', 'bottom'];//should stay lowcase\n    directions.forEach((direction: string) => {\n      let door = this.gameplayLabService.doorAt(this.proxy, direction.toUpperCase())\n      borderRendered[direction + \"BorderClass\"] = 'decor-ui'\n      if (door) {\n        borderRendered[direction + \"BorderClass\"] = 'interact-ui'\n        if (door.key) {\n          borderRendered[direction + \"Template\"] = viewCloseDoorGridTemplate[direction + \"Template\"].replace(\"1\", door.name)//TODO : use template instead of replace\n        } else {\n          borderRendered[direction + \"Template\"] = viewOpenDoorGridTemplate[direction + \"Template\"]\n        }\n        borderRendered[direction + \"Tooltip\"] = this.computeTooltip(door)\n      }\n    })\n\n    return borderRendered;\n  }\n\n  backgroundRender() {\n    return backgroundTemplate[(this.proxy.x + this.proxy.y * 3) % backgroundTemplate.length]\n  }\n\n  clickOnBorder: any = (direction: string, event: Event) => {\n    if (this.gameplayLabService.hasPlayer(this.zone)) {\n      if (this.gameplayLabService.move(direction)) {\n          event.preventDefault();\n        }\n    } else {\n     this.clickOnZone(event)\n    }\n  }\n\n  takeObj: any = (obj) => {\n    this.gameplayLabService.take(obj)\n  }\n\n  clickOnZone: any = (e: Event) => {\n    if (this.gameplayLabService.moveAtCase(this.zone)) {\n      e.preventDefault();\n    }\n  };\n\n  renderObj(obj: any) {\n    return this.renderService.renderObj(obj)\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n  getLevelContent() {\n    return this.gameplayLabService.levelContent(this.proxy)\n  }\n}\n","<div ascii-border class=\"zone asciiArt decor-ui\"\n     [borderTemplate]=\"borderRendered()\"\n     [borderClick]=\"clickOnBorder\"\n\n     [xRepeat]=\"1\"\n     [yRepeat]=\"1\"\n     [name]=\"'zone'\"\n>\n  <div class=\"zoneContent\" (click)=\"clickOnZone( $event)\">\n    <div class=\"background-ui zoneBackground\">{{backgroundRender()}}</div>\n    <div app-ascii-on-grid-div>\n      <span app-ascii\n           *ngFor=\"let obj of getLevelContent()\"\n           class=\"zoneObject asciiArt interact-ui\"\n           (click)=\"this.takeObj(obj)\"\n           [tooltip]=\"computeTooltip(obj)\"\n           [content]=\"renderObj(obj)\"\n      >\n      </span>\n    </div>\n\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\n\nconst defaultData = {\n  top: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  right: 'auto',\n  marginTop: 'auto',\n  marginBottom: 'auto',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  color: 'initial',\n  position: 'initial',\n  transform: 'initial',\n}\n\n\nfunction generateStyle(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle[key] = '{{ ' + dataName + '' + key + ' }}'\n  }\n  return style(tokenStyle);\n}\n\nfunction generateDefaultParams(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle['' + dataName + '' + key] = defaultData[key]\n  }\n\n  return tokenStyle\n}\n\n\n@Component({\n  selector: 'app-sliding',\n  templateUrl: './sliding.component.html',\n  styleUrls: ['./sliding.component.css'],\n  animations: [\n    trigger('openClose', [\n      // ...\n      state('open', generateStyle('_openData'), {\n        params: generateDefaultParams('_openData')\n      }),\n      state('close', generateStyle('_closeData'), {\n        params: generateDefaultParams('_closeData')\n      }),\n      transition('* => open', [\n        animate('2s')\n      ]),\n      transition('* => close', [\n        animate('1s')\n      ]),\n    ]),\n  ],\n})\nexport class SlidingComponent implements OnInit, OnChanges {\n  @Input()\n  public openData: any = {}\n  @Input()\n  public closeData: any = {}\n  @Input()\n  public slideOnlyOnClick = false\n\n  public isOpen = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  ngOnChanges(): void {\n\n\n  }\n\n\n  open() {\n    this.isOpen = true\n  }\n\n  close() {\n    this.isOpen = false\n  }\n\n  onAnimationEvent($event: any) {\n  }\n\n  generateParams() {\n    const params = {}\n\n    for (let key in defaultData) {\n      params['_openData' + key] = this.openData[key] ? this.openData[key] : defaultData[key]\n      params['_closeData' + key] = this.closeData[key] ? this.closeData[key] : defaultData[key]\n\n    }\n    return params\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  mouseOver() {\n    !this.slideOnlyOnClick && this.open()\n  }\n\n  mouseLeave() {\n    !this.slideOnlyOnClick && this.close()\n  }\n\n  click() {\n    if (this.slideOnlyOnClick) {\n      this.toggle();\n    } else {\n      this.close()\n    }\n  }\n}\n","<div class=\"slideContainer\"\n     (mouseover)=\"mouseOver()\"\n     (mouseout)=\"mouseLeave()\"\n     (mouseleave)=\"mouseLeave()\"\n     (mousedown)=\"click()\"\n     [@openClose]=\"{value:isOpen?'open':'close', params: this.generateParams()}\"\n     (@openClose.start)=\"onAnimationEvent($event)\"\n     (@openClose.done)=\"onAnimationEvent($event)\"\n>\n  <ng-content></ng-content>\n</div>\n","import {Component, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {DataStorageService} from \"../../labyrinth/service/data-storage.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\nimport {CharacterRenderData, CharacterRenderService} from \"../../labyrinth/service/render/character-render.service\";\n\n\n\n@Component({\n  selector: 'app-character-form',\n  templateUrl: './character-form.component.html',\n  styleUrls: ['./character-form.component.css'],\n  styles: [`input {\n    width: ${CHARACTER_SPACING * 6}px;\n    padding: 0;\n  }\n  `]\n})\nexport class CharacterFormComponent implements OnInit, OnDestroy {\n\n\n  data: CharacterRenderData = new CharacterRenderData()\n\n  render: String = \"\"\n  private interval:any;\n\n\n  constructor(public renderService: CharacterRenderService,\n              public dataStorage: DataStorageService,\n              public ngZone: NgZone) {\n\n  }\n\n  update() {\n    this.dataStorage.saveCharacter(this.data)\n  }\n\n\n  ngOnInit(): void {\n    this.update();\n    this.initCharacterRotation();\n  }\n\n  private initCharacterRotation() {\n\n    let time: number = 0;\n    this.ngZone.runOutsideAngular(() => {\n      this.interval = setInterval(this.rotate(time), 1000)\n    });\n  }\n\n  public rotate(time: number) {\n    return () => {\n      time = (time + 1) % 4;\n      let direction: string\n      switch (time) {\n        case 0:\n          direction = 'LEFT';\n          break;\n        case 1:\n          direction = 'BOTTOM';\n          break;\n        case 2:\n          direction = 'RIGHT';\n          break;\n        case 3:\n          direction = 'TOP';\n          break;\n        default:\n          direction = 'LEFT'\n      }\n      this.render = this.renderService.render(this.data, direction);\n    };\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n}\n","<h1 ascii-render class=\"text  ihm-ui\" >aspect of your character</h1>\n<div class=\"layout\">\n  <div *ngFor=\"let bodyPart of renderService.bodyPartsKey\">\n    <h2 ascii-render class=\"text\">{{bodyPart}}</h2>\n\n    <div class=\"input--border\" ascii-render>\n      <input class=\"interact-ui\"\n             [(ngModel)]=\"data[bodyPart]\"\n             (change)=\"update()\"\n             [maxLength]=\"bodyPart==='hat'?6:1\">\n    </div>\n  </div>\n  <div>  <h2 ascii-render class=\"text\">You</h2>\n    <div ascii-render [xRepeat]=\"6\" [yRepeat]=\"4\" class=\"character-render asciiArt\"\n         borderTemplateName=\"double\">\n     <span class=\"important-ui\">{{render}}</span>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport * as tone from \"tone\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToneService {\n\n  constructor() {\n  }\n\n  public Synth() {\n    return new tone.Synth()\n  };\n\n  start() {\n    tone.start();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {bagGridTemplate} from \"../../service/render/resources/border\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING} from \"../../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'inventory-view',\n  templateUrl: './inventory-view.component.html',\n  styles:[`:host {\n    background: white;\n    display: inline-block;\n  }\n\n  .title {\n    width: ${CHARACTER_SPACING}px;\n    margin-left: -${CHARACTER_SPACING*2}px;\n    margin-right: ${CHARACTER_SPACING}px;\n    display: inline-block;\n  }\n\n  .content {\n    display: inline-block;\n    width: ${CHARACTER_SPACING*(6*2+1)}px;\n  }\n  `]\n})\nexport class InventoryViewComponent implements OnInit {\n  @Input()\n  player: any;\n  borderDatas: any = bagGridTemplate;\n\n  constructor(private _renderService:FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  render(obj) {\n    return this._renderService.renderObj(obj);\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n}\n","<div class=\"inventory container decor-ui\"\n     ascii-border\n     borderTemplateName=\"inventoryBoxGridTemplate\"\n     [xRepeat]=\"15\">\n  <div class=\"title\">I N V E N T O R Y</div>\n\n  <div class=\"content\"\n       app-ascii-on-grid-div\n  >\n    <ng-container *ngIf=\"!!this.player && !!this.player.inventoryArray && this.player.inventoryArray.length==0\"> .\n    </ng-container>\n    <ng-container *ngFor=\"let item of this.player.inventoryArray\">\n      <div app-ascii class=\"important-ui\"\n           [tooltip]=\"computeTooltip(item)\"\n           [content]=\"render(item)\"></div>\n    </ng-container>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-ascii-modal',\n  templateUrl: './ascii-modal.component.html',\n  styleUrls: ['./ascii-modal.component.css']\n})\nexport class AsciiModalComponent implements OnInit {\n\n  @Input()\n  _show = false\n\n  @Input()\n  closable = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  show() {\n    this._show = true\n  }\n\n  hide() {\n\n    this._show = false\n  }\n\n}\n","<div class=\"modalScreen\" *ngIf=\"_show===true\">\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"backgroundModal\">\n\n    <div ascii-border\n      *ngIf=\"closable\" (click)=\"hide()\"\n      class=\"cross asciiArt ihm-ui\"\n      [borderTemplateName]=\"'paperExitGridTemplate'\">X\n    </div>\n    <ng-content></ng-content>\n\n  </div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n</div>\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsciiGeneratorService {\n\n  constructor() {\n    for (let key in {...this.reverseChar}) {\n      this.reverseChar[this.reverseChar[key]] = key;\n    }\n  }\n\n  reverseChar: Object = {\n    'd': 'b',\n    '/': '\\\\',\n    'q': 'p',\n    '(': ')'\n\n  }\n\n  private reverseString(str) {\n\n    return this.reverseChar[str] ? this.reverseChar[str] : str;\n  }\n\n  reverseTemplate(template, partsKey) {\n    return template.split(\"\\n\")\n      .map(row => {\n        let reversedRow = row.split(/\\$\\{(\\w+)\\}/g)\n          .filter(s => s != \"\")\n          .map((word) => {\n\n\n            if (!partsKey.includes(word) && !partsKey.includes(word.replace(\"Reversed\", \"\"))) {\n              return word.split(\"\").map(e => {\n                return this.reverseChar[e] ? this.reverseChar[e] : e\n              })\n                .reverse().join(\"\");\n            } else if (word.endsWith(\"Reversed\")) {\n              return `$\\{${word.replace(\"Reversed\", \"\")}}`;\n            } else {\n              return `$\\{${word}Reversed}`;\n            }\n          }).reverse().join(\"\");\n        return reversedRow\n      })\n      .join(\"\\n\")\n\n  }\n\n  reverseData(data: any) {\n    let ret = {}\n    for (let key in data) {\n      ret[key + \"Reversed\"] = this.reverseString(data[key])\n    }\n    return ret;\n  }\n\n  templateString(template: String, data: any) {\n    return template.replace(/\\$\\{(\\w+)\\}/g, (_, name) => {\n      return data[name] || \"?\"\n    });\n  }\n\n}\n","import {Component,Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: '[app-ascii]',\n  templateUrl: './ascii.component.html',\n  styleUrls: ['./ascii.component.css']\n})\nexport class AsciiComponent implements OnInit {\n  @Input()\n  public content: string\n  @Input()\n  public tooltip: string\n  @Input()\n  public asciiClass: string = ''\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pre [ngClass]=\"[asciiClass, 'asciiArt']\" class=\"withtooltip\">{{content}}<ng-content></ng-content><div class=\"tooltiptext text\" *ngIf=\"tooltip\">[{{tooltip}}]</div>\n</pre>\n","import {Injectable} from '@angular/core';\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapAsciiRenderService extends AsciiRenderService {\n\n  constructor(asciiGeneratorService: AsciiGeneratorService) {\n\n    let directions = [\"top\", \"bottom\", \"left\", \"right\"]\n    super(asciiGeneratorService);\n    directions.forEach((dir) => {\n\n      this[dir + \"DoorTemplate\"] = \"${name}\";\n      this[dir + \"WallTemplate\"] = \" \";\n\n    })\n    this.leftBottomCornerTemplate = \" \";\n    this.rightBottomCornerTemplate = \" \";\n    this.leftTopCornerTemplate = \" \";\n    this.rightTopCornerTemplate = \" \";\n  }\n\n  renderPlayer(characterData: any) {\n    return \"@\"\n  }\n\n  renderCenter(zone, party): String {\n    let content = zone.content.toArray().filter(it => !it.destination)\n    if (party.player.location.x === zone.x && party.player.location.y === zone.y)\n      return \"@\";\n    else if (zone.x===party.level.exit.x &&zone.y===party.level.exit.y ) {\n      return \"€\"\n    }\n    else if (content.length > 0) {\n      if (content.toArray().filter(it => it.name === \"start\").length > 0)\n        return \"$\"\n\n      else\n        return content.toArray()[0].name\n    } else return \"+\"\n  }\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let doorName;\n    if (!door)\n      doorName = \" \"\n    else if (door.name != \"door\") {\n      doorName = door.name;\n    } else {\n      if (direction == 'TOP' || direction == \"BOTTOM\")\n        doorName = \"|\"\n      else\n        doorName = \"-\"\n    }\n\n    let data: any = {...this.defaultData, name: doorName};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderObj(obj: any, characterRenderData: any) {\n\n    if (obj.classname === \"KeyObjectZone\") {\n      return obj.name;\n    } else if (obj.name === \"player\") {\n      return \"¤\"\n    } else if (obj.name === \"exit\") {\n      return \"€\"\n    } else if (obj.name === \"start\") {\n      return \"$\"\n    }else if (obj.name === \"compass\") {\n      return \"%\"\n    }else if (obj.name === \"boussole\") {\n      return \"@\"\n    }\n    else if (obj.name === \"radar\") {\n      return \"®\"\n    }\n    else if (obj.name === \"map\") {\n      return \"#\"\n    } else {\n      return obj.name;\n    }\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiCharacterComponent} from \"./ascii-character/ascii-character.component\";\nimport {AsciiComponent} from \"./component/ascii.component\";\nimport {AsciiLineComponent} from \"./ascii-line/ascii-line.component\";\nimport {AsciiModalComponent} from \"./ascii-modal/ascii-modal.component\";\nimport {AsciiBorderComponent} from \"./ascii-border/ascii-border.component\";\nimport { AsciiButtonComponent } from './ascii-button/ascii-button.component';\nimport { BrowserModule} from '@angular/platform-browser';\nimport {AsciiGridModule} from \"./ascii-on-grid-div/ascii-grid.module\";\n\n@NgModule({\n  declarations: [\n    AsciiComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent,\n    AsciiCharacterComponent,\n  ],\n  exports: [\n    AsciiComponent,\n    AsciiCharacterComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiGridModule\n  ]\n})\nexport class AsciiModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, ReplaySubject, Subject} from \"rxjs\";\nimport {CharacterRenderData} from \"./render/character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  currentParty$: Subject<any> = new ReplaySubject<any>(1);\n  lastMessage$: Subject<any> = new ReplaySubject<any>(1);\n  characterDirection$: Subject<any> = new ReplaySubject<any>(1);\n  currentCharaRenderData$: Subject<CharacterRenderData> = new ReplaySubject<CharacterRenderData>(1);\n\n  constructor() {\n    this.characterDirection$.next('LEFT')\n    this.currentCharaRenderData$.next(new CharacterRenderData())\n  }\n\n  saveParty(party: { level: any }) {\n\n    this.currentParty$.next(party)\n  }\n\n  saveLastMessages(...messages: string[]) {\n\n    this.lastMessage$.next(messages[messages.length - 1])\n  }\n\n  getCurrentParty(): Observable<any> {\n    return this.currentParty$\n  }\n\n\n  saveCharacter(chardata: CharacterRenderData) {\n    this.currentCharaRenderData$.next(chardata)\n  }\n\n  saveCharacterDirection(direction) {\n    this.characterDirection$.next(direction)\n  }\n\n  getCurrentCharaRenderData() {\n    return this.currentCharaRenderData$\n  }\n\n  getPlayerDirection() {\n    return this.characterDirection$\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {take} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighscoresService  {\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public saveScore(player, score) {\n    let objectObservable = this.http.post(\"http://sarahbuisson-server-sample.herokuapp.com/score\", {\n      player: player,\n      score\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).pipe(take(1))\n      .subscribe(\n        data => console.log('success', data),\n        error => console.log('oops', error)\n      );\n    return objectObservable\n  }\n\n  public getScores() {\n    return this.http.get(\"http://sarahbuisson-server-sample.herokuapp.com/scores\");\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-labyrinth-form',\n  templateUrl: './new-labyrinth-form.component.html',\n  styles:[`\n    input {\n      width: ${CHARACTER_SPACING * 8}px\n    }\n\n\n    .grid {\n      max-width: ${CHARACTER_SPACING * 30}px;\n      display: grid;\n      grid-template-columns: 2fr ${CHARACTER_SPACING*9}px;\n      align-items: center;\n      text-align: center;\n    }\n  `]\n})\nexport class NewLabyrinthFormComponent implements OnInit {\n\n  size: Number = 5\n  playerName: string\n\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n\n  constructor(private labService: GenerateLabService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.size = params['size']?params['size']:5;\n    });\n  }\n\n  play(): void {\n    this.loadingModal.show()\n\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      setTimeout(() => resolve('done'), 5000);\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      this.labService.generate(this.size, this.playerName);\n      resolve({}); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n  emptyBoard(): void {\n    this.labService.generateEmpty(this.size);\n  }\n}\n","<div ascii-render class=\"container text background-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n\n  <h1 ascii-render class=\"text ihm-ui\">Level creation</h1>\n  <div class=\"grid\">\n    <span>\n    Labyrinth Size:\n    </span>\n    <div class=\"input--border\" ascii-render><input class=\"text\" [(ngModel)]=\"size\"></div>\n    <div></div>\n    <button ascii-render class=\"text important-ui\"\n            (click)=\"play()\">play\n    </button>\n  </div>\n\n\n</div>\n<app-ascii-modal #loadingModal>\n  <app-loading></app-loading>\n</app-ascii-modal>\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website-angular';\n}\n","<router-outlet></router-outlet>\n<ui-sound></ui-sound>\n<a href=\"https://github.com/sarahBuisson/labyrinth-game/actions\" class=\"text repository\">repository github</a>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {paperGridTemplate, mapGridTemplate} from \"../../service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinPathToJsView, parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n\nlet mapBorderData = paperGridTemplate;\n\n@Component({\n  selector: 'map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css'],\n  styles: [`\n    .title {\n      display: inline-flex;\n      flex-direction: column;\n      width: ${CHARACTER_SPACING * 3}px;\n      padding:${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n    .legend {\n        min-width: ${CHARACTER_SPACING * 10}px;\n    }`]\n})\nexport class MapViewComponent implements OnInit, OnChanges {\n\n\n  @Input()\n  currentParty: any\n  currentLevelProxy: any\n\n  @Input()\n  renderService: any\n\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n\n  borderData = mapBorderData\n  showMap: any;\n\n  constructor(public gameplayLabService: GameplayLabService) {\n  }\n\n  ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\n    console.log(\"update\")\n    console.log(this.currentParty)\n    this.updateFieldOfView();\n\n    console.log(this.currentLevelProxy)\n  }\n\n\n  ngOnInit(): void {\n    this.updateFieldOfView();\n  }\n\n  updateFieldOfView(): void {\n    this.currentLevelProxy = parseKotlinToJsView(this.currentParty.level, 4);\n  }\n\n  isStart(levelCase) {\n    let start = this.currentParty.level.start;\n    return start.x === levelCase.x && start.y === levelCase.y\n  }\n\n  isExit(levelCase) {\n    let exit = this.currentParty.level.exit;\n    return exit.x === levelCase.x && exit.y === levelCase.y\n  }\n\n  hasPlayer(levelCase) {\n    let location = this.currentParty.player.location;\n    return location.x === levelCase.x && location.y === levelCase.y\n  }\n\n  isCaseShowable(levelCase) {\n    if (this.rangeArroundPlayer < 0)\n      return true\n    let location = this.currentParty.player.location;\n    return (Math.abs(location.x - levelCase.x) <= this.rangeArroundPlayer\n      && Math.abs(location.y - levelCase.y) <= this.rangeArroundPlayer);\n  }\n\n  borderRendered(levelCase) {\n    let borderRendered = {...mapGridTemplate}\n    let directions: Array<String> = ['left', 'right', 'top', 'bottom'];\n\n    directions.forEach((direction: string) => {\n      let door = this.gameplayLabService.doorAt(levelCase, direction.toUpperCase())\n      borderRendered[direction + \"Class\"] = \"decor-ui\"\n      if (!!door) {\n        if (door.key) {\n          borderRendered[direction+ \"Template\"] = door.name\n          borderRendered[direction + \"Class\"] = \"interact-ui\"\n        } else {\n\n        }\n\n      } else {\n        console.log(\"nothing\")\n        borderRendered[direction + \"Template\"] = ' '\n      }\n    })\n    return borderRendered;\n  }\n\n\n  contentRendered(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(levelCaseInput);\n    if (content[0]) {\n\n      return this.renderService.renderObj(content[0])\n    } else {\n      let nbrOfConnections = levelCaseInput.connectedArray.length;\n      if (nbrOfConnections == 1) {\n        return \" \";\n      }\n      if (nbrOfConnections == 2) {\n        return \".\"\n      } else {\n        return \"+\"\n      }\n    }\n  }\n\n  computeClass(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(parseKotlinToJsView(levelCaseInput, 3))\n    if (content[0]) {\n      if (content[0].name === \"player\" || content[0].name === \"exit\") {\n        return \"important-ui\"\n      }\n    }\n    return \"ihm-ui\"\n  }\n}\n","<div ascii-render class=\"container decor-ui\"\n     [borderTemplate]=\"borderData\"\n>\n  <div class=\"row1\" *ngIf=\"currentLevelProxy\">\n    <div class=\"title text decor-ui\">\n      <div>M</div>\n      <div>A</div>\n      <div>P</div>\n      </div>\n    <div class=\"main asciiArt ihm-ui\"\n         [ngStyle]=\"{'grid-template-columns': 'repeat(auto-fill, '+ currentLevelProxy.contentArray[0].length + ')'}\">\n      <div class=\"row\" *ngFor=\"let row of currentLevelProxy.contentArray; let x = index \">\n        <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n          <ng-container *ngIf=\"isCaseShowable(levelCaseInput)\">\n            <div class=\"mapzone\"\n                 ascii-border\n                 xRepeat=\"1\"\n                 yRepeat=\"1\"\n                 [borderTemplate]=\"borderRendered(levelCaseInput)\"\n            ><span [ngClass]=\"computeClass(levelCaseInput)\">{{contentRendered(levelCaseInput)}}</span>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"legend text decor-ui\" ascii-border>\n    <span class=\"important-ui\">legend:</span>\n    <br/>\n    <div class=\"important-ui\"> ¤ = You are here</div>\n    <div class=\"important-ui\"> € = Exit</div>\n    <br/>\n    <div> A-Z = Locked door</div>\n    <div> a-z = keys</div>\n    <br/>\n    <div> | <br/>.+- = open path</div>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AsciiOnGridDivComponent} from \"./ascii-on-grid-div.component\";\nimport {AsciiInsideGridDivComponent} from \"./ascii-inside-grid.component\";\n\n\n\n@NgModule({\n  declarations: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],exports: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AsciiGridModule { }\n","import {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ElementRef, HostBinding,\n  Input, NgZone, OnDestroy,\n  OnInit, Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport * as borderTemplates from \"../../../labyrinth/service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\nimport {timer} from \"rxjs\";\nimport {delay} from \"rxjs/operators\";\nimport {Style} from \"@angular/cli/lib/config/schema\";\nimport {BorderTemplate} from \"../../../labyrinth/service/render/resources/border-compute\";\n\n@Component({\n  selector: 'ascii-border , [ascii-border] , div [ascii-render], span [ascii-render], button [ascii-render], p [ascii-render], h1 [ascii-render]',\n  templateUrl: './ascii-border.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./ascii-border.component.css']\n})\nexport class AsciiBorderComponent implements OnInit, AfterViewInit, AfterContentChecked, OnDestroy {\n\n  /**\n   * place the border on the outside of the div, making the div bigger\n   * put at false if you want the border on the inside, making the div the sameSize but compressing the content\n   */\n\n  @Input()\n  name?: string\n\n  @Input()\n  computeRenderEachTime?: boolean = undefined\n  haveAlreadyBeComputed: boolean = false\n\n  @Input()\n  contentClass: string\n\n  @Input()\n  xRepeat: number | undefined\n  xComputedRepeat: number = 0\n  @Input()\n  yRepeat: number | undefined\n  yComputedRepeat: number = 0\n\n  renders: {\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string\n  } = {}\n  borderClasses: {\n    default?: string,\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string,\n    topLeft?: string\n    topRight?: string\n    bottomLeft?: string\n    bottomRight?: string\n  } = {}\n\n  @Input()\n  borderTemplateName: string;\n\n  @Input()\n  borderTemplate: BorderTemplate;\n\n\n  computedData: {\n    computed?: string;\n\n    widthPx?: number;\n    heightPx?: number;\n\n    borderSizePx: {\n      top?: number,\n      bottom?: number,\n      left?: number,\n      right?: number\n    }\n  } = {borderSizePx: {}, computed: 'none'}\n\n  toClear: any[] = [];\n  @Input()\n  borderClick: any = () => {\n  }\n\n  @HostBinding(\"style\")\n get hostStyle(): CSSStyleDeclaration {\n    let hostStyle = {\n      border: 'solid transparent',\n      borderTopWidth: this.computedData.borderSizePx.top + 'px',\n      borderBottomWidth: this.computedData.borderSizePx.bottom + 'px',\n      borderRightWidth: this.computedData.borderSizePx.right + 'px',\n      borderLeftWidth: this.computedData.borderSizePx.left + 'px',\n      height: this.yRepeat ? (this.yRepeat * this.borderTemplate.leftSideHeight * LINE_HEIGHT) + 'px' : undefined,\n      width: this.xRepeat ? (this.xRepeat * this.borderTemplate.topSideWidth * CHARACTER_SPACING)+'px':undefined\n    } as CSSStyleDeclaration\n\n\n    return hostStyle;\n\n  }\n  @Input()\n  debug = false;\n\n  constructor(private readonly _changeDetectorRef: ChangeDetectorRef,\n              private hostRef: ElementRef,\n              private renderer: Renderer2,\n              private ngZone: NgZone) {\n\n  }\n\n  ngOnInit() {\n    try {\n      this.borderTemplateName = this.borderTemplateName || this.hostRef.nativeElement.nodeName\n      this.borderTemplate = this.borderTemplate || this.getAsciiBorderForName(this.borderTemplateName)\n\n      this.computeData();\n\n\n      if (this.computeRenderEachTime == undefined) {\n        this.computeRenderEachTime = true// this.hostRef.nativeElement.clientWidth ? false : true\n      }\n\n      if (this.xRepeat && this.yRepeat) {\n        this.computeBorderDimension()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  computeData() {\n    if (this.borderTemplate) {\n      this.computedData = {\n        ...this.computedData,\n        borderSizePx:\n          {\n            top: this.borderTemplate.topPartHeight * LINE_HEIGHT,\n            bottom: this.borderTemplate.bottomPartHeight * LINE_HEIGHT,\n            right: this.borderTemplate.rightPartWidth * CHARACTER_SPACING,\n            left: this.borderTemplate.leftPartWidth * CHARACTER_SPACING\n          }\n      }\n    }\n  }\n\n  @HostBinding('attr.dataComputed')\n  get compJson() {\n    return JSON.stringify(this.computedData)\n  }\n\n\n  /**\n   * return an array of counter\n   * @param size\n   */\n  counter(size): number[] {\n    let array = new Array<number>();\n    for (let i = 0; i < size; i++) {\n      array.push(i)\n    }\n    return array;//TODO check why dont work for modal: [...Array(size).keys()]\n  }\n\n  ngAfterViewInit() {\n    this.computeAndUpdateDimension();\n  }\n\n  private computeAndUpdateDimension() {\n    try {\n      if (this.computeBorderDimension()) {\n        this.ngZone.runOutsideAngular(() => {\n          let timeout = setTimeout(() => {\n            this._changeDetectorRef.detectChanges();\n\n            clearTimeout(timeout);\n          }, 100);\n          this.toClear.push(timeout);\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private computeBorderDimension(): boolean {\n    if (!this.computedData.borderSizePx.top)\n      this.computeData()\n\n\n    let mainElement = <HTMLElement>this.hostRef.nativeElement;\n\n    let height: number, width: number;\n    if (mainElement.clientWidth) {\n      height = mainElement.clientHeight// - this.computedData.borderTopSizePx - this.computedData.borderBottomSizePx\n      width = mainElement.clientWidth\n      this.computedData.computed = 'client'\n    } else if(mainElement.offsetWidth){\n      this.computedData.computed = 'offset' + mainElement.offsetWidth\n      height = mainElement.offsetHeight - this.computedData.borderSizePx.top - this.computedData.borderSizePx.bottom\n      width = mainElement.offsetWidth - this.computedData.borderSizePx.left - this.computedData.borderSizePx.right\n    }else{\n      this.computedData.computed = 'none'\n      return false;\n    }\n    if (isNaN(height) || isNaN(width)) {\n      console.warn(\"no dimension \" + height + \" \" + width)\n      return false;\n    }\n\n    const hostHaveChanged = this.computedData.widthPx != width || this.computedData.heightPx != height;\n\n    let shouldCompute = (width || this.xRepeat) && (height || this.yRepeat) && hostHaveChanged && (this.computeRenderEachTime || !this.haveAlreadyBeComputed);\n\n    if (shouldCompute) {\n      this.computedData.widthPx = width;\n      this.computedData.heightPx = height;\n      let oldX = this.xComputedRepeat;\n      let oldY = this.yComputedRepeat\n      if (this.yRepeat != undefined) {\n        this.yComputedRepeat = this.yRepeat;\n      } else {\n        this.yComputedRepeat = Math.floor(height / (LINE_HEIGHT * this.borderTemplate.leftSideHeight));\n      }\n      if (this.xRepeat != undefined) {\n        this.xComputedRepeat = this.xRepeat;\n      } else {\n        this.xComputedRepeat = Math.floor(width / (CHARACTER_SPACING * this.borderTemplate.topSideWidth));\n      }\n\n      let allDataPresent = this.xComputedRepeat && this.yComputedRepeat;\n      let computedDataHaveChange = oldX != this.xComputedRepeat || oldY != this.yComputedRepeat;\n      if (allDataPresent && computedDataHaveChange) {\n        try {\n\n          let splitTop = this.borderTemplate.topTemplate.split(\"\\n\")\n          let splitBottom = this.borderTemplate.bottomTemplate.split(\"\\n\")\n\n          let counterX = this.counter(this.xComputedRepeat);\n          let counterY = this.counter(this.yComputedRepeat);\n\n\n          this.renders = {\n            top: splitTop.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n            bottom: splitBottom.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n            left: counterY.map((i) => this.borderTemplate.leftTemplate).join('\\n'),\n            right: counterY.map((i) => this.borderTemplate.rightTemplate).join('\\n')\n          }\n          this.haveAlreadyBeComputed = true;\n          return true;\n        } catch (e) {\n          console.error(e);\n          return true;\n        }\n      }\n    }\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.computeRenderEachTime || this.haveAlreadyBeComputed)\n      this.ngZone.runOutsideAngular(() => {\n        let timeout=setTimeout(() => {\n          try {\n            this.computeAndUpdateDimension()\n            clearTimeout(timeout);\n          } catch (e) {\n            console.error(e);\n          }\n        }, 100);\n        this.toClear.push(timeout)\n      });\n  }\n\n\n  getAsciiBorderForName(name: string): BorderTemplate {\n\n    if (Object.keys(borderTemplates).includes(name + 'GridTemplate'))\n      return borderTemplates[name + 'GridTemplate']//TODO : we need to test the include otherwise it bug\n\n    if (Object.keys(borderTemplates).includes(name))\n      return borderTemplates[name]//TODO : we need to test the include otherwise it bug\n\n    if (name === 'BUTTON') {\n      return borderTemplates.defaultButtonBorderTemplate;\n    }\n    if (name === 'DIV') {\n      return borderTemplates.defaultGridTemplate;\n    }\n    if (name === 'H1') {\n      return borderTemplates.defaultTitleBorderTemplate;\n    }\n    return borderTemplates.defaultGridTemplate;\n  }\n\n  styleOfPart(directions: string[]) {\n    let style: any = {position: 'absolute', top: 0, left: 0}\n    directions.forEach(dir => {\n      if (dir === 'left') {\n        style.left = -this.computedData.borderSizePx.left + 'px';\n        style.width = this.computedData.borderSizePx.left + 'px';\n      }\n      if (dir === 'right') {\n        style.width = this.computedData.borderSizePx.right + 'px';\n        style.right = -this.computedData.borderSizePx.right + 'px';\n        style.left = undefined;\n        //style.marginRight = -this.computedData.borderSizePx.right + 'px';\n        //style.top = '0px';\n        /* if (directions.length === 1) {\n           style.top = this.computedData.borderSizePx.top + 'px';\n         }*/\n      }\n      if (dir === 'top') {\n        style.top = -this.computedData.borderSizePx.top + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n      }\n      if (dir === 'bottom') {\n        style.bottom = -this.computedData.borderSizePx.bottom + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n        style.top = undefined;\n      }\n    })\n    return style;\n  }\n\n  ngOnDestroy(): void {\n\n    this.toClear.forEach((timeout)=>{\n\n      clearTimeout(timeout)\n    })\n  }\n}\n\n","<ng-content></ng-content>\n\n\n<ng-container *ngIf=\"debug\">\n  <span>\n  <div class=\"debug top left\"></div>\n  <div class=\"debug top right\"></div>\n  <div class=\"debug bottom left\"></div>\n  <div class=\"debug bottom right\"></div>\n    </span>\n</ng-container>\n\n<div class=\"asciiArt border-part top left\"\n      style=\"display: inline-block;position: absolute;\"\n      [ngStyle]=\"styleOfPart(['top','left'])\"\n      [ngClass]=\"borderClasses.topLeft||borderClasses.default\">{{borderTemplate.topLeftTemplate}}</div>\n\n  <div\n    class=\"asciiArt border-part top\"\n    [ngClass]=\"borderClasses.top||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top'])\"\n    (click)=\"this.borderClick('TOP',$event)\"\n  >{{renders.top}}</div>\n\n  <div\n    class=\"asciiArt border-part top right\"\n    [ngClass]=\"borderClasses.topRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top','right'])\"\n  >{{borderTemplate.topRightTemplate}}</div>\n\n\n  <div class=\"asciiArt rightSide\"\n        [ngClass]=\"borderClasses.right||borderClasses.default\"\n        [ngStyle]=\"styleOfPart(['right'])\"\n        (click)=\"this.borderClick('RIGHT',$event)\">{{renders.right}}</div>\n\n\n\n\n<div class=\"asciiArt border-part leftSide\" [ngClass]=\"borderClasses.left||borderClasses.default\"\n     *ngIf=\"yComputedRepeat>0\"\n     style=\"position: absolute;\"\n     [ngStyle]=\"styleOfPart(['left'])\"\n     (click)=\"this.borderClick('LEFT',$event)\"\n>{{renders.left}}</div>\n\n\n<div class=\"borderBottom\"\n\n></div>\n    <div\n      class=\"asciiArt border-part bottom left\"\n      [ngStyle]=\"styleOfPart(['bottom','left'])\"\n      [ngClass]=\"borderClasses.bottomLeft||borderClasses.default\"\n    >{{borderTemplate.bottomLeftTemplate}}</div>\n  <div\n    (click)=\"this.borderClick('BOTTOM',$event)\"\n    *ngIf=\"xComputedRepeat>0\"\n    class=\"asciiArt border-part bottom\"\n    [ngClass]=\"borderClasses.bottom||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom'])\"\n  >{{renders.bottom}}</div>\n  <div\n    class=\"asciiArt border-part bottom right\"\n    [ngClass]=\"borderClasses.bottomRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom','right'])\"\n  >{{borderTemplate.bottomRightTemplate}}</div>\n\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CharacterFormComponent} from './characterEditor/character-form/character-form.component';\nimport {NewLabyrinthFormComponent} from './labyrinth/new-form/new-labyrinth-form.component';\nimport {MenuComponent} from './labyrinth/menu/menu.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AsciiModule} from \"./utils/ascii/ascii.module\";\nimport {LabyrinthGameModule} from \"./labyrinth/game-view/labyrinth-game.module\";\nimport { SoundComponent } from './utils/ui/atom/sound/sound.component';\nimport { MusicViewComponent } from './music-view/music-view.component';\nimport {MusicModule} from \"./music-view/music.module\";\nimport { AsciiGalleryComponent } from './ascii-gallery/ascii-gallery.component';\nimport { LoadingComponent } from './labyrinth/loading/loading.component';\nimport {LoadingModule} from \"./labyrinth/loading/loading.module\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharacterFormComponent,\n    NewLabyrinthFormComponent,\n    MenuComponent,\n    SoundComponent,\n    AsciiGalleryComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AsciiModule,\n    LabyrinthGameModule,\n    MusicModule, LoadingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\n\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {CharacterRenderData} from \"./character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract  class AsciiRenderService {\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService) {\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate:string=\"TODO\"\n\n  bottomDoorTemplate:string=\"TODO\"\n  leftDoorTemplate:string=\"TODO\";\n  rightDoorTemplate:string=\"TODO\";\n  leftWallTemplate:string=\"TODO\"\n  rightWallTemplate:string=\"TODO\";\n\n  topWallTemplate:string=\"TODO\";\n\n  bottomWallTemplate:string=\"TODO\";\n\n  leftBottomCornerTemplate :string=\"TODO\";\n  rightBottomCornerTemplate:string=\"TODO\";\n\n  leftTopCornerTemplate:string=\"TODO\";\n  rightTopCornerTemplate:string=\"TODO\";\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let data: any = {...this.defaultData, name: door && door.name != \"door\" ? door.name : \" \"};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderCorner(dir1: string, dir2: string) {\n    let templateName = dir2.toLowerCase() + this.capitalize(dir1.toLowerCase()) + \"CornerTemplate\";\n    let data = this.defaultData\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n\n  }\n\n  capitalize(s) {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n  abstract renderPlayer(characterData: CharacterRenderData)\n\n  abstract renderCenter(zone, party): String\n\n  abstract renderObj(obj: any, characterRenderData: CharacterRenderData)\n}\n","export class BorderTemplate {\n  topTemplate = \"\";\n  bottomTemplate = \"\";\n  leftTemplate = \"\";\n  rightTemplate = \"\";\n  topLeftTemplate = \"\";\n  topRightTemplate = \"\";\n  bottomLeftTemplate = \"\";\n  bottomRightTemplate = \"\";\n  leftPartWidth = 1;\n  topSideWidth = 1;\n  topPartHeight = 1;\n  leftSideHeight = 1;\n  rightPartWidth = 1;\n  bottomPartHeight = 1;\n}\n\n\nexport function asciiStringToGridObject(str, leftCornerWidth, topSideWidth,\n                                        leftCornerHeight, leftSideHeight): BorderTemplate {\n  try {\n    let templates = new BorderTemplate();\n\n    let strR = str.split(\"\\n\")\n\n    for (let y = 0; y < leftCornerHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.topLeftTemplate += strR[y][x]\n      }\n      templates.topLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.topTemplate += strR[y][x]\n      }\n      templates.topTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.topRightTemplate += strR[y][x]\n      }\n      templates.topRightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight; y < leftCornerHeight + leftSideHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.leftTemplate += strR[y][x]\n      }\n      templates.leftTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.rightTemplate += strR[y][x]\n      }\n      templates.rightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight + leftSideHeight; y < strR.length; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.bottomLeftTemplate += strR[y][x]\n      }\n      templates.bottomLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.bottomTemplate += strR[y][x]\n      }\n\n      templates.bottomTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.bottomRightTemplate += strR[y][x]\n      }\n      templates.bottomRightTemplate += \"\\n\"\n    }\n    Object.keys(templates).forEach((k) => {\n        if (templates[k].slice) {\n          if(templates[k].endsWith(\"\\n\"))\n            templates[k] = templates[k].slice(0, -1);\n          //add a space at the end so the template with \\n have the same length than the other\n          if ((k != 'bottomTemplate' && k != 'topTemplate')) {\n            templates[k] += \" \"\n          }\n        }\n      }\n    )\n    let topRightFirstLine = templates.topRightTemplate.split(\"\\n\")[0];\n    let borderTemplate = {\n      ...templates,\n      leftPartWidth: leftCornerWidth,\n      topSideWidth,\n      leftSideHeight,\n      rightPartWidth: topRightFirstLine.length + ( templates.topRightTemplate.includes('\\n') ? 1 : 0),\n      topPartHeight: leftCornerHeight,\n      bottomPartHeight: templates.bottomLeftTemplate.split(\"\\n\").length,\n    } as BorderTemplate;\n\n\n\n    return borderTemplate;\n  } catch (e) {\n    console.error(e)\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {SoundService} from \"../../../../labyrinth/service/sound/sound.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'ui-sound',\n  templateUrl: './sound.component.html',\n  styleUrls: ['./sound.component.css']\n})\nexport class SoundComponent implements OnInit, OnDestroy {\n  soundOn: boolean;\n  on = '' +\n    '           __ \\n' +\n    ' ((\\'c\\') < d d \\n';\n  //≮\n  off = '' +\n    '            _ \\n' +\n    ' ((\\'x\\') ° (d) \\n';\n\n  constructor(private soundService: SoundService) {\n\n    this.soundService.subscribeSoundOn((data) => {\n\n      this.soundOn = data;\n    })\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  toogle() {\n    this.soundService.toogleSound();\n  }\n}\n","<div ascii-border (click)=\"toogle()\" class=\"asciiArt\">\n  <div app-ascii *ngIf=\"soundOn\" tooltip=\"mute\" [content]=\"on\" ></div>\n  <div app-ascii *ngIf=\"!soundOn\" tooltip=\"music\" [content]=\"off\"></div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styles: [`\n    .container {\n        max-width: ${CHARACTER_SPACING * 16 * 4}px;\n        min-width: ${CHARACTER_SPACING * 10 * 4}px;\n        min-height: ${LINE_HEIGHT * 6 * 4}px;\n        text-align: center;\n        padding: ${LINE_HEIGHT}px ${CHARACTER_SPACING}px;\n    }\n\n    .content {\n\n    }\n    ul {\n        text-align: left;\n    }\n\n  `]\n})\nexport class LoadingComponent implements OnInit {\n\n  currentLoadingMessage: number = 0;\n  maxNumberOfMessage: number = 6;\n\n  constructor(public fullViewRenderService: FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  clickDuringLoading() {\n    this.currentLoadingMessage = Math.floor( this.maxNumberOfMessage*Math.random())\n    console.log( this.currentLoadingMessage )\n  }\n\n}\n","<div ascii-render\n     class=\"container text background-ui\"\n     borderTemplateName=\"loadingBorderGridTemplate\">\n  <h1 ascii-render class=\"ihm-ui\"> Labyrinth generating ...</h1>\n  <br/>\n\n\n  <div class=\"content ihm-ui\" ascii-border>\n    <div>Do you know it ? ({{currentLoadingMessage}}/{{maxNumberOfMessage}})</div>\n<br/>\n    <ng-container  *ngIf=\"currentLoadingMessage===0\">\n      Find the ladder to the exit to win.\n      <div app-render class=\"asciiArt\">{{fullViewRenderService.renderObj({name: 'exit'})}}</div>\n    </ng-container >\n\n    <ng-container *ngIf=\"currentLoadingMessage===1\">\n      You can move by :\n      <ul>\n        <li>clicking on the room you want to go</li>\n        <li>clicking on the door you want to use</li>\n        <li>using directional key</li>\n        <li>using the pad at the bottom of the screen</li>\n      </ul>\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===2\">\n      some door are closed and need a key to be open\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===3\">\n      You have a map\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===4\">\n      <div>The lab didn't really take that much time to generate.</div>\n      <div>The dev just wanted a way to give tips to player.</div>\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===5\">All labyrinths always have a solution\n    </ng-container>\n    <br/>\n    <div>\n      <button ascii-render (click)=\"clickDuringLoading()\">next advice</button>\n    </div>\n  </div>\n\n\n</div>\n","export const CHARACTER_FONT_SIZE = 12;\nexport const LINE_HEIGHT = 14;\nexport const CHARACTER_HEIGHT = 8;\nexport const CHARACTER_SPACING = 9;\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {\n  viewEmptyZones\n} from \"../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n@Component({\n  selector: 'level-view',\n  templateUrl: './level-view.component.html',\n  styles: [`\n    .levelRowRender {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, ${CHARACTER_SPACING * 30}px);\n    grid-template-rows: repeat(auto-fit, ${LINE_HEIGHT * 15}px);\n  }\n  `]\n})\nexport class LevelViewComponent implements OnInit, OnChanges {\n\n  @Input()\n  currentParty: any\n\n  constructor(public gameplayLabService: GameplayLabService,\n              public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\n    this.updateFieldOfView();\n  }\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n  fieldOfView: Array<Array<any>>;\n\n  ngOnInit(): void {\n    this.updateFieldOfView();\n  }\n\n  public updateFieldOfView() {\n    if (this.rangeArroundPlayer === -1) {\n      this.fieldOfView = this.currentParty.level.content;\n    } else {\n      this.fieldOfView = new Array();\n      let location = this.currentParty.player.location;\n      for (let dy = -this.rangeArroundPlayer; dy <= this.rangeArroundPlayer; dy++) {\n        this.fieldOfView[this.rangeArroundPlayer + dy] = new Array();\n        for (let dx = -this.rangeArroundPlayer; dx <= this.rangeArroundPlayer; dx++) {\n\n          let x: number = 0 + location.x + dx;\n          let y: number = 0 + location.y + dy;\n          let ix = 0 + this.rangeArroundPlayer + dx;\n          let iy = 0 + this.rangeArroundPlayer + dy;\n\n          let zone = this.currentParty.level.getXY(x, y)\n          this.fieldOfView[iy][ix] = zone\n        }\n      }\n    }\n  }\n\n\n  emptyRendered(x, y) {\n\n    let dx = x + this.currentParty.player.location.x\n    let dy = y + this.currentParty.player.location.y\n\n    let index = (dx + dy) % viewEmptyZones.length;\n    let borderTemplate = viewEmptyZones[index];\n    return borderTemplate;\n  }\n}\n","<div class=\"levelRender\" >\n  <div class=\"levelRowRender\" *ngFor=\"let row of fieldOfView; let x = index \">\n    <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n      <ng-container *ngIf=\"!!levelCaseInput&& levelCaseInput.content.toArray().length>0; else backgroundZone\">\n        <app-zone-view [zone]=\"levelCaseInput\"> </app-zone-view>\n      </ng-container>\n      <ng-template #backgroundZone>\n        <div app-ascii class=\"zone outside background-ui\"\n        [content]=\"emptyRendered(x,y)\"\n        >\n        </div>\n      </ng-template>\n    </ng-container>\n  </div>\n</div>\n","import {Component, HostListener, OnDestroy, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {DataStorageService} from \"../../service/data-storage.service\";\n\n@Component({\n  selector: 'keypad-form',\n  templateUrl: './keypad-form.component.html',\n  styleUrls: ['./keypad-form.component.css']\n})\nexport class KeypadFormComponent implements OnInit, OnDestroy {\n  message: string = \"use keyword to move or click on destination, use enter or click to grab object\\n\";\n  subscription: any;\n\n  constructor(private gameplayLabService: GameplayLabService, private dataService: DataStorageService) {\n\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.dataService.lastMessage$.subscribe((m) => {\n      this.message = m\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.gameplayLabService.takeAll();\n    }\n    if (event.key === 'ArrowUp') {\n      this.gameplayLabService.move('TOP');\n    }\n    if (event.key === 'ArrowDown') {\n      this.gameplayLabService.move('BOTTOM');\n    }\n    if (event.key === 'ArrowLeft') {\n      this.gameplayLabService.move('LEFT');\n    }\n    if (event.key === 'ArrowRight') {\n      this.gameplayLabService.move('RIGHT');\n    }\n  }\n\n  take(): void {\n    this.gameplayLabService.takeAll();\n  }\n}\n","<div app-ascii>\n  <div>&nbsp;&nbsp;&nbsp;&nbsp;+---+   </div>\n  <div>\n    <span>&nbsp;&nbsp;&nbsp;&nbsp;|</span>\n    <span class=\"key\" (click)=\"move('TOP')\">/^\\</span>\n    <span>|  </span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('LEFT')\"><<-</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('BOTTOM')\" >\\V/</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('RIGHT')\">->></span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"take()\">Prendre</span>\n    <span>|</span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div> {{message}}</div>\n  </div>\n","import {\n  Component, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Component({\n  selector: '[app-ascii-on-grid-div]',\n  template: `\n    <div class=\"grid-content\"\n         [ngStyle]=\"{gridTemplateRows: gridRow, gridTemplateColumns: gridColumn}\">\n      <ng-content></ng-content>\n    </div>`,\n  styles: [\n    ` .grid-content {\n         display: inline-grid;\n         grid-auto-flow: row dense;\n         grid-template-rows: repeat(auto-fill, ${LINE_HEIGHT}px);\n         grid-template-columns: repeat(15, ${CHARACTER_SPACING}px);\n    }`\n  ]\n})\nexport class AsciiOnGridDivComponent implements OnInit {\n\n  public gridColumn: string;\n\n\n  public gridRow: string;\n  @Input()\n  public width: string = 'auto-fit';\n\n  @Input()\n  public height: string | undefined;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.gridColumn = 'repeat(' + this.width + ', ' + CHARACTER_SPACING + ')';\n    if (this.height)\n      this.gridRow = 'repeat(' + this.width + ', ' + CHARACTER_HEIGHT + ')';\n  }\n\n}\n","import {Component, OnInit, Input, OnChanges} from '@angular/core';\nimport {compositionUtils, harmoniqueUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-partition-view',\n  template: `<span *ngIf=\"!partitionForms\" class=\"text\">no partition</span>\n  <div class=\"vertical musicForm\" *ngFor=\"let form of partitionForms\" [style]=\"{borderColor:borderColor}\">\n    <ng-container *ngIf=\"isPattern(form) \">\n      <app-temp-view *ngFor=\"let note of form\" [temp]=\"note\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"isNote(form) \">\n      <app-temp-view [temp]=\"form\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"!isNote(form)&&!isPattern(form) \">\n      <app-partition-view [partitionForms]=\"form\" [initscale]=\"scale\"></app-partition-view>\n    </ng-container>\n  </div> `\n  ,\n  styleUrls: ['./partition-view.component.css']\n})\nexport class PartitionViewComponent implements OnInit, OnChanges {\n  @Input()\n  partitionForms: Array<any>;\n  @Input()\n  initscale: any\n  scale: any;\n  borderColor: string\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.borderColor = '#' + Math.round(Math.random() * 9) + Math.round(Math.random() * 9) + Math.round(Math.random() * 9)\n  }\n\n  ngOnChanges(): void {\n    if (this.initscale)\n      this.scale = this.initscale\n    else if (this.partitionForms) {\n      let tunes = compositionUtils.flatPartition(this.partitionForms).map((n) => n.tune)\n      this.scale = harmoniqueUtils.getSuroundingTunes(tunes).sort((a, b) => harmoniqueUtils.getLevel(b) - harmoniqueUtils.getLevel(a));\n    }\n  }\n\n\n  isPattern(form: any) {\n    return Array.isArray(form) && !Array.isArray(form[0])\n\n  }\n\n  isNote(form: any) {\n    return !Array.isArray(form)\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\n\n\nexport class CharacterRenderData {\n  eye: String = \"'\";\n  hair: String = \"(\";\n  torso: String = \"M\";\n  hat: String = \"_--_\";\n  leg: String = \"d\";\n}\n\nexport class TemplateAnimation {\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterRenderService {\n\n  constructor(private asciiGeneratorService: AsciiGeneratorService) {\n    this.bodyPartsKey = Object.keys(this.defaultData)\n    this.templateRight = this.asciiGeneratorService.reverseTemplate(this.templateLeft, this.bodyPartsKey)\n  }\n\n  public bodyPartsKey: Array<String>\n\n  templateLeft: String =\n    \"${hat}\\n\" +\n    \"${hair}${eye}${eye} ${hairReversed}${hairReversed}\\n\" +\n    \" /${torso} \\\\ \\n\" +\n    \"  ${leg}${leg}  \\n\";\n\n  templateFront: String =\n    \"${hat}\\n\" +\n    \"${hair} ${eye}${eye} ${hairReversed}\\n\" +\n    \" / ${torso}\\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n\n  templateBack: String =\n    \"${hat}\\n\" +\n    \"${hair}${hair}${hair}${hairReversed}${hairReversed}${hairReversed}\\n\" +\n    \" /  \\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n  templateRight: String\n  defaultData: CharacterRenderData = Object.assign(new CharacterRenderData(), {\n    eye: \"'\",\n    hair: \"(\",\n    torso: \"M\",\n    hat: \" _--_ \",\n    leg: \"d\"\n  })\n\n\n  render(data: CharacterRenderData, direction = 'LEFT') {\n\n    let template;\n    switch (direction) {\n      case 'LEFT':\n        template = this.templateLeft;\n        break;\n      case 'RIGHT':\n        template = this.templateRight;\n        break;\n      case 'TOP':\n        template = this.templateBack;\n        break;\n      case 'BOTTOM':\n        template = this.templateFront;\n        break;\n      default:\n        template = this.templateLeft;\n        break;\n    }\n    return this.asciiGeneratorService.templateString(template, {...data, ...this.asciiGeneratorService.reverseData(data)})\n\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {exitTemplate, startTemplate} from \"./resources/border\";\nimport {DataStorageService} from \"../data-storage.service\";\nimport {Subscription} from \"rxjs\";\nimport {CharacterRenderData, CharacterRenderService} from \"./character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullsizeAsciiRenderService extends AsciiRenderService implements OnDestroy {\n  private dirSub: Subscription;\n  private playerRenderDataSub: Subscription;\n  private playerDirection: String;\n  private playerRenderData: CharacterRenderData;\n\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService,\n              private dataStorageService: DataStorageService,\n              private characterRenderService: CharacterRenderService) {\n    super(asciiGeneratorService);\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n    this.dirSub = this.dataStorageService\n      .getPlayerDirection()\n      .subscribe((c) => this.playerDirection = c);\n    this.playerRenderDataSub = this.dataStorageService\n      .getCurrentCharaRenderData()\n      .subscribe((c) => this.playerRenderData = c)\n\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate = \"-------------------\\n\" +\n    \"\\n\" +\n    \"    \\\\¨¨¨¨¨¨¨¨¨/\\n\" +\n    \"     \\\\   ${name}   /\\n\" +\n    \"______\\\\${closedTop}/______\"\n\n  bottomDoorTemplate = \"¨¨¨¨¨¨/${closedBottom}\\\\¨¨¨¨¨¨\\n\" +\n    \"     /   ${name}   \\\\\\n\" +\n    \"    /_________\\\\\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n  leftDoorTemplate = \" |   |\\n\" +\n    \" ||\\\\ |\\n\" +\n    \" || \\\\|\\n\" +\n    \" ||  \\\\\\n\" +\n    \" || ${name}${closedLeft}\\n\" +\n    \" ||  ${closedLeft}\\n\" +\n    \" |'---\\n\" +\n    \" |   |\"\n  rightDoorTemplate;\n  leftWallTemplate = \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\";\n  rightWallTemplate;\n\n  topWallTemplate = \"-------------------\\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \"___________________\"\n\n  bottomWallTemplate = \"¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n\n  leftBottomCornerTemplate = \" |   /\\n\" +\n    \" |  / \\n\" +\n    \" | /  \\n\" +\n    \" |/   \\n\" +\n    \" '----\";\n  rightBottomCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftBottomCornerTemplate, this.partsKeys)\n\n\n  leftTopCornerTemplate = \" +----\\n\" +\n    \" |\\\\   \\n\" +\n    \" | \\\\  \\n\" +\n    \" |  \\\\ \\n\" +\n    \" |   \\\\\"\n  rightTopCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftTopCornerTemplate, this.partsKeys)\n\n\n  renderPlayer(characterData, direction = undefined) {\n    return this.characterRenderService.render(characterData, direction)\n  }\n\n  renderCenter(zone, party): String {\n    return \"\\n\\n\" + zone.content.toArray().filter(it => it.className !== \"DoorObjectZone\").map((it) => \"[\" + it.name + \"]\");\n  }\n\n\n  renderObj(obj: any) {\n\n    if (obj.name === 'exit')\n      return exitTemplate\n    if (obj.name === 'start')\n      return startTemplate\n    if (obj.name === 'player')\n      return this.renderPlayer(this.playerRenderData, this.playerDirection)\n    if (obj.type === \"key\")\n      return `(${obj.name})--±`\n    if (obj.name === \"boussole\")\n      return `(;)`\n    if (obj.name === \"radar\")\n      return `(®)`\n    if (obj.name === \"map\")\n      return `/#/`\n    if (obj.name === \"compas\")\n      return `%/`\n    return `[${obj.name}]`\n  }\n\n  ngOnDestroy(): void {\n\n    this.dirSub.unsubscribe();\n    this.playerRenderDataSub.unsubscribe();\n  }\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit, ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CHARACTER_SPACING} from \"../AsciiConst\";\n\n@Component({\n  selector: 'app-ascii-character',\n  templateUrl: './ascii-character.component.html',\n  styleUrls: ['./ascii-character.component.css'],\n\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AsciiCharacterComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  @Input()\n  content: any;\n\n  @Input()\n  tooltip: string;\n\n  xRepeat: number = 1\n\n  @ViewChild('contentDiv') contentDiv: ElementRef\n\n  constructor(  private readonly _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    if((<HTMLElement>this.contentDiv.nativeElement))\n    this.xRepeat =  Math.ceil((<HTMLElement>this.contentDiv.nativeElement).getBoundingClientRect().width / CHARACTER_SPACING)\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.ngAfterViewInit();\n  }\n\n}\n","<div [ngStyle]=\"{'column-span':this.xRepeat}\">\n  <span #contentDiv app-ascii class=\"content\"\n             [tooltip]=\"tooltip\"\n             [content]=\"content\"></span>\n</div>\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\n\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport {MapAsciiRenderService} from \"../service/render/map-ascii-render.service\";\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {DataStorageService} from \"../service/data-storage.service\";\nimport {GameplayLabService} from \"../service/gameplay-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-labyrinth-game',\n  templateUrl: './labyrinth-game.component.html',\n  styleUrls: ['./labyrinth-game.component.css'],\n\n  styles: [`\n    .container {\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 4}px;\n      grid-template-rows: ${LINE_HEIGHT * 45}px ${LINE_HEIGHT * 8}px;\n      grid-template-areas:\n    \"main sidebar\"\n    \"toolbar toolbar\";\n      margin-left: auto;\n      margin-right: auto;\n      width: ${CHARACTER_SPACING * 110}px;\n      overflow-x: hidden;\n    }\n    .menuBar {  display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-items: center;\n    }\n    .toolbar {\n      z-index: 100;\n      grid-area: toolbar;\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 6}px 1fr;\n    }\n\n    .noPartyMessage {\n      padding: ${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n  `]\n})\nexport class LabyrinthGameComponent implements OnInit, OnDestroy {\n  currentParty: any\n  currentLevel: any\n  currentPlayerProxy: any\n  @ViewChild('level-view') levelView:LevelViewComponent;\n  @ViewChild('winModal') winModal:AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal;\n  score: any;\n  private subscriptionCurrentParty: Subscription;\n\n  constructor(private labService: GenerateLabService,\n              private dataStorageService: DataStorageService,\n              private gameplayLabService: GameplayLabService,\n              public fullViewRenderService: FullsizeAsciiRenderService,\n              public mapRenderService: MapAsciiRenderService,\n              private router: Router,\n              private soundService: SoundService) {\n  }\n\n  ngOnInit(): void {\n\n    this.subscribeCurrentParty()\n    this.soundService.playGameMusic()\n  }\n\n  subscribeCurrentParty(): any {\n    this.subscriptionCurrentParty = this.dataStorageService.getCurrentParty()\n      .subscribe((nextParty) => {\n\n          this.currentParty = {...nextParty}\n          if (nextParty) {\n            this.currentLevel = this.currentParty.level\n            this.currentPlayerProxy = parseKotlinToJsView(this.currentParty.player,3)\n            console.log(nextParty)\n            console.log(\"update\")\n            if (this.currentParty.status.name$ == \"WIN\") {\n              this.winModal.show()\n            }\n            this.score =  this.gameplayLabService.computePartieScore();\n          }\n        }\n      )\n    return this.currentParty\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  take() {\n    this.gameplayLabService.takeAll();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionCurrentParty.unsubscribe();\n  }\n\n  nextLevel(): void {\n    this.loadingModal.show();\n    this.winModal.hide();\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      setTimeout(() => resolve('done'), 5000);\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      resolve(this.labService.generate( (parseInt(this.score.size)+1), this.currentParty.player.name)); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n}\n\n","<div class=\"menuBar text\" ascii-border borderTemplateName=\"doubleGridTemplate\">\n  <span>LAB GENERATOR </span>\n  <button ascii-render class=\"ihm-ui\"><a href=\"./menu\" class=\"interact-ui text\">menu</a></button>\n  <button ascii-render class=\"ihm-ui\"><a href=\"./new\" class=\"interact-ui text\">new Labyrinth</a></button>\n  <span></span>\n</div>\n<div class=\"noPartyMessage\" *ngIf=\"!currentParty\">\n  <div ascii-border class=\"text interact-ui\">no game loaded for the moment, please wait or create a new game\n    <button class=\"ihm-ui\" ascii-border><a class=\"text interact-ui\" href=\"./new\">new game</a></button>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"currentParty\">\n  <div class=\"mainArea\">\n    <level-view [currentParty]=\"currentParty\"\n                [rangeArroundPlayer]=\"1\"\n    ></level-view>\n  </div>\n  <div class=\"sidebar\">\n\n    <app-sliding\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'-100%'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-81px)',\n       left:'100%'}\"\n      [slideOnlyOnClick]=\"true\"\n      style=\"background-color:red; overflow: hidden;\"\n    >\n      <map-view [currentParty]=\"currentParty\"\n                [renderService]=\"mapRenderService\"\n      ></map-view>\n\n\n    </app-sliding>\n\n    <app-sliding\n      slideOnlyOnClick=\"true\"\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'50%',\n      bottom:'0'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-27px)',\n       left:'-100%',\n          bottom:'0'}\">\n      <div class=\"inventoryArea\">\n        <inventory-view\n          [player]=\"this.currentPlayerProxy\"\n        ></inventory-view>\n      </div>\n    </app-sliding>\n\n  </div>\n  <div class=\"toolbar\">\n    <div class=\"gameplay\">\n      <keypad-form></keypad-form>\n    </div>\n    <div class=\"inventoryArea\">\n\n    </div>\n  </div>\n  <app-ascii-modal #winModal class=\"text\">\n    <div ascii-border  class=\"background-ui\">\n    <h1 ascii-border  class=\" text important-ui\"> YOU WIN !</h1>\n    <span app-ascii>{{fullViewRenderService.renderObj({name: 'exit'})}}</span>\n    <span app-ascii>\n      {{fullViewRenderService.renderObj(this.currentParty.player)}}\n    </span>\n\n\n    <div ascii-border xRepeat=\"40\">\n      <div>total size:{{this.score.size}}</div>\n      <div>total number of room:{{this.score.numberOfRooms}}</div>\n      <div>minimum solution:{{this.score.solutionLength}} m</div>\n      <div>total number of wrong exit:{{this.score.numberOfCulDeSac}}</div>\n      <div>total walked distance:{{this.score.numberOfSteps}} m</div>\n      <div></div>\n      <div>total score:{{this.score.score}}</div>\n    </div>\n    <button ascii-border class=\"important-ui\" (click)=\"nextLevel()\">next level</button>\n    </div>\n  </app-ascii-modal>\n\n  <app-ascii-modal #loadingModal>\n    <app-loading></app-loading>\n  </app-ascii-modal>\n\n\n</div>\n","import {Injectable} from '@angular/core';\nimport {GenerateLabService} from \"./generate-lab.service\";\nimport {getFromKotlin, parseKotlinPathToJsView, parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport * as gameRules from \"gameRules\";\nimport {DataStorageService} from \"./data-storage.service\";\nimport findKey from 'lodash/findKey';\nimport {SoundService} from \"./sound/sound.service\";\n\n// @ts-ignore\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameplayLabService {\n  currentParty: any;\n  currentPartyProxy: any;\n  gameplay: any;\n\n  constructor(private serviceLabService: GenerateLabService, private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    dataStorageService\n      .getCurrentParty()\n      .subscribe((party) => {\n        this.currentParty = party;\n        this.currentPartyProxy = parseKotlinToJsView(party,7);\n      })\n    this.gameplay = gameRules.fr.perso.labyrinth.labeat\n\n  }\n\n  move(direction: string) {\n    this.dataStorageService.saveCharacterDirection(direction);\n    let connectionsMap = this.currentPartyProxy.player.location.connectionsMap\n    let nextLocation = connectionsMap[direction];\n    console.log(nextLocation)\n    if (nextLocation) {\n      console.log(\"next\")\n      let door = this.currentParty.player.location.content.toArray()\n        .find(it => {\n          let proxy = parseKotlinToJsView(it, 2)\n          return proxy.destination\n          && it.destination.x === nextLocation.x\n          && it.destination.y === nextLocation.y})\n\n      if (door) {\n        console.log(\"door\")\n        let interaction = this.play(door);\n        console.log(interaction)\n        if (interaction.result==\"Success\") {\n          this.soundService.playMove()\n          return false;\n        } else {\n          this.soundService.playNo()\n          return true;\n        }\n\n      }\n\n    }\n  }\n\n  take(objToTake) {\n    this.dataStorageService.saveCharacterDirection('LEFT');\n    this.currentParty.player.location.content.toArray()//getJsViewFromKotlin(this.currentParty, \"player\", \"location\", \"content\")\n      .filter(it => it.name === objToTake.name)\n      .forEach((it) => {\n        if(this.play(it).result == \"Success\"){\n          this.soundService.playTake()}\n\n      })\n\n  }\n\n  takeAll() {\n    this.currentParty.player.location.content.toArray()\n      .filter(it => it.type != \"door\")\n      .forEach((it) => {\n        this.take(it)\n      })\n  }\n\n  private play(obj): any {\n    let interactionResult = this.gameplay.playerInteractWith(this.currentParty, obj);\n    this.dataStorageService.saveParty(this.currentParty)\n    this.dataStorageService.saveLastMessages(parseKotlinPathToJsView(interactionResult, \"messages\"))\n    return interactionResult;\n\n  }\n\n\n  levelContent(levelCase) {\n    let content = parseKotlinPathToJsView(levelCase,\"content\");\n\n    return content.filter(it => !this.isDoor(it))\n  }\n\n  private isDoor(it) {\n    return it.destination !== undefined\n  }\n\n  doorAt(levelCase, direction: string): any | undefined {\n    let destination = parseKotlinPathToJsView(levelCase, \"connections\")[direction]\n    if (destination) {\n      return parseKotlinPathToJsView(levelCase, \"content\")\n        .filter(obj => {\n          let doorDestination = parseKotlinPathToJsView(obj, 'destination');\n          return doorDestination && doorDestination.x === destination.x && doorDestination.y === destination.y;\n        })[0]\n    }\n  }\n\n\n  moveAtCase(levelCase: any):boolean {\n    let connectionsMap = this.currentPartyProxy.player.location.connectionsMap\n    let direction = findKey(connectionsMap, (it) => {\n      return it && it.x === levelCase.x && it.y === levelCase.y\n    })\n    if (direction) {\n      return this.move(direction)\n    }\n    return false;\n  }\n\n  hasPlayer(levelCase: any) {\n    return parseKotlinPathToJsView(levelCase,\"content\")\n      .find(p => {\n        return p.type === \"player\"\n      });\n  }\n\n  computePartieScore() {\n    return this.gameplay.computePartieScore(this.currentParty)\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n  abcGridTemplate,\n  mapGridTemplate, paperGridTemplate,\n  viewEmptyZoneGridTemplates\n} from \"../labyrinth/service/render/resources/border\";\nimport * as gameRules from \"gameRules\"\n@Component({\n  selector: 'app-ascii-gallery',\n  templateUrl: './ascii-gallery.component.html',\n  styleUrls: ['./ascii-gallery.component.css']\n})\nexport class AsciiGalleryComponent implements OnInit {\n  emptyZone: any\n  defaultZone: any\n  display = false\n  abc: any = abcGridTemplate;\n  outsideZone: any = viewEmptyZoneGridTemplates[0];\n  parchemin: any = paperGridTemplate;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    console.log(\"ngOnInit\")\n    try {\n      let emptyParty = gameRules.fr.perso.labyrinth.labeat.generation.initPartieEmpty(3, \"empty\");\n      this.emptyZone = emptyParty.level.content.toArray()[0].toArray()[0]\n      this.defaultZone = emptyParty.level.content.toArray()[1].toArray()[1]\n      this.defaultZone = gameRules.fr.perso.labyrinth.labeat.generation.initPartieMapLabWithKey(4, \"key\").level.content.toArray()[0].toArray()[1]\n    } catch (e) {\n      console.log(e)\n    }\n    console.log(this.emptyZone)\n    console.log(this.defaultZone)\n  }\n\n  toggle(): void {\n    this.display = !this.display;\n  }\n}\n","<span (click)=\"toggle()\" class=\"text\"> toggle galery</span>\n<app-zone-view [zone]=\"defaultZone\"> </app-zone-view>\n<app-zone-view [zone]=\"emptyZone\"> </app-zone-view>\n\n\n<div *ngIf=\"display\">\n  <app-loading></app-loading>\n  <inventory-view [player]=\"{inventoryArray:defaultZone.content.toArray()}\"></inventory-view>\n\n\n  <span ascii-border><span class=\"text\">text</span>\n    <span class=\"asciiArt\">art</span></span>\n\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'bigspan'\" class=\"text\">button</button>\n\n  <br/>\n  <br/>\n  <br/>\n  <br/>\n  <span ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\">X</span>\n  <input ascii-render value=\"inputAlone\"/>\n  <br/><br/>\n  <div style=\"display: inline-block\" ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\"><input value=\"inputDiv\"></div>\n  <br/><br/>\n  <br/><br/>\n\n  <span ascii-render [name]=\"'bigspan'\" class=\"text\">spon</span>\n  <br/>\n  <h1 ascii-render [name]=\"'bigspan'\" class=\"text\">H1</h1>\n\n  <br/>\n  <br/>\n  <span ascii-render [name]=\"'new'\" class=\"text\">SPA LABYRINTH</span>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\">BTN LABYRINTH</button>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\"><span app-ascii [content]=\"'BTN \\nLABYRINTH'\"></span></button>\n  <br/>\n  <br/>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render class=\"asciiArt\">button</button>\n  <br/>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\">text div</div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\" [borderTemplate]=\"parchemin\"><span app-ascii\n                                                                                      [content]=\"'div \\nmulti\\n line'\"></span>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n line'\"></span></div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n with content'\"></span>\n    <span ascii-render [name]=\"'bigspan'\" class=\"text\">span</span>\n\n    <div ascii-render> another div</div>\n  </div>\n  <br/>\n  <input ascii-render [defaultValue]=\"'input'\"/>\n  <div style=\"width:300px\">\n    <p> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz hiehfozehfnhoif zz</p>\n    <p ascii-render> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz\n      hiehfozehfnhoif zz</p>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"asciiArt\" borderTemplateName=\"paper\">div</div>\n\n\n</div>\n\n\n\n<!-- -->\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {CharacterFormComponent} from \"./characterEditor/character-form/character-form.component\";\nimport {NewLabyrinthFormComponent} from \"./labyrinth/new-form/new-labyrinth-form.component\";\nimport {LabyrinthGameComponent} from \"./labyrinth/game-view/labyrinth-game.component\";\nimport {MenuComponent} from \"./labyrinth/menu/menu.component\";\nimport {MusicViewComponent} from \"./music-view/music-view.component\";\nimport {AsciiGalleryComponent} from \"./ascii-gallery/ascii-gallery.component\";\n\nconst routes: Routes = [{path: 'character', component: CharacterFormComponent},\n  {path: 'new', component: NewLabyrinthFormComponent},\n  {path: 'menu', component: MenuComponent},\n  {path: 'game', component: LabyrinthGameComponent},\n  {path: 'music', component: MusicViewComponent},\n  {path: 'ascii', component: AsciiGalleryComponent},\n  {path: '**', redirectTo: '/menu'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {compositionUtils, chooseNoteUtils, Note, utils, selector, harmoniqueUtils} from \"music-generator\";\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameMusiqueService {\n\n  constructor() {\n  }\n\n  gameDeprimanteMusicRandom(): any {\n    function choseNoteFromRandomNWhoRespect(sizeOfChoice) {\n      let chooseNoteWhoRespect = (note: string, possibilites: Array<string>, filters: Array<(n1: string, n2: string) => boolean>) => {\n        const values = possibilites.filter((newNote) => {\n          return filters.every((f) => {\n            return f.bind(this)(note, newNote)\n          })\n        });\n        return utils.randomFromArray(values.slice(0, sizeOfChoice));\n      }\n      return chooseNoteWhoRespect;\n    }\n\n    let chooseNoteWhoRespect = choseNoteFromRandomNWhoRespect(3);\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  menuDeprimanteMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstTuneWhoRespect;\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  gameMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getRandomFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n  menuMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n\n  generateMusicDeprimante(chooseNoteWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytme = utils.shuffle([[\"4n\", \"4n\"], [\"4n\", \"4n\"], [\"4n\", \"4n.\"]]);\n\n    mainRhytme[0] = [\"4n\"].concat(mainRhytme[0])\n    mainRhytme[2] = mainRhytme[2].concat([\"4n.\"])\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 4))\n    let mainTheme = compositionUtils.fillPatternWithNoteDescendantes(firstNoteTheme, mainRhytme, mainNotes, chooseNoteWhoRespect);\n\n\n    let firstNoteIntro = utils.randomFromArray(mainNotes.slice(0, 4).filter(n => firstNoteTheme != n))\n\n    let intro = compositionUtils.fillPatternWithNoteDescendantes(firstNoteIntro, mainRhytme, mainNotes, chooseNoteWhoRespect);\n    let beforeLastNoteIntro = compositionUtils.flatPartition(intro).reverse()[1].tune\n\n    let lastNoteIntro = chooseNoteWhoRespect(firstNoteTheme, mainNotes, [selector.isConsonnanteOf, (n, n2) => {\n      return selector.isConsonnanteOf(n2, beforeLastNoteIntro)\n    }])\n    compositionUtils.flatPartition(intro).reverse()[0].tune = lastNoteIntro;\n\n    let variation1 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune), chooseNoteWhoRespect);\n    let variation2 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune && n != variation1[0].tune), chooseNoteWhoRespect);\n\n\n    let conclusion = compositionUtils.fillWithNotesRespecting(mainNotes.filter(n => n != mainTheme.reverse()[0].tune && n != variation1.reverse()[0].tune && n != variation2.reverse()[0].tune), mainRhytme, mainTheme[0][0].tune, chooseNoteWhoRespect);\n\n    let form = [intro, mainTheme, variation1, mainTheme, variation2, mainTheme, conclusion]\n    let partition = compositionUtils.flatPartition(form)\n\n    return partition\n\n  }\n\n\n  generateMusicAngoissante(chooseNoteWhoRespect=chooseNoteUtils.getRandomFromBestsWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytmePart1 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"4n\", \"4n\", \"4n\"]]).slice(0, 2);\n    let mainRhytmePart2 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"8n\", \"8n\", \"8n\", \"8n\", \"4n\",],]).slice(0, 2);\n    ;\n    //mainRhytmePart1[0] = [\"4n\"].concat(mainRhytmePart1[0])\n    //mainRhytmePart1[2] = mainRhytmePart1[2].concat([\"8n\", \"4n\"])\n    let mainRhytme = mainRhytmePart1.concat(mainRhytmePart2)\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 3))\n\n    let lastNotePreviousPattern = firstNoteTheme\n    let mainThemePart1;\n    try {\n      let previousPattern = [null, new Note(firstNoteTheme, \"\"), null]\n      mainThemePart1 = mainRhytmePart1.map((pattern, indexP) => {\n        let firstNote = previousPattern.length > 2 ? utils.randomFromArray(previousPattern.slice(1, -1)).tune : utils.randomFromArray(harmoniqueUtils.getTunesBeetween(previousPattern[0].tune, previousPattern[1].tune))\n        let maxNoteIndex = Math.round((indexP + pattern.length * 2) * mainNotes.length / (mainRhytmePart1.length + pattern.length * 2));\n        let firstNoteIndex = mainNotes.findIndex((n) => n === firstNote)\n        let currentNotes = mainNotes.slice(firstNoteIndex, maxNoteIndex);\n        let result = compositionUtils.fillWithNotesRespecting2(currentNotes, pattern, lastNotePreviousPattern, [selector.isDescendanceOf, selector.isDiffOf], chooseNoteWhoRespect);\n        compositionUtils.insertResolutionAtEndIfNeed(result, mainNotes, chooseNoteWhoRespect);\n        lastNotePreviousPattern = harmoniqueUtils.getTuneAt(harmoniqueUtils.getLevel(result[0].tune) - 1)\n        previousPattern = result;\n        return result;\n      })\n    } catch (e) {\n      console.error(e)\n      console.error(\"fail create main theme\")\n    }\n\n    //  let mainThemePart1 = fillWithNotesRespecting(mainNotes, mainRhytmePart1, firstNoteTheme, [isInIntervalConsonnance(-1), isInIntervalDegres(6, 3), isDiffOf], chooseNoteWhoRespect);\n    let flatMainThemePart1 = compositionUtils.flatPartition(mainThemePart1);\n    let noteFromPart1 = harmoniqueUtils.getSuroundingTunes(flatMainThemePart1.map(n => n.tune));\n    let noteForPart2 = noteFromPart1.slice(noteFromPart1.length / 4, -noteFromPart1.length / 4)\n    //noteForPart2 = mainNotes.concat(getSuroundingTunes(noteForPart2));\n    if (noteForPart2.length < 2) {\n      console.error(\"not enought note\")\n    }\n\n    let mainThemePart2 = utils.shuffle(mainThemePart1).map((pattern: Array<Note>) => {\n      let shufflePattern = utils.shuffle(pattern)\n      let rythme = compositionUtils.flatPartition(shufflePattern).map(n => n.value);\n      let newPattern = compositionUtils.fillWithRandomNote([rythme], noteForPart2)\n      compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(newPattern), noteForPart2, chooseNoteWhoRespect)\n      return newPattern;\n\n    });\n\n\n    let mainTheme = mainThemePart1.concat(mainThemePart2)\n    let mainThemeNotes = compositionUtils.flatPartition(mainTheme).map(n => n.tune);\n\n\n    let intro = compositionUtils.fillWithNotesRespecting(harmoniqueUtils.getSuroundingTunes(mainThemePart1[0].map(n => n.tune)), mainRhytmePart2, utils.randomFromArray(mainThemeNotes), [selector.isInIntervalDegres(-3, 3)]);\n    compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(intro), mainNotes, chooseNoteWhoRespect)\n    let flatIntro = compositionUtils.flatPartition(intro);\n\n\n    let noteForVariation = harmoniqueUtils.getSuroundingTunes((utils.last(mainThemePart1) as Array<Note>).map(n => n.tune))\n    let variation1 = utils.shuffle(mainThemePart2).map(pattern => compositionUtils.fillWithRandomNote(compositionUtils.flatPartition(pattern).map(n => n.value), noteForVariation))\n\n    let variation2 = (utils.shuffle(variation1))\n\n\n    let conclusion;\n    try {\n      conclusion = compositionUtils.fillWithNotesRespecting(mainThemeNotes,\n        mainRhytmePart2,\n        utils.last(compositionUtils.flatPartition(variation2)).tune,\n        [selector.isConsonnanteOf, selector.isDiffOf]);\n    } catch (e) {\n      console.log(e)\n    }\n\n\n    let form = [intro, mainThemePart1, mainThemePart2, mainThemePart1, variation1, mainThemePart1, variation2, mainThemePart1, mainThemePart2, conclusion]\n\n\n    return form\n\n  }\n\n\n  moveMusic() {\n    return [new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\")];\n  }  noMusic() {\n    return [new Note(\"C3\", \"8n\"),new Note(\"B3\", \"8n\")];\n  }\n\n  takeMusic() {\n    return  [new Note(\"C3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"G3\", \"8n\")];;\n  }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n\n@NgModule({\n  declarations: [LoadingComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n\n  ],\n    exports: [LoadingComponent]\n})\nexport class LoadingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport {mu} from \"kotlin-logging\";\n\nmu.KotlinLoggingConfiguration.LOG_LEVEL = mu.KotlinLoggingLevel.ERROR;\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}