{"version":3,"sources":["webpack:///src/app/music-view/music.module.ts","webpack:///src/app/labyrinth/service/sound/sound.service.ts","webpack:///src/app/labyrinth/menu/menu.component.ts","webpack:///src/app/labyrinth/menu/menu.component.html","webpack:///src/app/labyrinth/game-view/labyrinth-game.module.ts","webpack:///src/app/music-view/partition-view/temp-view/temp-view.component.ts","webpack:///src/app/music-view/partition-view/temp-view/temp-view.component.html","webpack:///src/app/music-view/music-view.component.ts","webpack:///src/app/music-view/music-view.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-inside-grid.component.ts","webpack:///src/app/utils/ascii/ascii-line/ascii-line.component.ts","webpack:///src/app/utils/ascii/ascii-line/ascii-line.component.html","webpack:///src/app/utils/ascii/ascii-button/ascii-button.component.ts","webpack:///src/app/labyrinth/service/render/resources/border.ts","webpack:///src/app/labyrinth/service/generate-lab.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.ts","webpack:///src/app/labyrinth/game-view/level-view/zone-view/zone-view.component.html","webpack:///src/app/utils/ui/atom/sliding/sliding.component.ts","webpack:///src/app/utils/ui/atom/sliding/sliding.component.html","webpack:///src/app/characterEditor/character-form/character-form.component.ts","webpack:///src/app/characterEditor/character-form/character-form.component.html","webpack:///src/app/labyrinth/service/sound/tone.service.ts","webpack:///src/app/labyrinth/game-view/inventory-view/inventory-view.component.ts","webpack:///src/app/labyrinth/game-view/inventory-view/inventory-view.component.html","webpack:///src/app/utils/ascii/ascii-modal/ascii-modal.component.ts","webpack:///src/app/utils/ascii/ascii-modal/ascii-modal.component.html","webpack:///src/app/utils/ascii/ascii-generator.service.ts","webpack:///src/app/utils/ascii/component/ascii.component.ts","webpack:///src/app/utils/ascii/component/ascii.component.html","webpack:///src/app/labyrinth/service/render/map-ascii-render.service.ts","webpack:///src/app/utils/ascii/ascii.module.ts","webpack:///src/app/labyrinth/service/data-storage.service.ts","webpack:///src/app/labyrinth/service/highscores.service.ts","webpack:///src/app/labyrinth/new-form/new-labyrinth-form.component.ts","webpack:///src/app/labyrinth/new-form/new-labyrinth-form.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/labyrinth/game-view/map-view/map-view.component.ts","webpack:///src/app/labyrinth/game-view/map-view/map-view.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-grid.module.ts","webpack:///src/app/utils/ascii/ascii-border/ascii-border.component.ts","webpack:///src/app/utils/ascii/ascii-border/ascii-border.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/labyrinth/service/render/ascii-render.service.ts","webpack:///src/app/labyrinth/service/render/resources/border-compute.ts","webpack:///src/app/utils/ui/atom/sound/sound.component.ts","webpack:///src/app/utils/ui/atom/sound/sound.component.html","webpack:///src/app/labyrinth/loading/loading.component.ts","webpack:///src/app/labyrinth/loading/loading.component.html","webpack:///src/app/utils/ascii/AsciiConst.ts","webpack:///src/app/labyrinth/game-view/level-view/level-view.component.ts","webpack:///src/app/labyrinth/game-view/level-view/level-view.component.html","webpack:///src/app/labyrinth/game-view/keypad-form/keypad-form.component.ts","webpack:///src/app/labyrinth/game-view/keypad-form/keypad-form.component.html","webpack:///src/app/utils/ascii/ascii-on-grid-div/ascii-on-grid-div.component.ts","webpack:///src/app/music-view/partition-view/partition-view.component.ts","webpack:///src/app/labyrinth/service/render/character-render.service.ts","webpack:///src/app/labyrinth/service/render/fullsize-ascii-render.service.ts","webpack:///src/app/utils/ascii/ascii-character/ascii-character.component.ts","webpack:///src/app/utils/ascii/ascii-character/ascii-character.component.html","webpack:///src/app/labyrinth/game-view/labyrinth-game.component.ts","webpack:///src/app/labyrinth/game-view/labyrinth-game.component.html","webpack:///src/app/labyrinth/service/gameplay-lab.service.ts","webpack:///src/app/ascii-gallery/ascii-gallery.component.ts","webpack:///src/app/ascii-gallery/ascii-gallery.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/labyrinth/service/sound/game-musique.service.ts","webpack:///src/app/labyrinth/loading/loading.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MusicModule","declarations","exports","imports","SoundService","gameMusiqueService","toneService","soundOnSubject$","soundOn$","pipe","previousValue","forcedValue","soundOn","console","warn","mute","toneHaveBeenInitialized","document","querySelector","addEventListener","start","log","forceSoundOn","error","menuInstrument","Synth","gameInstrument","generateGameMusic","generateMenuMusic","soundInstrument","toDestination","volume","value","moveSound","moveMusic","takeSound","takeMusic","noSound","noMusic","observer","subscribe","tryNTimes","menuMusic","createLoop","menuMusicRandom","gameMusic","gameMusicRandom","numberOfTry","callback","e","play","playAmbiantMusic","newMusic","instrument","currentAmbiance","loop","stop","ambiantInstrument","music","next","dispose","providedIn","partition","tempo","flatpartition","flatPartition","timeC","part","time","note","decalage","duration","triggerAttackRelease","tune","map","now","i","forEach","n","playNote","MenuComponent","router","highscoresService","soundService","subscriptionHighscores","getScores","scores","highscores","playMove","newFormModal","show","navigateByUrl","characterFormModal","subs","saveScore","name","Math","random","unsubscribe","playMenuMusic","clickNew","clickCharacter","saveHighScore","clickMusic","selector","templateUrl","styles","highScoreModal","loadingModal","LabyrinthGameModule","TempViewComponent","scale","temp","minWidth","width","display","color","styleUrls","MusicViewComponent","musiqueService","changeMusic","currentPart","currentInstrument","newPartition","clear","createInstrument","currentMusicPartition","pause","AsciiInsideGridDivComponent","contentSplited","content","child","textContent","split","gridColumn","length","gridRow","HTMLElement","hostStyle","AsciiLineComponent","size","line","AsciiButtonComponent","defaultButtonBorderTemplate","template","paperRaw","paperGridTemplate","paperExitRaw","paperExitGridTemplate","mapZoneRaw","mapGridTemplate","abcRaw","abcGridTemplate","defaultBorderRaw","defaultGridTemplate","doubleBorderRaw","doubleGridTemplate","buttonBorderRaw","titleBorderRaw","defaultTitleBorderTemplate","loadingBorderRaw","loadingBorderGridTemplate","viewCloseDoorZoneRaw","viewOpenDoorZoneRaw","viewWallZoneRaw","defaultZoneCornerWidth","defaultZoneSideWidth","defaultZoneCornerHeight","defaultZoneSideHeight","viewCloseDoorGridTemplate","viewEmptyZoneRawOld","viewEmptyZoneRawOld2","viewEmptyZoneRaw3","viewEmptyZoneRaw4","viewWallZoneRaw2","viewEmptyDeepZoneRaw","viewEmptyDeepOmbreZoneRaw","viewEmptyDeepWaterZoneRaw","viewEmptySpikeZoneRaw","viewEmptyObstructedZoneRaw","viewObstructed2lZoneRaw","viewObstructed3lZoneRaw","viewEmptyZoneRaw5","viewEmptyZoneGridTemplate","viewEmptyZones","viewEmptyZoneGridTemplates","z","viewOpenDoorGridTemplate","viewWallGridTemplate","exitTemplate","startTemplate","bagRaw","handRaw","bigHandRaw","otherHandRaw","bagGridTemplate","inventoryBox","inventoryBoxGridTemplate","labeatGeneration","perso","labyrinth","labeat","generation","GenerateLabService","dataStorageService","generateSpirale","playerName","party","initPartieMapLabWithKey","saveParty","level","connectAllZoneOfBoard","generateEmptyBoard","initPartieSpiral","environment","production","backgroundTemplate","shuffle","ZoneViewComponent","gameplayLabService","renderService","clickOnBorder","direction","event","hasPlayer","zone","move","preventDefault","clickOnZone","takeObj","obj","take","moveAtCase","borderRendered","directions","door","doorAt","toUpperCase","key","replace","computeTooltip","x","y","renderObj","destination","inventory","levelContent","defaultData","top","bottom","left","right","marginTop","marginBottom","marginLeft","marginRight","position","transform","generateStyle","dataName","tokenStyle","generateDefaultParams","SlidingComponent","openData","closeData","slideOnlyOnClick","isOpen","ngOnChanges","$event","params","open","close","toggle","mouseOver","mouseLeave","click","onAnimationEvent","animations","CharacterFormComponent","dataStorage","ngZone","data","render","saveCharacter","update","initCharacterRotation","runOutsideAngular","interval","setInterval","rotate","clearInterval","ToneService","InventoryViewComponent","_renderService","borderDatas","player","AsciiModalComponent","_show","closable","AsciiGeneratorService","reverseChar","str","partsKey","row","reversedRow","filter","s","word","includes","reverse","join","endsWith","ret","reverseString","_","AsciiComponent","asciiClass","tooltip","MapAsciiRenderService","asciiGeneratorService","dir","leftBottomCornerTemplate","rightBottomCornerTemplate","leftTopCornerTemplate","rightTopCornerTemplate","characterData","it","location","exit","templateName","toLowerCase","doorName","nameReversed","closedLeftReversed","closedLeft","closedTop","closedBottom","templateString","characterRenderData","classname","freezone","model","KeyObjectZone","AsciiModule","DataStorageService","currentParty$","currentPartyView$","lastMessage$","characterDirection$","currentCharaRenderData$","gameplay","JSON","parse","toJson","chardata","HighscoresService","http","score","objectObservable","post","headers","get","NewLabyrinthFormComponent","labService","route","subscriptions","queryParams","timer","Promise","resolve","setTimeout","generate","all","then","hide","generateEmpty","AppComponent","title","mapBorderData","MapViewComponent","rangeArroundPlayer","borderData","changes","currentParty","updateFieldOfView","levelCase","abs","levelCaseInput","nbrOfConnections","connected","AsciiGridModule","AsciiBorderComponent","_changeDetectorRef","hostRef","renderer","computeRenderEachTime","undefined","haveAlreadyBeComputed","xComputedRepeat","yComputedRepeat","renders","borderClasses","computedData","borderSizePx","computed","toClear","borderClick","debug","border","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","height","yRepeat","borderTemplate","leftSideHeight","xRepeat","topSideWidth","borderTemplateName","nativeElement","nodeName","getAsciiBorderForName","computeBorderTemplateData","computeBorderDimension","topPartHeight","bottomPartHeight","rightPartWidth","leftPartWidth","stringify","array","Array","push","computeAndUpdateDimension","timeout","detectChanges","clearTimeout","mainElement","clientWidth","clientHeight","offsetWidth","offsetHeight","isNaN","hostHaveChangedX","widthPx","hostHaveChangedY","heightPx","shouldComputeX","shouldComputeY","oldX","floor","allDataPresent","computedDataHaveChange","counterX","counter","splitTop","topTemplate","splitBottom","bottomTemplate","l","oldY","counterY","leftTemplate","rightTemplate","Object","keys","style","changeDetection","OnPush","contentClass","compJson","AppModule","providers","bootstrap","AsciiRenderService","partsKeys","topDoorTemplate","bottomDoorTemplate","leftDoorTemplate","rightDoorTemplate","leftWallTemplate","rightWallTemplate","topWallTemplate","bottomWallTemplate","reverseTemplate","dir1","dir2","capitalize","charAt","slice","BorderTemplate","topLeftTemplate","topRightTemplate","bottomLeftTemplate","bottomRightTemplate","asciiStringToGridObject","leftCornerWidth","leftCornerHeight","templates","strR","k","topRightFirstLine","SoundComponent","on","off","subscription","subscribeSoundOn","toogleSound","toogle","LoadingComponent","fullViewRenderService","currentLoadingMessage","maxNumberOfMessage","clickDuringLoading","CHARACTER_FONT_SIZE","LINE_HEIGHT","CHARACTER_HEIGHT","CHARACTER_SPACING","LevelViewComponent","fieldOfView","dy","dx","ix","iy","index","KeypadFormComponent","dataService","message","m","takeAll","handleKey","AsciiOnGridDivComponent","PartitionViewComponent","borderColor","round","initscale","partitionForms","tunes","getSuroundingTunes","sort","a","b","getLevel","form","isArray","CharacterRenderData","eye","hair","torso","hat","leg","TemplateAnimation","CharacterRenderService","templateLeft","templateFront","templateBack","assign","bodyPartsKey","templateRight","reverseData","FullsizeAsciiRenderService","characterRenderService","dirSub","getPlayerDirection","c","playerDirection","playerRenderDataSub","getCurrentCharaRenderData","playerRenderData","className","DoorObjectZone","renderPlayer","type","AsciiCharacterComponent","contentDiv","ceil","getBoundingClientRect","ngAfterViewInit","LabyrinthGameComponent","mapRenderService","subscribeCurrentParty","playGameMusic","subscriptionCurrentParty","getCurrentPartyView","nextParty","status","winModal","computePartieScore","parseInt","levelView","GameplayLabService","serviceLabService","getCurrentParty","currentPartyProxy","saveCharacterDirection","interactionResult","playerInteractWithJson","saveLastMessages","toJsonInteraction","messages","result","playNo","objToTake","playTake","isDoor","connections","doorDestination","find","p","AsciiGalleryComponent","abc","outsideZone","parchemin","emptyParty","initPartieEmpty","emptyZone","defaultZone","toArray","routes","path","component","redirectTo","AppRoutingModule","forRoot","GameMusiqueService","choseNoteFromRandomNWhoRespect","sizeOfChoice","chooseNoteWhoRespect","possibilites","filters","values","newNote","every","f","bind","randomFromArray","generateMusicDeprimante","getFirstTuneWhoRespect","getRandomFromBestsWhoRespect","generateMusicAngoissante","getFirstFromBestsWhoRespect","mainNotes","getNNextDescendante","mainRhytme","concat","firstNoteTheme","mainTheme","fillPatternWithNoteDescendantes","firstNoteIntro","intro","beforeLastNoteIntro","lastNoteIntro","isConsonnanteOf","n2","variation1","variation2","conclusion","fillWithNotesRespecting","mainRhytmePart1","mainRhytmePart2","lastNotePreviousPattern","mainThemePart1","previousPattern","pattern","indexP","firstNote","getTunesBeetween","maxNoteIndex","firstNoteIndex","findIndex","currentNotes","fillWithNotesRespecting2","isDescendanceOf","isDiffOf","insertResolutionAtEndIfNeed","getTuneAt","flatMainThemePart1","noteFromPart1","noteForPart2","mainThemePart2","shufflePattern","rythme","newPattern","fillWithRandomNote","insertDisconnanceAndResolutionAtEnd","mainThemeNotes","isInIntervalDegres","flatIntro","noteForVariation","last","LoadingModule","KotlinLoggingConfiguration","LOG_LEVEL","KotlinLoggingLevel","ERROR","bootstrapModule","err","webpackEmptyAsyncContext","req","Error","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MusicViewComponent} from \"./music-view.component\";\nimport {PartitionViewComponent} from \"./partition-view/partition-view.component\";\nimport {TempViewComponent} from \"./partition-view/temp-view/temp-view.component\";\nimport {AsciiModule} from \"../utils/ascii/ascii.module\";\n\n\n@NgModule({\n  declarations: [MusicViewComponent, PartitionViewComponent, TempViewComponent],\n  exports: [\n    PartitionViewComponent\n  ],\n  imports: [\n    CommonModule,\n    AsciiModule\n  ]\n})\nexport class MusicModule {\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, Subject, Subscription} from \"rxjs\";\nimport {scan} from \"rxjs/operators\";\nimport {GameMusiqueService} from \"./game-musique.service\";\n\nimport * as tone from \"tone\";\nimport {compositionUtils, rhythmUtils, Note, instrumentUtils} from \"music-generator\"\nimport {ToneService} from \"./tone.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundService implements OnDestroy {\n\n  soundOnSubject$: Subject<boolean> = new BehaviorSubject<boolean>(false);\n  soundOn$ = this.soundOnSubject$.pipe(scan((previousValue, forcedValue) => {\n\n\n    let soundOn = forcedValue ? forcedValue : !previousValue;\n    if (!soundOn) {\n      console.warn(\"mute\")\n      tone.Destination.mute = true;\n\n    } else {\n      console.warn(\"unmute\")\n      tone.Destination.mute = false;\n    }\n    this.soundOn = soundOn;\n    return soundOn\n  }));\n\n  private soundOn: boolean;\n  private toneHaveBeenInitialized: boolean = false;\n\n\n  private gameMusic: tone.Part;\n  private menuMusic: tone.Part;\n  private currentAmbiance: tone.Part;\n\n  private moveSound: any;\n  private noSound: any;\n  private takeSound: any;\n  private ambiantInstrument: tone.Synth<any>;\n  private menuInstrument: tone.Synth<any>;\n  private gameInstrument: tone.Synth<any>;\n  private soundInstrument: tone.Synth<any>;\n\n  subscribeSoundOn(observer): Subscription {\n    return this.soundOn$.subscribe(observer)\n  }\n\n  constructor(private gameMusiqueService: GameMusiqueService, private toneService:ToneService) {\n    // document.body.addEventListener(\"mousemove\", () => this.soundOnSubject$.next(true), {once: true})\n\n\n    document.querySelector('body') && document.querySelector('body').addEventListener('click', async () => {\n      if (tone && !this.toneHaveBeenInitialized) {\n        this.toneService.start();\n        //this.currentAmbiance.volume-=10\n        console.log('audio is ready');\n        this.forceSoundOn()\n        this.toneHaveBeenInitialized = true;\n        tone.Transport.start()\n      } else if (this.toneHaveBeenInitialized) {\n        console.log(\"audio already ready\")\n      } else {\n\n        console.error('audio not ready')\n      }\n    });\n\n\n    this.menuInstrument = toneService.Synth();\n\n    this.gameInstrument =toneService.Synth();\n    this.generateGameMusic();\n    this.generateMenuMusic();\n    this.soundInstrument = toneService.Synth();\n    this.gameInstrument.toDestination();\n    this.menuInstrument.toDestination();\n    this.soundInstrument.toDestination();\n    this.soundInstrument.volume.value -= 35\n    this.moveSound = this.gameMusiqueService.moveMusic();\n    this.takeSound = this.gameMusiqueService.takeMusic();\n    this.noSound = this.gameMusiqueService.noMusic();\n  }\n\n  generateMenuMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.menuMusic)\n        this.menuMusic = createLoop(this.menuInstrument, this.gameMusiqueService.menuMusicRandom(), 1.3);\n    });\n  }\n\n  generateGameMusic() {\n    this.tryNTimes(5, () => {\n      if (!this.gameMusic)\n        this.gameMusic = createLoop(this.gameInstrument, this.gameMusiqueService.gameMusicRandom(), 0.8);\n    });\n  }\n\n  private tryNTimes(numberOfTry, callback) {\n    while (numberOfTry > 0) {\n      console.log(\"try generate menu music\")\n      try {\n        numberOfTry--;\n        callback()\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }\n\n  playMove() {\n    play(this.soundInstrument, this.moveSound, 0.5)\n  }\n\n  playTake() {\n    play(this.soundInstrument, this.takeSound, 0.5)\n  }\n\n  playNo() {\n    play(this.soundInstrument, this.noSound, 0.5)\n  }\n\n  async playMenuMusic() {\n    return this.playAmbiantMusic(this.menuMusic, this.menuInstrument);\n  }\n\n\n  public async playAmbiantMusic(newMusic:tone.Part<any>, instrument) {\n    console.log(\"new music to play\")\n    if (this.currentAmbiance) {\n      this.currentAmbiance.loop = false;\n      this.currentAmbiance.mute = true\n      await this.currentAmbiance.stop(tone.now())\n      this.ambiantInstrument.volume.value-=100;\n    }\n    newMusic.loop = true;\n    this.currentAmbiance = newMusic;\n    this.ambiantInstrument = instrument;\n    this.ambiantInstrument.volume.value=-45;\n    return newMusic.start()\n  }\n\n  private async playBruitageSound(music) {\n\n  }\n\n  async playGameMusic() {\n    return this.playAmbiantMusic(this.gameMusic, this.gameInstrument);\n\n  }\n\n  toogleSound() {\n    this.soundOnSubject$.next()\n  }\n\n  forceSoundOn() {\n    this.soundOnSubject$.next(true)\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.menuMusic) {\n      this.menuMusic.dispose()\n    }\n    if (this.gameMusic) {\n      this.gameMusic.dispose()\n    }\n    this.noSound.dispose()\n    this.takeSound.dispose()\n    this.moveSound.dispose()\n    this.ambiantInstrument.dispose()\n  }\n\n  createInstrument() {\n    return new tone.Synth().toDestination();\n  }\n}\n\nexport function createLoop(instrument, partition: Array<any>, tempo = 1): tone.Part {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let timeC = 0;\n\n  let part = new tone.Part((time, note: Note) => {\n    let decalage = rhythmUtils.duration(note.value) * tempo;\n    instrument.triggerAttackRelease(note.tune, note.value, \"+\" + timeC)\n    timeC += decalage\n    //time = InstrumentUtils.playNote(instrument, n, time, 1.2)\n  }, flatpartition.map((note) => [0, note]));\n  part.loop = true;\n  return part;\n}\n\nexport function play(instrument, partition: Array<any>, tempo = 1) {\n  let flatpartition = compositionUtils.flatPartition(partition)\n  let now = tone.now()\n  instrument.toDestination()\n  for (let i = 0; i < 1; i++) {\n    flatpartition.forEach((n) => {\n      now = instrumentUtils.playNote(instrument, n, now, tempo)\n    })\n  }\n}\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {HighscoresService} from \"../service/highscores.service\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styles: [`.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n\n\n  .title pre {\n    margin-left: auto;\n    margin-right: auto;\n    width: ${CHARACTER_SPACING * 60}px;\n  }\n\n  button {\n    text-align: center;\n    padding: 0 ${CHARACTER_SPACING * 4}px;\n  }\n  `]\n})\nexport class MenuComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('highScoreModal') highScoreModal: AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n  @ViewChild('newFormModal') newFormModal: AsciiModalComponent;\n  @ViewChild('characterFormModal') characterFormModal: AsciiModalComponent;\n  highscores: Array<any>;\n  private subscriptionHighscores: Subscription;\n  private subs: Subscription;\n\n  constructor(private router: Router,\n              private highscoresService: HighscoresService,\n              private soundService: SoundService) {\n  }\n\n  ngOnInit(): void {\n    this.subscriptionHighscores = this.highscoresService.getScores().subscribe((scores) => {\n      this.highscores = scores as Array<any>;\n    })\n  }\n\n  clickNew() {\n    this.soundService.playMove()\n    this.newFormModal.show()\n  }\n\n  clickMusic() {\n    this.router.navigateByUrl('/music');\n  }\n\n  clickCharacter() {\n\n    this.soundService.playMove()\n    this.characterFormModal.show()\n  }\n\n  saveHighScore() {\n    this.subs = this.highscoresService.saveScore({name: 'test'}, Math.random() * 100)\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionHighscores && this.subscriptionHighscores.unsubscribe()\n    this.subs && this.subs.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.soundService.playMenuMusic();\n  }\n}\n","<div class=\"title\">\n  <pre>\n\n\n\n   _           _        _____                           _\n  | |         | |      / ____|                         | |\n  | |     __ _| |__   | |  __  ___ _ __   ___ _ __ __ _| |_ ___  _ __\n  | |    / _` | '_ \\  | | |_ |/ _ \\ '_ \\ / _ \\ '__/ _` | __/ _ \\| '__|\n  | |___| (_| | |_) | | |__| |  __/ | | |  __/ | | (_| | || (_) | |\n  |______\\__,_|_.__/   \\_____|\\___|_| |_|\\___|_|  \\__,_|\\__\\___/|_|\n    <!--\n  _______ _            _       _\n  |__   __| |          | |     | |\n  | |  | |__   ___  | | __ _| |__\n  | |  | '_ \\ / _ \\ | |/ _` | '_ \\\n  | |  | | | |  __/ | | (_| | |_) |\n  |_|  |_| |_|\\___| |_|\\__,_|_.__/\n  __          ___                        _                            _\n  \\ \\        / / |                      | |                          | |\n  \\ \\  /\\  / /| |__   ___     ___  __ _| |_   _ __   ___  ___  _ __ | | ___\n  \\ \\/  \\/ / | '_ \\ / _ \\   / _ \\/ _` | __| | '_ \\ / _ \\/ _ \\| '_ \\| |/ _ \\\n  \\  /\\  /  | | | | (_) | |  __/ (_| | |_  | |_) |  __/ (_) | |_) | |  __/\n  \\/  \\/   |_| |_|\\___/   \\___|\\__,_|\\__| | .__/ \\___|\\___/| .__/|_|\\___|\n                                         | |              | |\n                                         |_|              |_|\n\n\n\n  ________        /___/   __\n  /_  __/ /  ___   / /__ _/ /\n  / / / _ \\/ -_) / / _ `/ _ \\\n  /_/ /_//_/\\__/ /_/\\_,_/_.__/    __                       __\n  | | /| / / /  ___    ___ ___ _/ /_  ___  ___ ___  ___  / /__\n  | |/ |/ / _ \\/ _ \\  / -_) _ `/ __/ / _ \\/ -_) _ \\/ _ \\/ / -_)\n  |__/|__/_//_/\\___/  \\__/\\_,_/\\__/ / .__/\\__/\\___/ .__/_/\\__/\n                                  /_/           /_/\n  -->\n  </pre>\n</div>\n<div class=\"container text\">\n  <button ascii-render\n       (click)=\"clickNew()\">NEW LABYRINTH\n  </button>\n  <button ascii-render\n       (click)=\"clickCharacter()\">CHANGE CHARACTER LOOK\n  </button>\n  <button ascii-render\n       (click)=\"saveHighScore();highScoreModal.show()\">HIGHSCORE\n  </button>\n  <button ascii-render\n       (click)=\"clickMusic()\">ABOUT THE MUSIC...\n  </button>\n</div>\n<app-ascii-modal #highScoreModal (click)=\"this.highScoreModal.hide()\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <div ascii-border\n         hoverClass=\"asciiHighlight\"\n    ><span>Highscore</span>\n    </div>\n    <div ascii-border>\n\n      Your best score\n      <br/>\n      Ever!\n      <div *ngFor=\"let score of highscores\">\n        <div ascii-border xRepeat=\"30\">\n          {{score.player.name}} : {{score.score}}</div>\n      </div>\n    </div>\n  </div>\n</app-ascii-modal>\n<app-ascii-modal #newFormModal [closable]=\"true\">\n  <app-labyrinth-form></app-labyrinth-form>\n</app-ascii-modal>\n<app-ascii-modal #loadingModal (click)=\"this.loadingModal.hide()\">Loading</app-ascii-modal>\n<app-ascii-modal #characterFormModal [closable]=\"true\">\n  <div ascii-render class=\"container text decor-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n  </div>\n</app-ascii-modal>\n\n<audio #player\n></audio>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LabyrinthGameComponent} from \"./labyrinth-game.component\";\nimport {SlidingComponent} from \"../../utils/ui/atom/sliding/sliding.component\";\nimport {KeypadFormComponent} from \"./keypad-form/keypad-form.component\";\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {MapViewComponent} from \"./map-view/map-view.component\";\nimport {InventoryViewComponent} from \"./inventory-view/inventory-view.component\";\nimport { ZoneViewComponent } from './level-view/zone-view/zone-view.component';\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {LoadingModule} from \"../loading/loading.module\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\n\n\n\n@NgModule({\n  declarations: [LabyrinthGameComponent,\n    SlidingComponent,\n    KeypadFormComponent,\n    LevelViewComponent,\n    MapViewComponent,\n    KeypadFormComponent,\n    InventoryViewComponent,\n    ZoneViewComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n    LoadingModule,\n    AppRoutingModule\n  ],\n    exports: [LabyrinthGameComponent,\n        SlidingComponent,\n        KeypadFormComponent,\n        LevelViewComponent,\n        MapViewComponent,\n        KeypadFormComponent,\n        InventoryViewComponent,\n      ZoneViewComponent]\n})\nexport class LabyrinthGameModule {\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport {Note, rhythmUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-temp-view',\n  templateUrl: './temp-view.component.html',\n  styleUrls: ['./temp-view.component.css']\n})\nexport class TempViewComponent implements OnInit {\n\n\n  @Input()\n  temp: Note\n  @Input()\n  scale: Array<string> = [];\n\n\n  style() {\n\n    return this.temp ? {\n      minWidth: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n      width: \"\" + (rhythmUtils.duration(this.temp.value) * 50) + \" px\",\n\n      display: \"inline-block\"\n    }:{}\n  }\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  noteStyle(note: any) {\n    if (note == this.temp.tune) {\n      return {}\n    } else {\n      return {color: 'lightgrey'}\n    }\n\n  }\n}\n","<div [style]=\"style()\">\n  <div>{{temp?.value}}</div>\n  <div *ngFor=\"let tune of scale\" [style]=\"noteStyle(tune)\">\n    {{tune}}</div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {GameMusiqueService} from \"../labyrinth/service/sound/game-musique.service\";\nimport {createLoop, SoundService} from \"../labyrinth/service/sound/sound.service\";\n\nimport * as tone from \"tone\";\n\n@Component({\n  selector: 'app-music-view',\n  templateUrl: './music-view.component.html',\n  styleUrls: ['./music-view.component.css']\n})\nexport class MusicViewComponent implements OnInit {\n\n  constructor(private musiqueService: GameMusiqueService,\n              private soundService: SoundService) {\n  }\n\n  currentMusicPartition: any;\n  currentPart: any;\n  currentInstrument: any;\n  ngOnInit(): void {\n  }\n\n  generateMenuMusic() {\n    this.changeMusic(this.musiqueService.menuMusicRandom())\n  }\n\n  generateGameMusic() {\n    this.changeMusic(this.musiqueService.gameMusicRandom())\n  }\n\n  pause() {\n    this.currentPart.stop(tone.now());\n    this.currentInstrument.volume.value=-100;\n\n  }\n\n  play() {\n    this.currentPart.start();\n  }\n\n  clear() {\n    if (this.currentPart) {\n      this.currentPart.stop()\n    }\n  }\n\n  changeMusic(newPartition) {\n    console.log(\"changeMusic\")\n    if (this.currentInstrument)\n      this.currentInstrument.clear()\n    this.currentInstrument = this.soundService.createInstrument();\n    this.currentMusicPartition = newPartition;\n    this.clear();\n    this.currentPart = createLoop(this.currentInstrument, this.currentMusicPartition);\n\n    this.currentInstrument.volume = -40;\n    this.soundService.playAmbiantMusic(this.currentPart, this.currentInstrument);\n  }\n}\n","<div>\n  <div ascii-border contentClass=\"text\">About the music...</div>\n</div>\n<div>\n  <div ascii-border contentClass=\"text\">\n    <p>A new music is randomly generated at each new level.\n    </p>\n    <p>Only the music's menu is generated with a fix seed.</p>\n    <p>Try-it !</p>\n  </div>\n</div>\n<div>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateMenuMusic()\">Music menu</button>\n  <button ascii-border contentClass=\"text\"\n        (click)=\"generateGameMusic()\">Random Level Music</button>\n</div>\n<div>\n  <button ascii-border (click)=\"pause()\">Pause</button>\n  <button ascii-border (click)=\"play()\">Play</button>\n</div>\n<div ascii-border contentClass=\"text\">\n  partition of the current musique:\n  <app-partition-view [partitionForms]=\"currentMusicPartition\"></app-partition-view>\n</div>\n","import {\n  Component, ContentChild, Directive, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Directive({\n  selector: '[app-ascii-on-grid-div] '\n})\nexport class AsciiInsideGridDivComponent {\n  @ContentChild(HTMLElement)\n  child: HTMLElement\n  @Input()\n  public content: string\n\n  @HostBinding(\"style\")\n  get hostStyle(): CSSStyleDeclaration {\n    let contentSplited = (this.content ? this.content : this.child ? this.child.textContent : 'x').split('\\n');\n    console.log(\"contentSplited\")\n    console.log(contentSplited)\n    return {\n      gridColumn: 'span ' + contentSplited[0].length,\n      gridRow: 'span ' + contentSplited.length\n    } as CSSStyleDeclaration;\n  }\n\n}\n","import {AfterViewChecked, AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'ascii-line',\n  templateUrl: './ascii-line.component.html',\n  styleUrls: ['./ascii-line.component.css']\n})\nexport class AsciiLineComponent implements OnInit {\n  @Input()\n  size: number = 1\n  char: String = \".\"\n\n  line: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.line = \"\";\n\n    for (let i = 0; i < this.size; i++)\n      this.line += this.char;\n  }\n\n\n}\n","{{line}}\n\n","import { Component, OnInit } from '@angular/core';\nimport {defaultButtonBorderTemplate}  from \"../../../labyrinth/service/render/resources/border\";\n@Component({\n  selector: 'app-ascii-button',\n  template: '<span ascii-border class=\"ihm-ui\" contentClass=\"text interact-ui\" [computeRenderEachTime]=\"false\" [borderTemplate]=\"defaultButtonBorderTemplate\" ><ng-content></ng-content></span>',\n  styleUrls: ['./ascii-button.component.css']\n})\nexport class AsciiButtonComponent implements OnInit {\n  label: string;\n  defaultButtonBorderTemplate = defaultButtonBorderTemplate\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {asciiStringToGridObject} from \"./border-compute\";\n\nlet paperRaw = \"\" +\n  \"  ________   \\n\" +\n  \" / \\\\      \\\\  \\n\" +\n  \"(  )|      | \\n\" +\n  \" \\\\_/|      |  \\n\" +\n  \"    |      |  \\n\" +\n  \"    |  ,___|_ \\n\" +\n  \"    \\\\_/_____/ \"\nexport let paperGridTemplate = asciiStringToGridObject(paperRaw, 8, 1, 4, 1)\n\n\nlet paperExitRaw = \"\" +\n  \"____  \\n\" +\n  \"\\\\   \\\\ \\n\" +\n  \"|   | \\n\" +\n  \" \\\\__| \"\nexport let paperExitGridTemplate = asciiStringToGridObject(paperExitRaw, 2, 1, 2, 1)\n\nlet mapZoneRaw = \"\" +\n  \" | \\n\" +\n  \"- -\\n\" +\n  \" | \"\nexport let mapGridTemplate = asciiStringToGridObject(mapZoneRaw, 1, 1, 1, 1)\n\nlet abcRaw = \"\" +\n  \"abc\\n\" +\n  \"d e\\n\" +\n  \"fgh\"\nexport let abcGridTemplate = asciiStringToGridObject(abcRaw, 1, 1, 1, 1)\n\nlet defaultBorderRaw = \"\" +\n  \"+-+\\n\" +\n  \"| |\\n\" +\n  \"+-+\"\nexport let defaultGridTemplate = asciiStringToGridObject(defaultBorderRaw, 1, 1, 1, 1)\n\nlet doubleBorderRaw = \"\" +\n  \"#=#\\n\" +\n  \"H H\\n\" +\n  \"#=#\"\nexport let doubleGridTemplate = asciiStringToGridObject(doubleBorderRaw, 1, 1, 1, 1)\n\nlet buttonBorderRaw = \"\" +\n  \",-.\\n\" +\n  \"| |\\n\" +\n  \"'-'\"\nexport let defaultButtonBorderTemplate = asciiStringToGridObject(buttonBorderRaw, 1, 1, 1, 1)\n\nlet titleBorderRaw = \"\" +\n  \".¨.\\n\" +\n  \": :\\n\" +\n  \" ¨ \"\nexport let defaultTitleBorderTemplate = asciiStringToGridObject(titleBorderRaw, 1, 1, 1, 1)\n\n\nlet loadingBorderRaw = \"\" +\n  \" _.-._. \\n\" +\n  \"(      )\\n\" +\n  \" )    (\\n\" +\n  \"(      )\\n\" +\n  \" '.-._. \"\nexport let loadingBorderGridTemplate = asciiStringToGridObject(loadingBorderRaw, 2, 4, 1, 2)\n\nlet viewCloseDoorZoneRaw = \"\" +\n  \" .------------------------.\\n\" +\n  \" |\\\\    \\\\¨¨¨¨¨¨¨¨¨¨¨/    /|\\n\" +\n  \" | \\\\    \\\\    1    /    / |\\n\" +\n  \" |  \\\\    \\\\       /    /  |\\n\" +\n  \" |   \\\\____\\\\-----/____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:  '               '  :|\\n\" +\n  \" |: 1|               |1 :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/-----\\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /   1   \\\\    \\\\  |\\n\" +\n  \" | /    /_ _ _ _ _\\\\    \\\\ |\\n\" +\n  \" `------------------------'\"\n\n\nlet viewOpenDoorZoneRaw = \"\" +\n  \" .------------------------.\\n\" +\n  \" |\\\\    \\\\¨¨|¨¨¨¨¨|¨¨/    /|\\n\" +\n  \" | \\\\    \\\\ |     | /    / |\\n\" +\n  \" |  \\\\    \\\\|     |/    /  |\\n\" +\n  \" |   \\\\____\\\\     /____/   |\\n\" +\n  \" |:\\\\ |               | /:|\\n\" +\n  \" |: \\\\|               |/ :|\\n\" +\n  \" |:--'               '--:|\\n\" +\n  \" |:                     :|\\n\" +\n  \" |'--,               ,--'|\\n\" +\n  \" |   /¨¨¨¨/     \\\\¨¨¨¨\\\\   |\\n\" +\n  \" |  /    /|     |\\\\    \\\\  |\\n\" +\n  \" | /    /_|_ _ _|_\\\\    \\\\ |\\n\" +\n  \" `------------------------'\"\n\nlet viewWallZoneRaw = \"\" +\n  \" .-----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\                   / |\\n\" +\n  \" |  \\\\                 /  |\\n\" +\n  \" |   \\\\_______________/   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   |               |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /                 \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-----------------------'\"\n\n\nlet defaultZoneCornerWidth = 6;\nlet defaultZoneSideWidth = 15;\nlet defaultZoneCornerHeight = 5;\nlet defaultZoneSideHeight = 5;\nexport let viewCloseDoorGridTemplate = asciiStringToGridObject(viewCloseDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\n\nlet viewEmptyZoneRawOld = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\##########################/|\\n\" +\n  \" |#\\\\########################/#|\\n\" +\n  \" |##\\\\######################/##|\\n\" +\n  \" |###\\\\####################/###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###|####################|###|\\n\" +\n  \" |###/####################\\\\###|\\n\" +\n  \" |##/######################\\\\##|\\n\" +\n  \" |#/########################\\\\#|\\n\" +\n  \" `---------------------------'\"\nlet viewEmptyZoneRawOld2 = \"\" +\n  \" .---- ---   --- --------.\\n\" +\n  \" |\\\\         .             /|\\n\" +\n  \" | \\\\                       |\\n\" +\n  \" |                      /  |\\n\" +\n  \"     \\\\__ ___ _____  ___:   |\\n\" +\n  \" |   |                 |    \\n\" +\n  \"  .  |                 |    \\n\" +\n  \" |                       ¨ |\\n\" +\n  \" |   |                 |   |\\n\" +\n  \"     |                 |    \\n\" +\n  \" |                          \\n\" +\n  \"     /    ¨¨  ¨  ¨¨¨  ¨\\\\   |\\n\" +\n  \" |                      \\\\  |\\n\" +\n  \"   /           .         \\\\ |\\n\" +\n  \" `---- --   - -- -  - ---'\"\nlet viewEmptyZoneRaw3 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nlet viewEmptyZoneRaw4 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        /                       \\n\" +\n  \"       /                        \\n\" +\n  \"      /                         \\n\" +\n  \"     /                          \\n\" +\n  \"    /                           \\n\" +\n  \"   /                            \\n\" +\n  \"  /                             \\n\" +\n  \" /                              \\n\" +\n  \"/                               \"\n\nlet viewWallZoneRaw2 = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |             /              /|\\n\" +\n  \" |            /              / |\\n\" +\n  \" |           /              /  |\\n\" +\n  \" |          /              /   |\\n\" +\n  \" |         /              /   |\\n\" +\n  \" |        /              /    |\\n\" +\n  \" |       /              /  |   |\\n\" +\n  \" |      /              /   |   |\\n\" +\n  \" |     /              /    |   |\\n\" +\n  \" |    /              /     |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨/¨¨¨¨¨\\\\   |\\n\" +\n  \" |  /              /        \\\\  |\\n\" +\n  \" | /              /          \\\\ |\\n\" +\n  \" `---------------+-----------'\"\n\n\nlet viewEmptyDeepZoneRaw = \"\" +\n  \" .---------------------------.\\n\" +\n  \" |\\\\                          /|\\n\" +\n  \" | \\\\                /       / |\\n\" +\n  \" |  \\\\      \\\\               /  |\\n\" +\n  \" |   \\\\                    /   |\\n\" +\n  \" |    \\\\           /      /    |\\n\" +\n  \" |     \\\\                /     |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |      ################      |\\n\" +\n  \" |     /                \\\\     |\\n\" +\n  \" |    /                  \\\\    |\\n\" +\n  \" |   /     /              \\\\   |\\n\" +\n  \" |  /  /                   \\\\  |\\n\" +\n  \" | /                        \\\\ |\\n\" +\n  \" `---------------------------'\"\n\nlet viewEmptyDeepOmbreZoneRaw = \"\" +\n  \" .----.--  .----,----,---.\\n\" +\n  \" |\\\\                      /|\\n\" +\n  \" | \\\\            /       / |\\n\" +\n  \" |  \\\\      \\            / /\\n\" +\n  \" \\\\   \\\\                /    \\n\" +\n  \" |    \\\\       /      /    |\\n\" +\n  \"    -  \\\\\\\\ |  /    ///  _  |\\n\" +\n  \"      ¨=############=¨    |\\n\" +\n  \" |    _=############=_  - |\\n\" +\n  \"      /////   \\\\   \\\\\\\\\\\\     |\\n\" +\n  \" |  /  /        \\\\      \\\\  |\\n\" +\n  \" | /                    \\\\ |\\n\" +\n  \" `-- --'--'------`---`---'\"\n\n\nlet viewEmptyDeepWaterZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\           / /\\n\" +\n  \" \\\\   \\\\               /    \\n\" +\n  \" |    \\\\__-__-_--__  /    |\\n\" +\n  \" |  - ¨(  _-____   )¨ _  |\\n\" +\n  \"      ¨ )_-__  _  (¨    |\\n\" +\n  \" |    _(  -   -__  )_  - |\\n\" +\n  \"      /'--__--__---'\\\\    |\\n\" +\n  \" /   /     /          \\\\   \\\\\\n\" +\n  \" |  /  /       \\\\      \\\\  |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\nlet viewEmptySpikeZoneRaw = \"\" +\n  \" .----.--  .---,----,---.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | \\\\           /       / |\\n\" +\n  \" |  \\\\      \\\\          / /\\n\" +\n  \"     \\\\_______________/   |\\n\" +\n  \" |   |   A  /\\\\  /\\\\   |    \\n\" +\n  \" |   |  / \\\\  /\\\\      |   |\\n\" +\n  \"     |           ^   |   |\\n\" +\n  \"     |   ^           |   |\\n\" +\n  \" |   |     /\\\\    / \\\\ |   |\\n\" +\n  \" |   /¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\\\   |\\n\" +\n  \"  / /  /       \\\\      \\\\  \\\\\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `-- --'--'-----`---`---'\"\n\n\nlet viewEmptyObstructedZoneRaw = \"\" +\n  \" .                ---    \\n\" +\n  \"                         \\n\" +\n  \" |                       \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                         \\n\" +\n  \" |                      |\\n\" +\n  \"                         \\n\" +\n  \"                        |\\n\" +\n  \"                         \\n\" +\n  \" |                      \\n\" +\n  \"     --          ---  \"\nlet viewObstructed2lZoneRaw = \"\" +\n  \" .----------------------.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-, |\\n\" +\n  \" |  |                  | |\\n\" +\n  \" | |     °            |  |\\n\" +\n  \" |  |            °     | |\\n\" +\n  \" | |      O            | |\\n\" +\n  \" | |                   | |\\n\" +\n  \" |  |             0   |  |\\n\" +\n  \" | |      °            | |\\n\" +\n  \" | |   o       °       | |\\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `----------------------'\"\nlet viewObstructed3lZoneRaw = \"\" +\n  \" .-  ---- - ---    --- -.\\n\" +\n  \" |\\\\                     /|\\n\" +\n  \" | _-_---_-___-__-____-,  \\n\" +\n  \"    |                  | |\\n\" +\n  \"   |     °            |  |\\n\" +\n  \"    |            °     |  \\n\" +\n  \" | |      O            |  \\n\" +\n  \"   |                   | |\\n\" +\n  \"   |           O       | |\\n\" +\n  \" |  |                 |   \\n\" +\n  \"   |   o       °       |  \\n\" +\n  \" | '-_---_-___-__-_____- |\\n\" +\n  \" | /                   \\\\ |\\n\" +\n  \" `------    ----  --  --'\"\n\n\nlet viewEmptyZoneRaw5 = \"\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"        ( @   @ )                  \\n\" +\n  \"         \\\\ A /                   \\n\" +\n  \"          uUuu                      \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \\n\" +\n  \"                               \"\n\nexport let viewEmptyZoneGridTemplate = asciiStringToGridObject(viewObstructed3lZoneRaw, 6, 0, 5, 0)\nexport let viewEmptyZones = [viewObstructed3lZoneRaw, viewObstructed2lZoneRaw, viewEmptySpikeZoneRaw, viewEmptyObstructedZoneRaw, viewEmptyDeepWaterZoneRaw]\nexport let viewEmptyZoneGridTemplates = viewEmptyZones.map((z => asciiStringToGridObject(z, 6, 0, 5, 0)));\n\n\nexport let viewOpenDoorGridTemplate = asciiStringToGridObject(viewOpenDoorZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\nexport let viewWallGridTemplate = asciiStringToGridObject(viewWallZoneRaw, defaultZoneCornerWidth, defaultZoneSideWidth, defaultZoneCornerHeight, defaultZoneSideHeight)\n\nexport let exitTemplate: any = \"\" +\n  \"  |--|  \\n\" +\n  \"  |--|  \\n\" +\n  \":¨|--|¨:\\n\" +\n  \"'¨¨¨¨¨¨'\\n\" +\n  \"  exit \";\nexport let startTemplate: any = \"\" +\n  \"+______\\n\" +\n  \"|start<\\n\" +\n  \"+¨¨¨¨¨¨\\n\" +\n  \"|      \\n\" +\n  \"|      \";\nlet bagRaw = \"\" +\n  \"(@=======(@   \\n\" +\n  \"||       ||   \\n\" +\n  \" \\\\\\\\ '' '//    \\n\" +\n  \"  \\\\\\\\   //     \\n\" +\n  \"   \\\\===/      \";\n\nlet handRaw = \"\" +\n  \"       /EN\\\\         \\n\" +\n  \"   /NV||..||TO\\\\     \\n\" +\n  \"   |..||  ||..|     \\n\" +\n  \"/I||..||''||..|     \\n\" +\n  \"|.||..\\\\/..\\\\/..| / RY|\\n\" +\n  \"|.|          \\\\/\\\\  /\\n\" +\n  \"|              \\\\|  \\\\/ \\n\" +\n  \"\\\\                /   \\n\" +\n  \" \\\\              /    \"\n\n\nlet bigHandRaw = \"\" +\n  \"         /EN\\\\         \\n\" +\n  \"    / NV||...||TO \\\\     \\n\" +\n  \"    |...||   ||...|     \\n\" +\n  \"/I ||...||'''||...|     \\n\" +\n  \"|..||...\\\\/...\\\\/...| / RY |\\n\" +\n  \"|..|            \\\\/\\\\   /\\n\" +\n  \"|                \\\\|   \\\\/ \\n\" +\n  \"\\\\                    /   \\n\" +\n  \" \\\\                  /    \"\n\nlet otherHandRaw = \"\" +\n  \"     (IN) (VEN)(TOR)    \\n\" +\n  \"     |¨¨| |¨¨¨||¨¨¨|(Y) \\n\" +\n  \"\\\\\\\"-_ |¨¨| |¨¨¨||¨¨¨||¨| \\n\" +\n  \" \\\\  \\\\|¨¨¨  ¨¨¨  ¨¨¨ ¨¨/ \\n\" +\n  \"  \\\\  :               ¨| \\n\" +\n  \"   \\\\_               /   \\n\" +\n  \"     \\\\              /    \"\n\n\n\n\n\nexport let bagGridTemplate = asciiStringToGridObject(otherHandRaw, 6, 15, 4, 1)\n\nlet inventoryBox =  \"\" +\n  \".=====.\\n\" +\n  \"|\\\\   /|\\n\" +\n  \"| \\\\=/ |\\n\" +\n  \"| | | |\\n\" +\n  \"| /=\\\\ |\\n\" +\n  \"|/   \\\\|\\n\" +\n  \"`====='\"\nexport let inventoryBoxGridTemplate = asciiStringToGridObject(inventoryBox, 3, 1, 3, 1)\n\nconsole.log(bagGridTemplate)\n","import {Injectable} from '@angular/core';\n\nimport {Observable, of, ReplaySubject, Subject} from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport * as gameRules from 'gameRules';\n// @ts-ignore\n\nimport {DataStorageService} from \"./data-storage.service\";\nimport {SoundService} from \"./sound/sound.service\";\n\nlet labeatGeneration = gameRules.fr.perso.labyrinth.labeat.generation;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateLabService {\n\n  constructor(private router: Router,\n              private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    this.generateSpirale()\n  }\n\n\n  generate(size, playerName: string): void {\n    let party = labeatGeneration.initPartieMapLabWithKey(size, playerName) //labeatGeneration.initPartieCompositeLabWithKeyFunction(size)\n    this.dataStorageService.saveParty(party)\n    this.soundService.generateGameMusic();\n  }\n\n  generateEmpty(size): void {\n    let party = {level: labeatGeneration.connectAllZoneOfBoard(labeatGeneration.generateEmptyBoard(size))}\n    this.dataStorageService.saveParty(party)\n    this.router.navigateByUrl('/game');\n  }\n\n  generateSpirale(): void {\n    let party = labeatGeneration.initPartieSpiral()\n    this.dataStorageService.saveParty(party)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {\n  viewCloseDoorGridTemplate,\n  viewOpenDoorGridTemplate,\n  viewWallGridTemplate\n} from \"../../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../../service/render/fullsize-ascii-render.service\";\nimport {utils} from \"music-generator\";\nimport {LINE_HEIGHT} from \"../../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../../utils/kotlinUtils\";\n\nlet backgroundTemplate = utils.shuffle([' ¨    \\n  °',\n  ' -      \\n       -   \\n    -',\n  \"\",\n  //'__/___/____\\\\_\\\\_\\n_/_/_______\\\\___\\n_____/____\\\\____\\n___/____\\\\______\\n_/_______\\\\___\\\\_\\n',\n  ' _/  _/____\\\\_\\\\_\\n_/_/___    \\\\___\\n_____/  __\\\\____\\n___/____\\\\__    \\n_/   ___\\\\__ \\\\_\\n',\n  //' _/___ /_ \\\\_\\\\_\\n_/_/_ __  _\\\\___\\n____ /__ _\\\\_ __\\n_ _/_ _ \\\\__ ___\\n_/__ __ _\\\\__\\\\__\\n',\n  //' _/_/__ \\\\__ \\\\_\\n___/ / __\\\\__  \\\\\\n __/ /__ \\\\_\\\\\\\\_\\n_ __/  __\\\\_\\\\ \\\\\\n/ __/_/_\\\\__  \\\\_',\n\n  ' ,`    ,  \\'  \\n ,\\'    \\'  ,  ,,  \\n       ,  \\n    \\'\\'  , ` ,     ',\n  ' .    .  \\n    .   .   \\n    .',\n  ' .       .  \\n       .    .   \\n       .',\n  ' °       o  \\n       °    .   \\n  o   °       .',\n  ' ..    ..... .. \\n. . .... ..... .\\n.. ... ..   ....\\n....     .... . \\n. .      ...   .\\n'\n\n])\n\n@Component({\n  selector: 'app-zone-view',\n  templateUrl: './zone-view.component.html',\n  styleUrls: ['./zone-view.component.css'],\n  styles: [`.zoneContent {\n    position: relative;\n    min-height: ${LINE_HEIGHT * 5}px;\n  }`]\n\n})\nexport class ZoneViewComponent implements OnInit {\n\n  @Input()\n  zone?: any;\n\n  constructor(public gameplayLabService: GameplayLabService,\n              public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnInit(): void {\n    if (!this.zone)\n      this.zone = {}\n  }\n\n  borderRendered() {\n    let borderRendered = {...viewWallGridTemplate}\n    let directions: Array<string> = ['left', \"right\", 'top', 'bottom'];//should stay lowcase\n    directions.forEach((direction: string) => {\n      let door = this.gameplayLabService.doorAt(this.zone, direction.toUpperCase())\n      borderRendered[direction + \"BorderClass\"] = 'decor-ui'\n      if (door) {\n        borderRendered[direction + \"BorderClass\"] = 'interact-ui'\n        if (door.key) {\n          borderRendered[direction + \"Template\"] = viewCloseDoorGridTemplate[direction + \"Template\"].replace(\"1\", door.name)//TODO : use template instead of replace\n        } else {\n          borderRendered[direction + \"Template\"] = viewOpenDoorGridTemplate[direction + \"Template\"]\n        }\n        borderRendered[direction + \"Tooltip\"] = this.computeTooltip(door)\n      }\n    })\n\n    return borderRendered;\n  }\n\n  backgroundRender() {\n    return backgroundTemplate[(this.zone.x + this.zone.y * 3) % backgroundTemplate.length]\n  }\n\n  clickOnBorder: any = (direction: string, event: Event) => {\n    if (this.gameplayLabService.hasPlayer(this.zone)) {\n      if (this.gameplayLabService.move(direction)) {\n          event.preventDefault();\n        }\n    } else {\n     this.clickOnZone(event)\n    }\n  }\n\n  takeObj: any = (obj) => {\n    this.gameplayLabService.take(obj)\n  }\n\n  clickOnZone: any = (e: Event) => {\n    if (this.gameplayLabService.moveAtCase(this.zone)) {\n      e.preventDefault();\n    }\n  };\n\n  renderObj(obj: any) {\n    return this.renderService.renderObj(obj)\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n  getLevelContent() {\n    return this.gameplayLabService.levelContent(this.zone)\n  }\n}\n","<div ascii-border class=\"zone asciiArt decor-ui\"\n     [borderTemplate]=\"borderRendered()\"\n     [borderClick]=\"clickOnBorder\"\n\n     [xRepeat]=\"1\"\n     [yRepeat]=\"1\"\n     [name]=\"'zone'\"\n>\n  <div class=\"zoneContent\" (click)=\"clickOnZone( $event)\">\n    <div class=\"background-ui zoneBackground\">{{backgroundRender()}}</div>\n    <div app-ascii-on-grid-div>\n      <span app-ascii\n           *ngFor=\"let obj of getLevelContent()\"\n           class=\"zoneObject asciiArt interact-ui\"\n           (click)=\"this.takeObj(obj)\"\n           [tooltip]=\"computeTooltip(obj)\"\n           [content]=\"renderObj(obj)\"\n      >\n      </span>\n    </div>\n\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\n\nconst defaultData = {\n  top: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  right: 'auto',\n  marginTop: 'auto',\n  marginBottom: 'auto',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  color: 'initial',\n  position: 'initial',\n  transform: 'initial',\n}\n\n\nfunction generateStyle(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle[key] = '{{ ' + dataName + '' + key + ' }}'\n  }\n  return style(tokenStyle);\n}\n\nfunction generateDefaultParams(dataName) {\n  const tokenStyle = {}\n\n  for (let key in defaultData) {\n    tokenStyle['' + dataName + '' + key] = defaultData[key]\n  }\n\n  return tokenStyle\n}\n\n\n@Component({\n  selector: 'app-sliding',\n  templateUrl: './sliding.component.html',\n  styleUrls: ['./sliding.component.css'],\n  animations: [\n    trigger('openClose', [\n      // ...\n      state('open', generateStyle('_openData'), {\n        params: generateDefaultParams('_openData')\n      }),\n      state('close', generateStyle('_closeData'), {\n        params: generateDefaultParams('_closeData')\n      }),\n      transition('* => open', [\n        animate('2s')\n      ]),\n      transition('* => close', [\n        animate('1s')\n      ]),\n    ]),\n  ],\n})\nexport class SlidingComponent implements OnInit, OnChanges {\n  @Input()\n  public openData: any = {}\n  @Input()\n  public closeData: any = {}\n  @Input()\n  public slideOnlyOnClick = false\n\n  public isOpen = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  ngOnChanges(): void {\n\n\n  }\n\n\n  open() {\n    this.isOpen = true\n  }\n\n  close() {\n    this.isOpen = false\n  }\n\n  onAnimationEvent($event: any) {\n  }\n\n  generateParams() {\n    const params = {}\n\n    for (let key in defaultData) {\n      params['_openData' + key] = this.openData[key] ? this.openData[key] : defaultData[key]\n      params['_closeData' + key] = this.closeData[key] ? this.closeData[key] : defaultData[key]\n\n    }\n    return params\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  mouseOver() {\n    !this.slideOnlyOnClick && this.open()\n  }\n\n  mouseLeave() {\n    !this.slideOnlyOnClick && this.close()\n  }\n\n  click() {\n    if (this.slideOnlyOnClick) {\n      this.toggle();\n    } else {\n      this.close()\n    }\n  }\n}\n","<div class=\"slideContainer\"\n     (mouseover)=\"mouseOver()\"\n     (mouseout)=\"mouseLeave()\"\n     (mouseleave)=\"mouseLeave()\"\n     (mousedown)=\"click()\"\n     [@openClose]=\"{value:isOpen?'open':'close', params: this.generateParams()}\"\n     (@openClose.start)=\"onAnimationEvent($event)\"\n     (@openClose.done)=\"onAnimationEvent($event)\"\n>\n  <ng-content></ng-content>\n</div>\n","import {Component, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {DataStorageService} from \"../../labyrinth/service/data-storage.service\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\nimport {CharacterRenderData, CharacterRenderService} from \"../../labyrinth/service/render/character-render.service\";\n\n\n\n@Component({\n  selector: 'app-character-form',\n  templateUrl: './character-form.component.html',\n  styleUrls: ['./character-form.component.css'],\n  styles: [`input {\n    width: ${CHARACTER_SPACING * 6}px;\n    padding: 0;\n  }\n  `]\n})\nexport class CharacterFormComponent implements OnInit, OnDestroy {\n\n\n  data: CharacterRenderData = new CharacterRenderData()\n\n  render: String = \"\"\n  private interval:any;\n\n\n  constructor(public renderService: CharacterRenderService,\n              public dataStorage: DataStorageService,\n              public ngZone: NgZone) {\n\n  }\n\n  update() {\n    this.dataStorage.saveCharacter(this.data)\n  }\n\n\n  ngOnInit(): void {\n    this.update();\n    this.initCharacterRotation();\n  }\n\n  private initCharacterRotation() {\n\n    let time: number = 0;\n    this.ngZone.runOutsideAngular(() => {\n      this.interval = setInterval(this.rotate(time), 1000)\n    });\n  }\n\n  public rotate(time: number) {\n    return () => {\n      time = (time + 1) % 4;\n      let direction: string\n      switch (time) {\n        case 0:\n          direction = 'LEFT';\n          break;\n        case 1:\n          direction = 'BOTTOM';\n          break;\n        case 2:\n          direction = 'RIGHT';\n          break;\n        case 3:\n          direction = 'TOP';\n          break;\n        default:\n          direction = 'LEFT'\n      }\n      this.render = this.renderService.render(this.data, direction);\n    };\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n}\n","<h1 ascii-render class=\"text  ihm-ui\" >aspect of your character</h1>\n<div class=\"layout\">\n  <div *ngFor=\"let bodyPart of renderService.bodyPartsKey\">\n    <h2 ascii-render class=\"text\">{{bodyPart}}</h2>\n\n    <div class=\"input--border\" ascii-render>\n      <input class=\"interact-ui\"\n             [(ngModel)]=\"data[bodyPart]\"\n             (change)=\"update()\"\n             [maxLength]=\"bodyPart==='hat'?6:1\">\n    </div>\n  </div>\n  <div>  <h2 ascii-render class=\"text\">You</h2>\n    <div ascii-render [xRepeat]=\"6\" [yRepeat]=\"4\" class=\"character-render asciiArt\"\n         borderTemplateName=\"double\">\n     <span class=\"important-ui\">{{render}}</span>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport * as tone from \"tone\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToneService {\n\n  constructor() {\n  }\n\n  public Synth() {\n    return new tone.Synth()\n  };\n\n  start() {\n    tone.start();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {bagGridTemplate} from \"../../service/render/resources/border\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING} from \"../../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'inventory-view',\n  templateUrl: './inventory-view.component.html',\n  styles:[`:host {\n    background: white;\n    display: inline-block;\n  }\n\n  .title {\n    width: ${CHARACTER_SPACING}px;\n    margin-left: -${CHARACTER_SPACING*2}px;\n    margin-right: ${CHARACTER_SPACING}px;\n    display: inline-block;\n  }\n\n  .content {\n    display: inline-block;\n    width: ${CHARACTER_SPACING*(6*2+1)}px;\n  }\n  `]\n})\nexport class InventoryViewComponent implements OnInit {\n  @Input()\n  player: any;\n  borderDatas: any = bagGridTemplate;\n\n  constructor(private _renderService:FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  render(obj) {\n    return this._renderService.renderObj(obj);\n  }\n\n  computeTooltip(obj: any) {\n    if (obj.name == 'start')\n      return 'start flag'\n    if (obj.name == 'exit')\n      return 'the exit'\n    if (obj.key)\n      return 'closed door ' + obj.name\n    if (obj.destination)\n      return 'door'\n    if (obj.inventory)\n      return 'You'\n    return 'key ' + obj.name\n\n  }\n\n}\n","<div class=\"inventory container decor-ui\"\n     ascii-border\n     borderTemplateName=\"inventoryBoxGridTemplate\"\n     [xRepeat]=\"15\">\n  <div class=\"title\">I N V E N T O R Y</div>\n\n  <div class=\"content\"\n       app-ascii-on-grid-div\n  >\n    <ng-container *ngIf=\"!!this.player && !!this.player.inventoryArray && this.player.inventoryArray.length==0\"> .\n    </ng-container>\n    <ng-container *ngFor=\"let item of this.player.inventoryArray\">\n      <div app-ascii class=\"important-ui\"\n           [tooltip]=\"computeTooltip(item)\"\n           [content]=\"render(item)\"></div>\n    </ng-container>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-ascii-modal',\n  templateUrl: './ascii-modal.component.html',\n  styleUrls: ['./ascii-modal.component.css']\n})\nexport class AsciiModalComponent implements OnInit {\n\n  @Input()\n  _show = false\n\n  @Input()\n  closable = false\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  show() {\n    this._show = true\n  }\n\n  hide() {\n\n    this._show = false\n  }\n\n}\n","<div class=\"modalScreen\" *ngIf=\"_show===true\">\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"backgroundModal\">\n\n    <div ascii-border\n      *ngIf=\"closable\" (click)=\"hide()\"\n      class=\"cross asciiArt ihm-ui\"\n      [borderTemplateName]=\"'paperExitGridTemplate'\">X\n    </div>\n    <ng-content></ng-content>\n\n  </div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n  <div class=\"behindModal\" (click)=\"hide()\"></div>\n\n</div>\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsciiGeneratorService {\n\n  constructor() {\n    for (let key in {...this.reverseChar}) {\n      this.reverseChar[this.reverseChar[key]] = key;\n    }\n  }\n\n  reverseChar: Object = {\n    'd': 'b',\n    '/': '\\\\',\n    'q': 'p',\n    '(': ')'\n\n  }\n\n  private reverseString(str) {\n\n    return this.reverseChar[str] ? this.reverseChar[str] : str;\n  }\n\n  reverseTemplate(template, partsKey) {\n    return template.split(\"\\n\")\n      .map(row => {\n        let reversedRow = row.split(/\\$\\{(\\w+)\\}/g)\n          .filter(s => s != \"\")\n          .map((word) => {\n\n\n            if (!partsKey.includes(word) && !partsKey.includes(word.replace(\"Reversed\", \"\"))) {\n              return word.split(\"\").map(e => {\n                return this.reverseChar[e] ? this.reverseChar[e] : e\n              })\n                .reverse().join(\"\");\n            } else if (word.endsWith(\"Reversed\")) {\n              return `$\\{${word.replace(\"Reversed\", \"\")}}`;\n            } else {\n              return `$\\{${word}Reversed}`;\n            }\n          }).reverse().join(\"\");\n        return reversedRow\n      })\n      .join(\"\\n\")\n\n  }\n\n  reverseData(data: any) {\n    let ret = {}\n    for (let key in data) {\n      ret[key + \"Reversed\"] = this.reverseString(data[key])\n    }\n    return ret;\n  }\n\n  templateString(template: String, data: any) {\n    return template.replace(/\\$\\{(\\w+)\\}/g, (_, name) => {\n      return data[name] || \"?\"\n    });\n  }\n\n}\n","import {Component,Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: '[app-ascii]',\n  templateUrl: './ascii.component.html',\n  styleUrls: ['./ascii.component.css']\n})\nexport class AsciiComponent implements OnInit {\n  @Input()\n  public content: string\n  @Input()\n  public tooltip: string\n  @Input()\n  public asciiClass: string = ''\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pre [ngClass]=\"[asciiClass, 'asciiArt']\" class=\"withtooltip\">{{content}}<ng-content></ng-content><div class=\"tooltiptext text\" *ngIf=\"tooltip\">[{{tooltip}}]</div>\n</pre>\n","import {Injectable} from '@angular/core';\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport * as gameRules from \"gameRules\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapAsciiRenderService extends AsciiRenderService {\n\n  constructor(asciiGeneratorService: AsciiGeneratorService) {\n\n    let directions = [\"top\", \"bottom\", \"left\", \"right\"]\n    super(asciiGeneratorService);\n    directions.forEach((dir) => {\n\n      this[dir + \"DoorTemplate\"] = \"${name}\";\n      this[dir + \"WallTemplate\"] = \" \";\n\n    })\n    this.leftBottomCornerTemplate = \" \";\n    this.rightBottomCornerTemplate = \" \";\n    this.leftTopCornerTemplate = \" \";\n    this.rightTopCornerTemplate = \" \";\n  }\n\n  renderPlayer(characterData: any) {\n    return \"@\"\n  }\n\n  renderCenter(zone, party): String {\n    let content = zone.content.filter(it => !it.destination)\n    if (party.player.location.x === zone.x && party.player.location.y === zone.y)\n      return \"@\";\n    else if (zone.x===party.level.exit.x &&zone.y===party.level.exit.y ) {\n      return \"€\"\n    }\n    else if (content.length > 0) {\n      if (content.filter(it => it.name === \"start\").length > 0)\n        return \"$\"\n\n      else\n        return content[0].name\n    } else return \"+\"\n  }\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let doorName;\n    if (!door)\n      doorName = \" \"\n    else if (door.name != \"door\") {\n      doorName = door.name;\n    } else {\n      if (direction == 'TOP' || direction == \"BOTTOM\")\n        doorName = \"|\"\n      else\n        doorName = \"-\"\n    }\n\n    let data: any = {...this.defaultData, name: doorName};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderObj(obj: any, characterRenderData: any) {\n\n    if (obj.classname === gameRules.fr.perso.labyrinth.freezone.model.KeyObjectZone.name) {\n      return obj.name;\n    } else if (obj.name === \"player\") {\n      return \"¤\"\n    } else if (obj.name === \"exit\") {\n      return \"€\"\n    } else if (obj.name === \"start\") {\n      return \"$\"\n    }else if (obj.name === \"compass\") {\n      return \"%\"\n    }else if (obj.name === \"boussole\") {\n      return \"@\"\n    }\n    else if (obj.name === \"radar\") {\n      return \"®\"\n    }\n    else if (obj.name === \"map\") {\n      return \"#\"\n    } else {\n      return obj.name;\n    }\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiCharacterComponent} from \"./ascii-character/ascii-character.component\";\nimport {AsciiComponent} from \"./component/ascii.component\";\nimport {AsciiLineComponent} from \"./ascii-line/ascii-line.component\";\nimport {AsciiModalComponent} from \"./ascii-modal/ascii-modal.component\";\nimport {AsciiBorderComponent} from \"./ascii-border/ascii-border.component\";\nimport { AsciiButtonComponent } from './ascii-button/ascii-button.component';\nimport { BrowserModule} from '@angular/platform-browser';\nimport {AsciiGridModule} from \"./ascii-on-grid-div/ascii-grid.module\";\n\n@NgModule({\n  declarations: [\n    AsciiComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent,\n    AsciiCharacterComponent,\n  ],\n  exports: [\n    AsciiComponent,\n    AsciiCharacterComponent,\n    AsciiBorderComponent,\n    AsciiLineComponent,\n    AsciiModalComponent,\n    AsciiButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiGridModule\n  ]\n})\nexport class AsciiModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, ReplaySubject, Subject} from \"rxjs\";\nimport {CharacterRenderData} from \"./render/character-render.service\";\nimport * as gameRules from \"gameRules\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  currentParty$: Subject<any> = new ReplaySubject<any>(1);\n  currentPartyView$: Subject<any> = new ReplaySubject<any>(1);\n  lastMessage$: Subject<any> = new ReplaySubject<any>(1);\n  characterDirection$: Subject<any> = new ReplaySubject<any>(1);\n  currentCharaRenderData$: Subject<CharacterRenderData> = new ReplaySubject<CharacterRenderData>(1);\n  gameplay:any;\n  constructor() {\n    this.characterDirection$.next('LEFT')\n    this.currentCharaRenderData$.next(new CharacterRenderData())\n    this.gameplay = gameRules.fr.perso.labyrinth.labeat\n  }\n\n  saveParty(party: { level: any }) {\n\n    this.currentParty$.next(party)\n    this.currentPartyView$.next(JSON.parse(this.gameplay.toJson(party)))\n  }\n\n  saveLastMessages(...messages: string[]) {\n\n    this.lastMessage$.next(messages[messages.length - 1])\n  }\n\n  getCurrentParty(): Observable<any> {\n    return this.currentParty$\n  }\n\n  getCurrentPartyView(): Observable<any> {\n    return this.currentPartyView$\n  }\n\n\n  saveCharacter(chardata: CharacterRenderData) {\n    this.currentCharaRenderData$.next(chardata)\n  }\n\n  saveCharacterDirection(direction) {\n    this.characterDirection$.next(direction)\n  }\n\n  getCurrentCharaRenderData() {\n    return this.currentCharaRenderData$\n  }\n\n  getPlayerDirection() {\n    return this.characterDirection$\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {take} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighscoresService  {\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public saveScore(player, score) {\n    let objectObservable = this.http.post(\"http://sarahbuisson-server-sample.herokuapp.com/score\", {\n      player: player,\n      score\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).pipe(take(1))\n      .subscribe(\n        data => console.log('success', data),\n        error => console.log('oops', error)\n      );\n    return objectObservable\n  }\n\n  public getScores() {\n    return this.http.get(\"http://sarahbuisson-server-sample.herokuapp.com/scores\");\n  }\n\n}\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CHARACTER_SPACING} from \"../../utils/ascii/AsciiConst\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-labyrinth-form',\n  templateUrl: './new-labyrinth-form.component.html',\n  styles:[`\n    input {\n      width: ${CHARACTER_SPACING * 8}px\n    }\n\n\n    .grid {\n      max-width: ${CHARACTER_SPACING * 30}px;\n      display: grid;\n      grid-template-columns: 2fr ${CHARACTER_SPACING*9}px;\n      align-items: center;\n      text-align: center;\n    }\n  `]\n})\nexport class NewLabyrinthFormComponent implements OnInit, OnDestroy {\n\n  size: Number = 5\n  playerName: string\n\n  @ViewChild('loadingModal') loadingModal: AsciiModalComponent;\n\n  private subscriptions: Subscription;\n\n  constructor(private labService: GenerateLabService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.subscriptions=this.route.queryParams.subscribe(params => {\n      this.size = params['size']?params['size']:5;\n    });\n  }\n\n  play(): void {\n    this.loadingModal.show()\n\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      setTimeout(() => resolve('done'), 5000);\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      this.labService.generate(this.size, this.playerName);\n      resolve({}); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n  emptyBoard(): void {\n    this.labService.generateEmpty(this.size);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div ascii-render class=\"container text background-ui\" borderTemplateName=\"paper\">\n  <app-character-form></app-character-form>\n\n  <h1 ascii-render class=\"text ihm-ui\">Level creation</h1>\n  <div class=\"grid\">\n    <span>\n    Labyrinth Size:\n    </span>\n    <div class=\"input--border\" ascii-render><input class=\"text\" [(ngModel)]=\"size\"></div>\n    <div></div>\n    <button ascii-render class=\"text important-ui\"\n            (click)=\"play()\">play\n    </button>\n  </div>\n\n\n</div>\n<app-ascii-modal #loadingModal>\n  <app-loading></app-loading>\n</app-ascii-modal>\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website-angular';\n}\n","<router-outlet></router-outlet>\n<ui-sound></ui-sound>\n<a href=\"https://github.com/sarahBuisson/labyrinth-game/actions\" class=\"text repository\">repository github</a>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {paperGridTemplate, mapGridTemplate} from \"../../service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinPathToJsView, parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n\nlet mapBorderData = paperGridTemplate;\n\n@Component({\n  selector: 'map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css'],\n  styles: [`\n    .title {\n      display: inline-flex;\n      flex-direction: column;\n      width: ${CHARACTER_SPACING * 3}px;\n      padding:${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n    .legend {\n        min-width: ${CHARACTER_SPACING * 10}px;\n    }`]\n})\nexport class MapViewComponent implements OnInit, OnChanges {\n\n\n  @Input()\n  currentParty: any\n\n  @Input()\n  renderService: any\n\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n\n  borderData = mapBorderData\n  showMap: any;\n\n  constructor(public gameplayLabService: GameplayLabService) {\n  }\n\n  ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\n    console.log(\"update\")\n    console.log(this.currentParty)\n    this.updateFieldOfView();\n\n    console.log(this.currentParty.level)\n  }\n\n\n  ngOnInit(): void {\n    this.updateFieldOfView();\n  }\n\n  updateFieldOfView(): void {\n  }\n\n  isStart(levelCase) {\n    let start = this.currentParty.level.start;\n    return start.x === levelCase.x && start.y === levelCase.y\n  }\n\n  isExit(levelCase) {\n    let exit = this.currentParty.level.exit;\n    return exit.x === levelCase.x && exit.y === levelCase.y\n  }\n\n  hasPlayer(levelCase) {\n    let location = this.currentParty.player.location;\n    return location.x === levelCase.x && location.y === levelCase.y\n  }\n\n  isCaseShowable(levelCase) {\n    if (this.rangeArroundPlayer < 0)\n      return true\n    let location = this.currentParty.player.location;\n    return (Math.abs(location.x - levelCase.x) <= this.rangeArroundPlayer\n      && Math.abs(location.y - levelCase.y) <= this.rangeArroundPlayer);\n  }\n\n  borderRendered(levelCase) {\n    let borderRendered = {...mapGridTemplate}\n    let directions: Array<String> = ['left', 'right', 'top', 'bottom'];\n\n    directions.forEach((direction: string) => {\n      let door = this.gameplayLabService.doorAt(levelCase, direction.toUpperCase())\n      borderRendered[direction + \"Class\"] = \"decor-ui\"\n      if (!!door) {\n        if (door.key) {\n          borderRendered[direction+ \"Template\"] = door.name\n          borderRendered[direction + \"Class\"] = \"interact-ui\"\n        } else {\n\n        }\n\n      } else {\n        borderRendered[direction + \"Template\"] = ' '\n      }\n    })\n    return borderRendered;\n  }\n\n\n  contentRendered(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(levelCaseInput);\n    if (content[0]) {\n\n      return this.renderService.renderObj(content[0])\n    } else {\n      let nbrOfConnections = levelCaseInput.connected.length;\n      if (nbrOfConnections == 1) {\n        return \" \";\n      }\n      if (nbrOfConnections == 2) {\n        return \".\"\n      } else {\n        return \"+\"\n      }\n    }\n  }\n\n  computeClass(levelCaseInput: any) {\n    let content = this.gameplayLabService.levelContent(levelCaseInput)\n    if (content[0]) {\n      if (content[0].name === \"player\" || content[0].name === \"exit\") {\n        return \"important-ui\"\n      }\n    }\n    return \"ihm-ui\"\n  }\n}\n","<div ascii-render class=\"container decor-ui\"\n     [borderTemplate]=\"borderData\"\n>\n  <div class=\"row1\" *ngIf=\"currentParty\">\n    <div class=\"title text decor-ui\">\n      <div>M</div>\n      <div>A</div>\n      <div>P</div>\n      </div>\n    <div class=\"main asciiArt ihm-ui\"\n         [ngStyle]=\"{'grid-template-columns': 'repeat(auto-fill, '+ currentParty.level.content[0].length + ')'}\">\n      <div class=\"row\" *ngFor=\"let row of currentParty.level.content; let x = index \">\n        <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n          <ng-container *ngIf=\"isCaseShowable(levelCaseInput)\">\n            <div class=\"mapzone\"\n                 ascii-border\n                 xRepeat=\"1\"\n                 yRepeat=\"1\"\n                 [borderTemplate]=\"borderRendered(levelCaseInput)\"\n            ><span [ngClass]=\"computeClass(levelCaseInput)\">{{contentRendered(levelCaseInput)}}</span>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"legend text decor-ui\" ascii-border>\n    <span class=\"important-ui\">legend:</span>\n    <br/>\n    <div class=\"important-ui\"> ¤ = You are here</div>\n    <div class=\"important-ui\"> € = Exit</div>\n    <br/>\n    <div> A-Z = Locked door</div>\n    <div> a-z = keys</div>\n    <br/>\n    <div> | <br/>.+- = open path</div>\n  </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AsciiOnGridDivComponent} from \"./ascii-on-grid-div.component\";\nimport {AsciiInsideGridDivComponent} from \"./ascii-inside-grid.component\";\n\n\n\n@NgModule({\n  declarations: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],exports: [\n    AsciiOnGridDivComponent,\n    AsciiInsideGridDivComponent\n\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AsciiGridModule { }\n","import {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ElementRef, HostBinding,\n  Input, NgZone, OnDestroy,\n  OnInit, Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport * as borderTemplates from \"../../../labyrinth/service/render/resources/border\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\nimport {timer} from \"rxjs\";\nimport {delay} from \"rxjs/operators\";\nimport {Style} from \"@angular/cli/lib/config/schema\";\nimport {BorderTemplate} from \"../../../labyrinth/service/render/resources/border-compute\";\n\n@Component({\n  selector: 'ascii-border , [ascii-border] , div [ascii-render], span [ascii-render], button [ascii-render], p [ascii-render], h1 [ascii-render]',\n  templateUrl: './ascii-border.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./ascii-border.component.css']\n})\nexport class AsciiBorderComponent implements OnInit, AfterViewInit, AfterContentChecked, OnDestroy {\n\n  /**\n   * place the border on the outside of the div, making the div bigger\n   * put at false if you want the border on the inside, making the div the sameSize but compressing the content\n   */\n\n  @Input()\n  name?: string\n\n  @Input()\n  computeRenderEachTime?: boolean = undefined\n  haveAlreadyBeComputed: boolean = false\n\n  @Input()\n  contentClass: string\n\n  @Input()\n  xRepeat: number | undefined\n  xComputedRepeat: number = 0\n  @Input()\n  yRepeat: number | undefined\n  yComputedRepeat: number = 0\n\n  renders: {\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string\n  } = {}\n  borderClasses: {\n    default?: string,\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string,\n    topLeft?: string\n    topRight?: string\n    bottomLeft?: string\n    bottomRight?: string\n  } = {}\n\n  @Input()\n  borderTemplateName: string;\n\n  @Input()\n  borderTemplate: BorderTemplate;\n\n\n  computedData: {\n    computed?: string;\n\n    widthPx?: number;\n    heightPx?: number;\n\n    borderSizePx: {\n      top?: number,\n      bottom?: number,\n      left?: number,\n      right?: number\n    }\n  } = {borderSizePx: {}, computed: 'none'}\n\n  toClear: any[] = [];\n  @Input()\n  borderClick: any = () => {\n  }\n\n  @HostBinding(\"style\")\n get hostStyle(): CSSStyleDeclaration {\n    let hostStyle = {\n      border: 'solid transparent',\n      borderTopWidth: this.computedData.borderSizePx.top + 'px',\n      borderBottomWidth: this.computedData.borderSizePx.bottom + 'px',\n      borderRightWidth: this.computedData.borderSizePx.right + 'px',\n      borderLeftWidth: this.computedData.borderSizePx.left + 'px',\n      height: this.yRepeat ? (this.yRepeat * this.borderTemplate.leftSideHeight * LINE_HEIGHT) + 'px' : undefined,\n      width: this.xRepeat ? (this.xRepeat * this.borderTemplate.topSideWidth * CHARACTER_SPACING)+'px':undefined\n    } as CSSStyleDeclaration\n\n\n    return hostStyle;\n\n  }\n  @Input()\n  debug = false;\n\n  constructor(private readonly _changeDetectorRef: ChangeDetectorRef,\n              private hostRef: ElementRef,\n              private renderer: Renderer2,\n              private ngZone: NgZone) {\n\n  }\n\n  ngOnInit() {\n    try {\n      this.borderTemplateName = this.borderTemplateName || this.hostRef.nativeElement.nodeName\n      this.borderTemplate = this.borderTemplate || this.getAsciiBorderForName(this.borderTemplateName)\n      this.computeBorderTemplateData();\n\n      if (this.computeRenderEachTime == undefined) {\n        if(this.xRepeat&& this.yRepeat){\n          this.computeRenderEachTime = false;\n        }else\n        this.computeRenderEachTime = true// this.hostRef.nativeElement.clientWidth ? false : true\n      }\n\n      if (this.xRepeat && this.yRepeat) {\n        this.computeBorderDimension()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  computeBorderTemplateData() {\n    if (this.borderTemplate) {\n      this.computedData = {\n        ...this.computedData,\n        borderSizePx:\n          {\n            top: this.borderTemplate.topPartHeight * LINE_HEIGHT,\n            bottom: this.borderTemplate.bottomPartHeight * LINE_HEIGHT,\n            right: this.borderTemplate.rightPartWidth * CHARACTER_SPACING,\n            left: this.borderTemplate.leftPartWidth * CHARACTER_SPACING\n          }\n      }\n    }\n  }\n\n  @HostBinding('attr.dataComputed')\n  get compJson() {\n    return JSON.stringify(this.computedData)\n  }\n\n\n  /**\n   * return an array of counter\n   * @param size\n   */\n  counter(size): number[] {\n    let array = new Array<number>();\n    for (let i = 0; i < size; i++) {\n      array.push(i)\n    }\n    return array;//TODO check why dont work for modal: [...Array(size).keys()]\n  }\n\n  ngAfterViewInit() {\n    this.computeAndUpdateDimension();\n  }\n\n  private computeAndUpdateDimension() {\n    try {\n      if (this.computeBorderDimension()) {\n        this.ngZone.runOutsideAngular(() => {\n          let timeout = setTimeout(() => {\n            this._changeDetectorRef.detectChanges();\n\n            clearTimeout(timeout);\n          }, 100);\n          this.toClear.push(timeout);\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private computeBorderDimension(): boolean {\n\n    try {\n      if (!this.computedData.borderSizePx.top)\n        this.computeBorderTemplateData()\n\n\n      let mainElement = <HTMLElement>this.hostRef.nativeElement;\n\n      let height: number, width: number;\n      if (mainElement.clientWidth) {\n        height = mainElement.clientHeight// - this.computedData.borderTopSizePx - this.computedData.borderBottomSizePx\n        width = mainElement.clientWidth\n        this.computedData.computed = 'client'\n      } else if (mainElement.offsetWidth) {\n        this.computedData.computed = 'offset' + mainElement.offsetWidth\n        height = mainElement.offsetHeight - this.computedData.borderSizePx.top - this.computedData.borderSizePx.bottom\n        width = mainElement.offsetWidth - this.computedData.borderSizePx.left - this.computedData.borderSizePx.right\n      } else {\n        this.computedData.computed = 'none'\n        return false;\n      }\n      if (isNaN(height) || isNaN(width)) {\n        console.warn(\"no dimension \" + height + \" \" + width)\n        return false;\n      }\n\n      const hostHaveChangedX = this.computedData.widthPx != width\n      const hostHaveChangedY = this.computedData.heightPx != height;\n\n      let shouldComputeX = (width || this.xRepeat) && (hostHaveChangedX || this.computeRenderEachTime || !this.haveAlreadyBeComputed);\n      let shouldComputeY = (height || this.yRepeat) && (hostHaveChangedY || this.computeRenderEachTime || !this.haveAlreadyBeComputed);\n\n      if (shouldComputeX) {\n        this.computedData.widthPx = width;\n        let oldX = this.xComputedRepeat;\n        if (this.xRepeat != undefined) {\n          this.xComputedRepeat = this.xRepeat;\n        } else {\n          this.xComputedRepeat = Math.floor(width / (CHARACTER_SPACING * this.borderTemplate.topSideWidth));\n        }\n\n        let allDataPresent = this.xComputedRepeat;\n        let computedDataHaveChange = oldX != this.xComputedRepeat;\n        if (allDataPresent && computedDataHaveChange) {\n          try {\n            let counterX = this.counter(this.xComputedRepeat);\n\n\n            let splitTop = this.borderTemplate.topTemplate.split(\"\\n\")\n            let splitBottom = this.borderTemplate.bottomTemplate.split(\"\\n\")\n\n\n            this.renders = {\n              ...this.renders,\n              top: splitTop.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n              bottom: splitBottom.map((l) => counterX.map((i) => l).join('')).join('\\n'),\n\n            }\n            this.haveAlreadyBeComputed = true;\n            return true;\n          } catch (e) {\n            console.error(e);\n            return true;\n          }\n        }\n      } else {\n\n      }\n      if (shouldComputeY) {\n        console.log(\"shouldComputeY\"+ this.yRepeat)\n        this.computedData.heightPx = height;\n        let oldY = this.yComputedRepeat\n        if (this.yRepeat != undefined) {\n          this.yComputedRepeat = this.yRepeat;\n        } else {\n          this.yComputedRepeat = Math.floor(height / (LINE_HEIGHT * this.borderTemplate.leftSideHeight));\n        }\n\n        let allDataPresent = this.yComputedRepeat;\n        let computedDataHaveChange = oldY != this.yComputedRepeat;\n        if (allDataPresent && computedDataHaveChange) {\n          try {\n            let counterY = this.counter(this.yComputedRepeat);\n            this.renders = {\n              ...this.renders,\n              left: counterY.map((i) => this.borderTemplate.leftTemplate).join('\\n'),\n              right: counterY.map((i) => this.borderTemplate.rightTemplate).join('\\n')\n            }\n            this.haveAlreadyBeComputed = true;\n            return true;\n          } catch (e) {\n            console.error(e);\n            return false;\n          }\n        }\n      } else {\n      }\n    } catch (e) {\n      console.log(\"error during compute\")\n    }\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.computeRenderEachTime || this.haveAlreadyBeComputed)\n      this.ngZone.runOutsideAngular(() => {\n        let timeout=setTimeout(() => {\n          try {\n            this.computeAndUpdateDimension()\n            clearTimeout(timeout);\n          } catch (e) {\n            console.error(e);\n          }\n        }, 100);\n        this.toClear.push(timeout)\n      });\n  }\n\n\n  getAsciiBorderForName(name: string): BorderTemplate {\n\n    if (Object.keys(borderTemplates).includes(name + 'GridTemplate'))\n      return borderTemplates[name + 'GridTemplate']//TODO : we need to test the include otherwise it bug\n\n    if (Object.keys(borderTemplates).includes(name))\n      return borderTemplates[name]//TODO : we need to test the include otherwise it bug\n\n    if (name === 'BUTTON') {\n      return borderTemplates.defaultButtonBorderTemplate;\n    }\n    if (name === 'DIV') {\n      return borderTemplates.defaultGridTemplate;\n    }\n    if (name === 'H1') {\n      return borderTemplates.defaultTitleBorderTemplate;\n    }\n    return borderTemplates.defaultGridTemplate;\n  }\n\n  styleOfPart(directions: string[]) {\n    let style: any = {position: 'absolute', top: 0, left: 0}\n    directions.forEach(dir => {\n      if (dir === 'left') {\n        style.left = -this.computedData.borderSizePx.left + 'px';\n        style.width = this.computedData.borderSizePx.left + 'px';\n      }\n      if (dir === 'right') {\n        style.width = this.computedData.borderSizePx.right + 'px';\n        style.right = -this.computedData.borderSizePx.right + 'px';\n        style.left = undefined;\n        //style.marginRight = -this.computedData.borderSizePx.right + 'px';\n        //style.top = '0px';\n        /* if (directions.length === 1) {\n           style.top = this.computedData.borderSizePx.top + 'px';\n         }*/\n      }\n      if (dir === 'top') {\n        style.top = -this.computedData.borderSizePx.top + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n      }\n      if (dir === 'bottom') {\n        style.bottom = -this.computedData.borderSizePx.bottom + 'px';\n        if (directions.length != 1)\n          style.width = (this.xComputedRepeat * CHARACTER_SPACING) + 'px'\n        style.top = undefined;\n      }\n    })\n    return style;\n  }\n\n  ngOnDestroy(): void {\n    this.toClear.forEach((timeout)=>{\n      clearTimeout(timeout)\n    })\n  }\n}\n\n","<ng-content></ng-content>\n\n\n<ng-container *ngIf=\"debug\">\n  <span>\n  <div class=\"debug top left\"></div>\n  <div class=\"debug top right\"></div>\n  <div class=\"debug bottom left\"></div>\n  <div class=\"debug bottom right\"></div>\n    </span>\n</ng-container>\n\n<div class=\"asciiArt border-part top left\"\n      style=\"display: inline-block;position: absolute;\"\n      [ngStyle]=\"styleOfPart(['top','left'])\"\n      [ngClass]=\"borderClasses.topLeft||borderClasses.default\">{{borderTemplate.topLeftTemplate}}</div>\n\n  <div\n    class=\"asciiArt border-part top\"\n    [ngClass]=\"borderClasses.top||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top'])\"\n    (click)=\"this.borderClick('TOP',$event)\"\n  >{{renders.top}}</div>\n\n  <div\n    class=\"asciiArt border-part top right\"\n    [ngClass]=\"borderClasses.topRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['top','right'])\"\n  >{{borderTemplate.topRightTemplate}}</div>\n\n\n  <div class=\"asciiArt rightSide\"\n        [ngClass]=\"borderClasses.right||borderClasses.default\"\n        [ngStyle]=\"styleOfPart(['right'])\"\n        (click)=\"this.borderClick('RIGHT',$event)\">{{renders.right}}</div>\n\n\n\n\n<div class=\"asciiArt border-part leftSide\" [ngClass]=\"borderClasses.left||borderClasses.default\"\n     *ngIf=\"yComputedRepeat>0\"\n     style=\"position: absolute;\"\n     [ngStyle]=\"styleOfPart(['left'])\"\n     (click)=\"this.borderClick('LEFT',$event)\"\n>{{renders.left}}</div>\n\n\n<div class=\"borderBottom\"\n\n></div>\n    <div\n      class=\"asciiArt border-part bottom left\"\n      [ngStyle]=\"styleOfPart(['bottom','left'])\"\n      [ngClass]=\"borderClasses.bottomLeft||borderClasses.default\"\n    >{{borderTemplate.bottomLeftTemplate}}</div>\n  <div\n    (click)=\"this.borderClick('BOTTOM',$event)\"\n    *ngIf=\"xComputedRepeat>0\"\n    class=\"asciiArt border-part bottom\"\n    [ngClass]=\"borderClasses.bottom||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom'])\"\n  >{{renders.bottom}}</div>\n  <div\n    class=\"asciiArt border-part bottom right\"\n    [ngClass]=\"borderClasses.bottomRight||borderClasses.default\"\n    [ngStyle]=\"styleOfPart(['bottom','right'])\"\n  >{{borderTemplate.bottomRightTemplate}}</div>\n\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CharacterFormComponent} from './characterEditor/character-form/character-form.component';\nimport {NewLabyrinthFormComponent} from './labyrinth/new-form/new-labyrinth-form.component';\nimport {MenuComponent} from './labyrinth/menu/menu.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AsciiModule} from \"./utils/ascii/ascii.module\";\nimport {LabyrinthGameModule} from \"./labyrinth/game-view/labyrinth-game.module\";\nimport { SoundComponent } from './utils/ui/atom/sound/sound.component';\nimport { MusicViewComponent } from './music-view/music-view.component';\nimport {MusicModule} from \"./music-view/music.module\";\nimport { AsciiGalleryComponent } from './ascii-gallery/ascii-gallery.component';\nimport { LoadingComponent } from './labyrinth/loading/loading.component';\nimport {LoadingModule} from \"./labyrinth/loading/loading.module\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharacterFormComponent,\n    NewLabyrinthFormComponent,\n    MenuComponent,\n    SoundComponent,\n    AsciiGalleryComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AsciiModule,\n    LabyrinthGameModule,\n    MusicModule, LoadingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\n\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {CharacterRenderData} from \"./character-render.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract  class AsciiRenderService {\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService) {\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate:string=\"TODO\"\n\n  bottomDoorTemplate:string=\"TODO\"\n  leftDoorTemplate:string=\"TODO\";\n  rightDoorTemplate:string=\"TODO\";\n  leftWallTemplate:string=\"TODO\"\n  rightWallTemplate:string=\"TODO\";\n\n  topWallTemplate:string=\"TODO\";\n\n  bottomWallTemplate:string=\"TODO\";\n\n  leftBottomCornerTemplate :string=\"TODO\";\n  rightBottomCornerTemplate:string=\"TODO\";\n\n  leftTopCornerTemplate:string=\"TODO\";\n  rightTopCornerTemplate:string=\"TODO\";\n\n  renderSide(direction: string, door: any) {\n    let templateName = direction.toLowerCase() + (door ? \"Door\" : \"Wall\") + \"Template\";\n\n    let data: any = {...this.defaultData, name: door && door.name != \"door\" ? door.name : \" \"};\n    data.nameReversed = data.name\n    data.closedLeftReversed = data.closedLeft;\n    if (door && door.name == \"door\") {\n      data.closedTop = data.closedTop.replace(/./g, \" \")\n      data.closedBottom = data.closedBottom.replace(/./g, \" \")\n      data.closedLeft = data.closedLeft.replace(/./g, \" \")\n      data.closedLeftReversed = data.closedLeft;\n    }\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n  }\n\n  renderCorner(dir1: string, dir2: string) {\n    let templateName = dir2.toLowerCase() + this.capitalize(dir1.toLowerCase()) + \"CornerTemplate\";\n    let data = this.defaultData\n    return this.asciiGeneratorService.templateString(this[templateName], data)\n\n  }\n\n  capitalize(s) {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n  abstract renderPlayer(characterData: CharacterRenderData)\n\n  abstract renderCenter(zone, party): String\n\n  abstract renderObj(obj: any, characterRenderData: CharacterRenderData)\n}\n","export class BorderTemplate {\n  topTemplate = \"\";\n  bottomTemplate = \"\";\n  leftTemplate = \"\";\n  rightTemplate = \"\";\n  topLeftTemplate = \"\";\n  topRightTemplate = \"\";\n  bottomLeftTemplate = \"\";\n  bottomRightTemplate = \"\";\n  leftPartWidth = 1;\n  topSideWidth = 1;\n  topPartHeight = 1;\n  leftSideHeight = 1;\n  rightPartWidth = 1;\n  bottomPartHeight = 1;\n}\n\n\nexport function asciiStringToGridObject(str, leftCornerWidth, topSideWidth,\n                                        leftCornerHeight, leftSideHeight): BorderTemplate {\n  try {\n    let templates = new BorderTemplate();\n\n    let strR = str.split(\"\\n\")\n\n    for (let y = 0; y < leftCornerHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.topLeftTemplate += strR[y][x]\n      }\n      templates.topLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.topTemplate += strR[y][x]\n      }\n      templates.topTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.topRightTemplate += strR[y][x]\n      }\n      templates.topRightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight; y < leftCornerHeight + leftSideHeight; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.leftTemplate += strR[y][x]\n      }\n      templates.leftTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.rightTemplate += strR[y][x]\n      }\n      templates.rightTemplate += \"\\n\"\n    }\n\n    for (let y = leftCornerHeight + leftSideHeight; y < strR.length; y++) {\n      for (let x = 0; x < leftCornerWidth; x++) {\n        templates.bottomLeftTemplate += strR[y][x]\n      }\n      templates.bottomLeftTemplate += \"\\n\"\n      for (let x = leftCornerWidth; x < leftCornerWidth + topSideWidth; x++) {\n        templates.bottomTemplate += strR[y][x]\n      }\n\n      templates.bottomTemplate += \"\\n\"\n      for (let x = leftCornerWidth + topSideWidth; x < strR[y].length; x++) {\n        templates.bottomRightTemplate += strR[y][x]\n      }\n      templates.bottomRightTemplate += \"\\n\"\n    }\n    Object.keys(templates).forEach((k) => {\n        if (templates[k].slice) {\n          if(templates[k].endsWith(\"\\n\"))\n            templates[k] = templates[k].slice(0, -1);\n          //add a space at the end so the template with \\n have the same length than the other\n          if ((k != 'bottomTemplate' && k != 'topTemplate')) {\n            templates[k] += \" \"\n          }\n        }\n      }\n    )\n    let topRightFirstLine = templates.topRightTemplate.split(\"\\n\")[0];\n    let borderTemplate = {\n      ...templates,\n      leftPartWidth: leftCornerWidth,\n      topSideWidth,\n      leftSideHeight,\n      rightPartWidth: topRightFirstLine.length + ( templates.topRightTemplate.includes('\\n') ? 1 : 0),\n      topPartHeight: leftCornerHeight,\n      bottomPartHeight: templates.bottomLeftTemplate.split(\"\\n\").length,\n    } as BorderTemplate;\n\n\n\n    return borderTemplate;\n  } catch (e) {\n    console.error(e)\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {SoundService} from \"../../../../labyrinth/service/sound/sound.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'ui-sound',\n  templateUrl: './sound.component.html',\n  styleUrls: ['./sound.component.css']\n})\nexport class SoundComponent implements OnInit, OnDestroy {\n  soundOn: boolean;\n  on = '' +\n    '           __ \\n' +\n    ' ((\\'c\\') < d d \\n';\n  //≮\n  off = '' +\n    '            _ \\n' +\n    ' ((\\'x\\') ° (d) \\n';\n  private subscription: Subscription;\n\n  constructor(private soundService: SoundService) {\n\n    this.subscription = this.soundService.subscribeSoundOn((data) => {\n\n      this.soundOn = data;\n    })\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe()\n  }\n\n  toogle() {\n    this.soundService.toogleSound();\n\n  }\n}\n","<div ascii-border (click)=\"toogle()\" class=\"asciiArt\">\n  <div app-ascii *ngIf=\"soundOn\" tooltip=\"mute\" [content]=\"on\" ></div>\n  <div app-ascii *ngIf=\"!soundOn\" tooltip=\"music\" [content]=\"off\"></div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styles: [`\n    .container {\n        max-width: ${CHARACTER_SPACING * 16 * 4}px;\n        min-width: ${CHARACTER_SPACING * 10 * 4}px;\n        min-height: ${LINE_HEIGHT * 6 * 4}px;\n        text-align: center;\n        padding: ${LINE_HEIGHT}px ${CHARACTER_SPACING}px;\n    }\n\n    .content {\n\n    }\n    ul {\n        text-align: left;\n    }\n\n  `]\n})\nexport class LoadingComponent implements OnInit {\n\n  currentLoadingMessage: number = 0;\n  maxNumberOfMessage: number = 6;\n\n  constructor(public fullViewRenderService: FullsizeAsciiRenderService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  clickDuringLoading() {\n    this.currentLoadingMessage = Math.floor( this.maxNumberOfMessage*Math.random())\n    console.log( this.currentLoadingMessage )\n  }\n\n}\n","<div ascii-render\n     class=\"container text background-ui\"\n     borderTemplateName=\"loadingBorderGridTemplate\">\n  <h1 ascii-render class=\"ihm-ui\"> Labyrinth generating ...</h1>\n  <br/>\n\n\n  <div class=\"content ihm-ui\" ascii-border>\n    <div>Do you know it ? ({{currentLoadingMessage}}/{{maxNumberOfMessage}})</div>\n<br/>\n    <ng-container  *ngIf=\"currentLoadingMessage===0\">\n      Find the ladder to the exit to win.\n      <div app-render class=\"asciiArt\">{{fullViewRenderService.renderObj({name: 'exit'})}}</div>\n    </ng-container >\n\n    <ng-container *ngIf=\"currentLoadingMessage===1\">\n      You can move by :\n      <ul>\n        <li>clicking on the room you want to go</li>\n        <li>clicking on the door you want to use</li>\n        <li>using directional key</li>\n        <li>using the pad at the bottom of the screen</li>\n      </ul>\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===2\">\n      some door are closed and need a key to be open\n    </ng-container>\n    <ng-container *ngIf=\"currentLoadingMessage===3\">\n      You have a map\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===4\">\n      <div>The lab didn't really take that much time to generate.</div>\n      <div>The dev just wanted a way to give tips to player.</div>\n    </ng-container>\n\n    <ng-container *ngIf=\"currentLoadingMessage===5\">All labyrinths always have a solution\n    </ng-container>\n    <br/>\n    <div>\n      <button ascii-render (click)=\"clickDuringLoading()\">next advice</button>\n    </div>\n  </div>\n\n\n</div>\n","export const CHARACTER_FONT_SIZE = 12;\nexport const LINE_HEIGHT = 14;\nexport const CHARACTER_HEIGHT = 8;\nexport const CHARACTER_SPACING = 9;\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {\n  viewEmptyZones\n} from \"../../service/render/resources/border\";\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {FullsizeAsciiRenderService} from \"../../service/render/fullsize-ascii-render.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../../utils/ascii/AsciiConst\";\nimport {parseKotlinToJsView} from \"../../../utils/kotlinUtils\";\n\n@Component({\n  selector: 'level-view',\n  templateUrl: './level-view.component.html',\n  styles: [`\n    .levelRowRender {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, ${CHARACTER_SPACING * 30}px);\n    grid-template-rows: repeat(auto-fit, ${LINE_HEIGHT * 15}px);\n  }\n  `]\n})\nexport class LevelViewComponent implements OnInit, OnChanges {\n\n  @Input()\n  currentParty: any\n\n  constructor(public gameplayLabService: GameplayLabService,\n              public renderService: FullsizeAsciiRenderService) {\n\n  }\n\n  ngOnChanges(changes: import(\"@angular/core\").SimpleChanges): void {\n    this.updateFieldOfView();\n  }\n\n  @Input()\n  rangeArroundPlayer: number = -1;\n  fieldOfView: Array<Array<any>>;\n\n  ngOnInit(): void {\n    this.updateFieldOfView();\n  }\n\n  public updateFieldOfView() {\n    if (this.rangeArroundPlayer === -1) {\n      this.fieldOfView = this.currentParty.level.content;\n    } else {\n      this.fieldOfView = new Array();\n      let location = this.currentParty.player.location;\n      for (let dy = -this.rangeArroundPlayer; dy <= this.rangeArroundPlayer; dy++) {\n        this.fieldOfView[this.rangeArroundPlayer + dy] = new Array();\n        for (let dx = -this.rangeArroundPlayer; dx <= this.rangeArroundPlayer; dx++) {\n\n          let x: number = 0 + location.x + dx;\n          let y: number = 0 + location.y + dy;\n          let ix = 0 + this.rangeArroundPlayer + dx;\n          let iy = 0 + this.rangeArroundPlayer + dy;\n\n          if (x >= 0 && y >= 0)\n            if(this.currentParty.level.content[y])\n            this.fieldOfView[iy][ix] = this.currentParty.level.content[y][x]\n        }\n      }\n    }\n  }\n\n\n  emptyRendered(x, y) {\n\n    let dx = x + this.currentParty.player.location.x\n    let dy = y + this.currentParty.player.location.y\n\n    let index = (dx + dy) % viewEmptyZones.length;\n    let borderTemplate = viewEmptyZones[index];\n    return borderTemplate;\n  }\n}\n","<div class=\"levelRender\" >\n  <div class=\"levelRowRender\" *ngFor=\"let row of fieldOfView; let x = index \">\n    <ng-container *ngFor=\"let levelCaseInput of row; let y = index\">\n      <ng-container *ngIf=\"!!levelCaseInput; else backgroundZone\">\n        <app-zone-view [zone]=\"levelCaseInput\"> </app-zone-view>\n      </ng-container>\n      <ng-template #backgroundZone>\n        <div app-ascii class=\"zone outside background-ui\"\n        [content]=\"emptyRendered(x,y)\"\n        >\n        </div>\n      </ng-template>\n    </ng-container>\n  </div>\n</div>\n","import {Component, HostListener, OnDestroy, OnInit} from '@angular/core';\nimport {GameplayLabService} from \"../../service/gameplay-lab.service\";\nimport {DataStorageService} from \"../../service/data-storage.service\";\n\n@Component({\n  selector: 'keypad-form',\n  templateUrl: './keypad-form.component.html',\n  styleUrls: ['./keypad-form.component.css']\n})\nexport class KeypadFormComponent implements OnInit, OnDestroy {\n  message: string = \"use keyword to move or click on destination, use enter or click to grab object\\n\";\n  subscription: any;\n\n  constructor(private gameplayLabService: GameplayLabService, private dataService: DataStorageService) {\n\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.dataService.lastMessage$.subscribe((m) => {\n      this.message = m\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.gameplayLabService.takeAll();\n    }\n    if (event.key === 'ArrowUp') {\n      this.gameplayLabService.move('TOP');\n    }\n    if (event.key === 'ArrowDown') {\n      this.gameplayLabService.move('BOTTOM');\n    }\n    if (event.key === 'ArrowLeft') {\n      this.gameplayLabService.move('LEFT');\n    }\n    if (event.key === 'ArrowRight') {\n      this.gameplayLabService.move('RIGHT');\n    }\n  }\n\n  take(): void {\n    this.gameplayLabService.takeAll();\n  }\n}\n","<div app-ascii>\n  <div>&nbsp;&nbsp;&nbsp;&nbsp;+---+   </div>\n  <div>\n    <span>&nbsp;&nbsp;&nbsp;&nbsp;|</span>\n    <span class=\"key\" (click)=\"move('TOP')\">/^\\</span>\n    <span>|  </span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('LEFT')\"><<-</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('BOTTOM')\" >\\V/</span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"move('RIGHT')\">->></span>\n    <span>|</span>\n    <span class=\"key\" (click)=\"take()\">Prendre</span>\n    <span>|</span>\n  </div>\n  <div>+---+---+---+-------+</div>\n  <div> {{message}}</div>\n  </div>\n","import {\n  Component, ElementRef, HostBinding, Input,\n  OnInit, ViewChild\n} from '@angular/core';\nimport {CHARACTER_HEIGHT, CHARACTER_SPACING, LINE_HEIGHT} from \"../AsciiConst\";\n\n@Component({\n  selector: '[app-ascii-on-grid-div]',\n  template: `\n    <div class=\"grid-content\"\n         [ngStyle]=\"{gridTemplateRows: gridRow, gridTemplateColumns: gridColumn}\">\n      <ng-content></ng-content>\n    </div>`,\n  styles: [\n    ` .grid-content {\n         display: inline-grid;\n         grid-auto-flow: row dense;\n         grid-template-rows: repeat(auto-fill, ${LINE_HEIGHT}px);\n         grid-template-columns: repeat(15, ${CHARACTER_SPACING}px);\n    }`\n  ]\n})\nexport class AsciiOnGridDivComponent implements OnInit {\n\n  public gridColumn: string;\n\n\n  public gridRow: string;\n  @Input()\n  public width: string = 'auto-fit';\n\n  @Input()\n  public height: string | undefined;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.gridColumn = 'repeat(' + this.width + ', ' + CHARACTER_SPACING + ')';\n    if (this.height)\n      this.gridRow = 'repeat(' + this.width + ', ' + CHARACTER_HEIGHT + ')';\n  }\n\n}\n","import {Component, OnInit, Input, OnChanges} from '@angular/core';\nimport {compositionUtils, harmoniqueUtils} from \"music-generator\";\n\n@Component({\n  selector: 'app-partition-view',\n  template: `<span *ngIf=\"!partitionForms\" class=\"text\">no partition</span>\n  <div class=\"vertical musicForm\" *ngFor=\"let form of partitionForms\" [style]=\"{borderColor:borderColor}\">\n    <ng-container *ngIf=\"isPattern(form) \">\n      <app-temp-view *ngFor=\"let note of form\" [temp]=\"note\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"isNote(form) \">\n      <app-temp-view [temp]=\"form\" [scale]=\"scale\"></app-temp-view>\n    </ng-container>\n    <ng-container *ngIf=\"!isNote(form)&&!isPattern(form) \">\n      <app-partition-view [partitionForms]=\"form\" [initscale]=\"scale\"></app-partition-view>\n    </ng-container>\n  </div> `\n  ,\n  styleUrls: ['./partition-view.component.css']\n})\nexport class PartitionViewComponent implements OnInit, OnChanges {\n  @Input()\n  partitionForms: Array<any>;\n  @Input()\n  initscale: any\n  scale: any;\n  borderColor: string\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.borderColor = '#' + Math.round(Math.random() * 9) + Math.round(Math.random() * 9) + Math.round(Math.random() * 9)\n  }\n\n  ngOnChanges(): void {\n    if (this.initscale)\n      this.scale = this.initscale\n    else if (this.partitionForms) {\n      let tunes = compositionUtils.flatPartition(this.partitionForms).map((n) => n.tune)\n      this.scale = harmoniqueUtils.getSuroundingTunes(tunes).sort((a, b) => harmoniqueUtils.getLevel(b) - harmoniqueUtils.getLevel(a));\n    }\n  }\n\n\n  isPattern(form: any) {\n    return Array.isArray(form) && !Array.isArray(form[0])\n\n  }\n\n  isNote(form: any) {\n    return !Array.isArray(form)\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\n\n\nexport class CharacterRenderData {\n  eye: String = \"'\";\n  hair: String = \"(\";\n  torso: String = \"M\";\n  hat: String = \"_--_\";\n  leg: String = \"d\";\n}\n\nexport class TemplateAnimation {\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterRenderService {\n\n  constructor(private asciiGeneratorService: AsciiGeneratorService) {\n    this.bodyPartsKey = Object.keys(this.defaultData)\n    this.templateRight = this.asciiGeneratorService.reverseTemplate(this.templateLeft, this.bodyPartsKey)\n  }\n\n  public bodyPartsKey: Array<String>\n\n  templateLeft: String =\n    \"${hat}\\n\" +\n    \"${hair}${eye}${eye} ${hairReversed}${hairReversed}\\n\" +\n    \" /${torso} \\\\ \\n\" +\n    \"  ${leg}${leg}  \\n\";\n\n  templateFront: String =\n    \"${hat}\\n\" +\n    \"${hair} ${eye}${eye} ${hairReversed}\\n\" +\n    \" / ${torso}\\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n\n  templateBack: String =\n    \"${hat}\\n\" +\n    \"${hair}${hair}${hair}${hairReversed}${hairReversed}${hairReversed}\\n\" +\n    \" /  \\\\ \\n\" +\n    \"  ${leg}${legReversed}  \\n\";\n  templateRight: String\n  defaultData: CharacterRenderData = Object.assign(new CharacterRenderData(), {\n    eye: \"'\",\n    hair: \"(\",\n    torso: \"M\",\n    hat: \" _--_ \",\n    leg: \"d\"\n  })\n\n\n  render(data: CharacterRenderData, direction = 'LEFT') {\n\n    let template;\n    switch (direction) {\n      case 'LEFT':\n        template = this.templateLeft;\n        break;\n      case 'RIGHT':\n        template = this.templateRight;\n        break;\n      case 'TOP':\n        template = this.templateBack;\n        break;\n      case 'BOTTOM':\n        template = this.templateFront;\n        break;\n      default:\n        template = this.templateLeft;\n        break;\n    }\n    return this.asciiGeneratorService.templateString(template, {...data, ...this.asciiGeneratorService.reverseData(data)})\n\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {AsciiGeneratorService} from \"../../../utils/ascii/ascii-generator.service\";\nimport {AsciiRenderService} from \"./ascii-render.service\";\nimport {exitTemplate, startTemplate} from \"./resources/border\";\nimport {DataStorageService} from \"../data-storage.service\";\nimport {Subscription} from \"rxjs\";\nimport {CharacterRenderData, CharacterRenderService} from \"./character-render.service\";\nimport * as gameRules from \"gameRules\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullsizeAsciiRenderService extends AsciiRenderService implements OnDestroy {\n  private dirSub: Subscription;\n  private playerRenderDataSub: Subscription;\n  private playerDirection: String;\n  private playerRenderData: CharacterRenderData;\n\n\n  constructor(protected asciiGeneratorService: AsciiGeneratorService,\n              private dataStorageService: DataStorageService,\n              private characterRenderService: CharacterRenderService) {\n    super(asciiGeneratorService);\n    this.partsKeys = Object.keys(this.defaultData)\n    this.rightDoorTemplate = this.asciiGeneratorService.reverseTemplate(this.leftDoorTemplate, this.partsKeys)\n    this.rightWallTemplate = this.asciiGeneratorService.reverseTemplate(this.leftWallTemplate, this.partsKeys)\n    this.dirSub = this.dataStorageService\n      .getPlayerDirection()\n      .subscribe((c) => this.playerDirection = c);\n    this.playerRenderDataSub = this.dataStorageService\n      .getCurrentCharaRenderData()\n      .subscribe((c) => this.playerRenderData = c)\n\n  }\n\n  defaultData = {\n    name: \"#\",\n    closedBottom: \"-----\",\n    closedTop: \"-----\",\n    closedLeft: \"|\"\n\n  }\n  partsKeys = []\n  topDoorTemplate = \"-------------------\\n\" +\n    \"\\n\" +\n    \"    \\\\¨¨¨¨¨¨¨¨¨/\\n\" +\n    \"     \\\\   ${name}   /\\n\" +\n    \"______\\\\${closedTop}/______\"\n\n  bottomDoorTemplate = \"¨¨¨¨¨¨/${closedBottom}\\\\¨¨¨¨¨¨\\n\" +\n    \"     /   ${name}   \\\\\\n\" +\n    \"    /_________\\\\\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n  leftDoorTemplate = \" |   |\\n\" +\n    \" ||\\\\ |\\n\" +\n    \" || \\\\|\\n\" +\n    \" ||  \\\\\\n\" +\n    \" || ${name}${closedLeft}\\n\" +\n    \" ||  ${closedLeft}\\n\" +\n    \" |'---\\n\" +\n    \" |   |\"\n  rightDoorTemplate;\n  leftWallTemplate = \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\\n\" +\n    \" |   |\";\n  rightWallTemplate;\n\n  topWallTemplate = \"-------------------\\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \" \\n\" +\n    \"___________________\"\n\n  bottomWallTemplate = \"¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"-------------------\"\n\n  leftBottomCornerTemplate = \" |   /\\n\" +\n    \" |  / \\n\" +\n    \" | /  \\n\" +\n    \" |/   \\n\" +\n    \" '----\";\n  rightBottomCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftBottomCornerTemplate, this.partsKeys)\n\n\n  leftTopCornerTemplate = \" +----\\n\" +\n    \" |\\\\   \\n\" +\n    \" | \\\\  \\n\" +\n    \" |  \\\\ \\n\" +\n    \" |   \\\\\"\n  rightTopCornerTemplate = this.asciiGeneratorService.reverseTemplate(this.leftTopCornerTemplate, this.partsKeys)\n\n\n  renderPlayer(characterData, direction = undefined) {\n    return this.characterRenderService.render(characterData, direction)\n  }\n\n  renderCenter(zone, party): String {\n    return \"\\n\\n\" + zone.content.filter(it => it.className !== gameRules.fr.perso.labyrinth.freezone.model.DoorObjectZone.name).map((it) => \"[\" + it.name + \"]\");\n  }\n\n\n  renderObj(obj: any) {\n\n    if (obj.name === 'exit')\n      return exitTemplate\n    if (obj.name === 'start')\n      return startTemplate\n    if (obj.name === 'player')\n      return this.renderPlayer(this.playerRenderData, this.playerDirection)\n    if (obj.type === \"key\")\n      return `(${obj.name})--±`\n    if (obj.name === \"boussole\")\n      return `(;)`\n    if (obj.name === \"radar\")\n      return `(®)`\n    if (obj.name === \"map\")\n      return `/#/`\n    if (obj.name === \"compas\")\n      return `%/`\n    return `[${obj.name}]`\n  }\n\n  ngOnDestroy(): void {\n\n    this.dirSub.unsubscribe();\n    this.playerRenderDataSub.unsubscribe();\n  }\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit, ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CHARACTER_SPACING} from \"../AsciiConst\";\n\n@Component({\n  selector: 'app-ascii-character',\n  templateUrl: './ascii-character.component.html',\n  styleUrls: ['./ascii-character.component.css'],\n\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AsciiCharacterComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  @Input()\n  content: any;\n\n  @Input()\n  tooltip: string;\n\n  xRepeat: number = 1\n\n  @ViewChild('contentDiv') contentDiv: ElementRef\n\n  constructor(  private readonly _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    if((<HTMLElement>this.contentDiv.nativeElement))\n    this.xRepeat =  Math.ceil((<HTMLElement>this.contentDiv.nativeElement).getBoundingClientRect().width / CHARACTER_SPACING)\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.ngAfterViewInit();\n  }\n\n}\n","<div [ngStyle]=\"{'column-span':this.xRepeat}\">\n  <span #contentDiv app-ascii class=\"content\"\n             [tooltip]=\"tooltip\"\n             [content]=\"content\"></span>\n</div>\n","import {Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\n\nimport {GenerateLabService} from \"../service/generate-lab.service\";\nimport {parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport {MapAsciiRenderService} from \"../service/render/map-ascii-render.service\";\nimport {FullsizeAsciiRenderService} from \"../service/render/fullsize-ascii-render.service\";\nimport {LevelViewComponent} from \"./level-view/level-view.component\";\nimport {DataStorageService} from \"../service/data-storage.service\";\nimport {GameplayLabService} from \"../service/gameplay-lab.service\";\nimport {AsciiModalComponent} from \"../../utils/ascii/ascii-modal/ascii-modal.component\";\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {SoundService} from \"../service/sound/sound.service\";\nimport {CHARACTER_SPACING, LINE_HEIGHT} from \"../../utils/ascii/AsciiConst\";\nimport {APP_BASE_HREF} from \"@angular/common\";\n\n@Component({\n  selector: 'app-labyrinth-game',\n  templateUrl: './labyrinth-game.component.html',\n  styleUrls: ['./labyrinth-game.component.css'],\n\n  styles: [`\n    .container {\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 4}px;\n      grid-template-rows: ${LINE_HEIGHT * 45}px ${LINE_HEIGHT * 8}px;\n      grid-template-areas:\n    \"main sidebar\"\n    \"toolbar toolbar\";\n      margin-left: auto;\n      margin-right: auto;\n      width: ${CHARACTER_SPACING * 110}px;\n      overflow-x: hidden;\n    }\n\n    .menuBar {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: center;\n    }\n\n    .toolbar {\n      z-index: 100;\n      grid-area: toolbar;\n      display: grid;\n      grid-template-columns: ${CHARACTER_SPACING * 100}px ${CHARACTER_SPACING * 6}px 1fr;\n    }\n\n    .noPartyMessage {\n      padding: ${LINE_HEIGHT * 1}px ${CHARACTER_SPACING * 1}px;\n    }\n\n  `]\n})\nexport class LabyrinthGameComponent implements OnInit, OnDestroy {\n  currentParty: any\n  currentLevel: any\n  @ViewChild('level-view') levelView: LevelViewComponent;\n  @ViewChild('winModal') winModal: AsciiModalComponent;\n  @ViewChild('loadingModal') loadingModal;\n  score: any;\n  private subscriptionCurrentParty: Subscription;\n  private toClear: any[] = [];\n\n  constructor(private labService: GenerateLabService,\n              private dataStorageService: DataStorageService,\n              private gameplayLabService: GameplayLabService,\n              public fullViewRenderService: FullsizeAsciiRenderService,\n              public mapRenderService: MapAsciiRenderService,\n              private router: Router,\n              private soundService: SoundService,\n  ) {\n  }\n\n  ngOnInit(): void {\n\n    this.subscribeCurrentParty()\n    this.soundService.playGameMusic()\n  }\n\n  subscribeCurrentParty(): any {\n    this.subscriptionCurrentParty = this.dataStorageService.getCurrentPartyView()\n      .subscribe((nextParty) => {\n\n          this.currentParty = nextParty\n          if (nextParty) {\n            if (this.currentParty.status == \"WIN\") {\n              this.winModal.show()\n            }\n            this.score = this.gameplayLabService.computePartieScore();\n          }\n        }\n      )\n    return this.currentParty\n  }\n\n  move(direction: string) {\n    this.gameplayLabService.move(direction);\n  }\n\n  take() {\n    this.gameplayLabService.takeAll();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionCurrentParty.unsubscribe();\n    this.toClear.forEach((timer) => clearInterval(timer))\n  }\n\n  nextLevel(): void {\n    this.loadingModal.show();\n    this.winModal.hide();\n\n    let timer = new Promise((resolve) => {\n      // after 1 second signal that the job is finished with an error\n      this.toClear.push(setTimeout(() => resolve('done'), 5000));\n    });\n    let generation = new Promise((resolve) => {\n      // not taking our time to do the job\n      resolve(this.labService.generate((parseInt(this.score.size) + 1), this.currentParty.player.name)); // immediately give the result: 123\n\n    });\n\n    Promise.all([timer, generation]).then(() => {\n      this.loadingModal.hide()\n      this.router.navigateByUrl('/game');\n    })\n\n  }\n\n}\n\n","<div class=\"menuBar text\" ascii-border borderTemplateName=\"doubleGridTemplate\">\n  <span>LAB GENERATOR </span>\n  <button ascii-render class=\"ihm-ui\"><a [routerLink]=\"'/menu'\" class=\"interact-ui text\">menu</a></button>\n  <button ascii-render class=\"ihm-ui\"><a [routerLink]=\"'/new'\" class=\"interact-ui text\">new Labyrinth</a></button>\n  <span></span>\n</div>\n<div class=\"noPartyMessage\" *ngIf=\"!currentParty\">\n  <div ascii-border class=\"text interact-ui\">no game loaded for the moment, please wait or create a new game\n    <button class=\"ihm-ui\" ascii-border><a class=\"text interact-ui\" href=\"./new\">new game</a></button>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"currentParty\">\n  <div class=\"mainArea\">\n    <level-view [currentParty]=\"currentParty\"\n                [rangeArroundPlayer]=\"1\"\n    ></level-view>\n  </div>\n  <div class=\"sidebar\">\n\n    <app-sliding\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'-100%'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-81px)',\n       left:'100%'}\"\n      [slideOnlyOnClick]=\"true\"\n      style=\"background-color:red; overflow: hidden;\"\n    >\n      <map-view [currentParty]=\"currentParty\"\n                [renderService]=\"mapRenderService\"\n      ></map-view>\n\n\n    </app-sliding>\n\n    <app-sliding\n      slideOnlyOnClick=\"true\"\n      [openData]=\"{position:'absolute',\n      transform: 'translateX(-50%)',\n      left:'50%',\n      bottom:'0'}\"\n      [closeData]=\"{position:'absolute',\n           transform: 'translateX(-27px)',\n       left:'-100%',\n          bottom:'0'}\">\n      <div class=\"inventoryArea\">\n        <inventory-view\n          [player]=\"this.currentParty.player\"\n        ></inventory-view>\n      </div>\n    </app-sliding>\n\n  </div>\n  <div class=\"toolbar\">\n    <div class=\"gameplay\">\n      <keypad-form></keypad-form>\n    </div>\n    <div class=\"inventoryArea\">\n\n    </div>\n  </div>\n  <app-ascii-modal #winModal class=\"text\">\n    <div ascii-border  class=\"background-ui\">\n    <h1 ascii-border  class=\" text important-ui\"> YOU WIN !</h1>\n    <span app-ascii>{{fullViewRenderService.renderObj({name: 'exit'})}}</span>\n    <span app-ascii>\n      {{fullViewRenderService.renderObj(this.currentParty.player)}}\n    </span>\n\n\n    <div ascii-border xRepeat=\"40\">\n      <div>total size:{{this.score.size}}</div>\n      <div>total number of room:{{this.score.numberOfRooms}}</div>\n      <div>minimum solution:{{this.score.solutionLength}} m</div>\n      <div>total number of wrong exit:{{this.score.numberOfCulDeSac}}</div>\n      <div>total walked distance:{{this.score.numberOfSteps}} m</div>\n      <div></div>\n      <div>total score:{{this.score.score}}</div>\n    </div>\n    <button ascii-border class=\"important-ui\" (click)=\"nextLevel()\">next level</button>\n    </div>\n  </app-ascii-modal>\n\n  <app-ascii-modal #loadingModal>\n    <app-loading></app-loading>\n  </app-ascii-modal>\n\n\n</div>\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {GenerateLabService} from \"./generate-lab.service\";\nimport {getFromKotlin, parseKotlinPathToJsView, parseKotlinToJsView} from \"../../utils/kotlinUtils\";\nimport * as gameRules from \"gameRules\";\nimport {DataStorageService} from \"./data-storage.service\";\nimport findKey from 'lodash/findKey';\nimport {SoundService} from \"./sound/sound.service\";\nimport {Subscription} from \"rxjs\";\n\n// @ts-ignore\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameplayLabService implements OnDestroy {\n  currentParty: any;\n  currentPartyProxy: any;\n  gameplay: any;\n  private subscriptions: Subscription;\n\n  constructor(private serviceLabService: GenerateLabService, private dataStorageService: DataStorageService,\n              private soundService: SoundService) {\n    this.gameplay = gameRules.fr.perso.labyrinth.labeat\n    this.subscriptions = dataStorageService\n      .getCurrentParty()\n      .subscribe((party) => {\n        this.currentParty = party;\n        this.currentPartyProxy = JSON.parse(this.gameplay.toJson(party));\n      })\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  move(direction: string) {\n    this.dataStorageService.saveCharacterDirection(direction);\n    let interactionResult = this.gameplay.playerInteractWithJson(this.currentParty, direction);\n    this.dataStorageService.saveParty(this.currentParty)\n    this.dataStorageService.saveLastMessages(JSON.parse(this.gameplay.toJsonInteraction(interactionResult)).messages)\n\n    if (interactionResult.result == \"Success\") {\n          this.soundService.playMove()\n          return false;\n        } else {\n          this.soundService.playNo()\n          return true;\n        }\n\n\n\n\n  }\n\n  take(objToTake) {\n    this.dataStorageService.saveCharacterDirection('LEFT');\n\n        if (this.play(objToTake).result == \"Success\") {\n          this.soundService.playTake()\n        }\n\n\n  }\n\n  takeAll() {\n    this.currentPartyProxy.player.location.content\n      .filter(it => it.type != \"door\")\n      .forEach((it) => {\n        this.take(it)\n      })\n  }\n\n  private play(obj): any {\n    let interactionResult = this.gameplay.playerInteractWithJson(this.currentParty, JSON.stringify(obj));\n    this.dataStorageService.saveParty(this.currentParty)\n    this.dataStorageService.saveLastMessages(JSON.parse(this.gameplay.toJsonInteraction(interactionResult)).messages)\n    return interactionResult;\n\n  }\n\n\n  levelContent(levelCase) {\n    return levelCase.content.filter(it => !this.isDoor(it))\n  }\n\n  private isDoor(it) {\n    return it.destination !== undefined\n  }\n\n  doorAt(levelCase, direction: string): any | undefined {\n    let destination = levelCase.connections[direction]\n    if (destination) {\n      return levelCase.content\n        .filter(obj => {\n          let doorDestination = obj.destination;\n          return doorDestination && doorDestination.x === destination.x && doorDestination.y === destination.y;\n        })[0]\n    }\n  }\n\n\n  moveAtCase(levelCase: any): boolean {\n    let connections = this.currentPartyProxy.player.location.connections\n    let direction = findKey(connections, (it) => {\n      return it && it.x === levelCase.x && it.y === levelCase.y\n    })\n    if (direction) {\n      return this.move(direction)\n    }\n    return false;\n  }\n\n  hasPlayer(levelCase: any) {\n    return levelCase.content\n      .find(p => {\n        return p.type === \"player\"\n      });\n  }\n\n  computePartieScore() {\n    return this.gameplay.computePartieScore(this.currentParty)\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n  abcGridTemplate,\n  mapGridTemplate, paperGridTemplate,\n  viewEmptyZoneGridTemplates\n} from \"../labyrinth/service/render/resources/border\";\nimport * as gameRules from \"gameRules\"\n@Component({\n  selector: 'app-ascii-gallery',\n  templateUrl: './ascii-gallery.component.html',\n  styleUrls: ['./ascii-gallery.component.css']\n})\nexport class AsciiGalleryComponent implements OnInit {\n  emptyZone: any\n  defaultZone: any\n  display = false\n  abc: any = abcGridTemplate;\n  outsideZone: any = viewEmptyZoneGridTemplates[0];\n  parchemin: any = paperGridTemplate;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    console.log(\"ngOnInit\")\n    try {\n      let emptyParty = gameRules.fr.perso.labyrinth.labeat.generation.initPartieEmpty(3, \"empty\");\n      this.emptyZone = emptyParty.level.content[0][0]\n      this.defaultZone = emptyParty.level.content[1][1]\n      this.defaultZone = gameRules.fr.perso.labyrinth.labeat.generation.initPartieMapLabWithKey(4, \"key\").level.content.toArray()[0].toArray()[1]\n    } catch (e) {\n      console.log(e)\n    }\n    console.log(this.emptyZone)\n    console.log(this.defaultZone)\n  }\n\n  toggle(): void {\n    this.display = !this.display;\n  }\n}\n","<span (click)=\"toggle()\" class=\"text\"> toggle galery</span>\n<app-zone-view [zone]=\"defaultZone\"> </app-zone-view>\n<app-zone-view [zone]=\"emptyZone\"> </app-zone-view>\n\n\n<div *ngIf=\"display\">\n  <app-loading></app-loading>\n  <inventory-view [player]=\"{inventoryArray:defaultZone.content.toArray()}\"></inventory-view>\n\n\n  <span ascii-border><span class=\"text\">text</span>\n    <span class=\"asciiArt\">art</span></span>\n\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'bigspan'\" class=\"text\">button</button>\n\n  <br/>\n  <br/>\n  <br/>\n  <br/>\n  <span ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\">X</span>\n  <input ascii-render value=\"inputAlone\"/>\n  <br/><br/>\n  <div style=\"display: inline-block\" ascii-render [borderTemplate]=\"abc\" [name]=\"'X'\"><input value=\"inputDiv\"></div>\n  <br/><br/>\n  <br/><br/>\n\n  <span ascii-render [name]=\"'bigspan'\" class=\"text\">spon</span>\n  <br/>\n  <h1 ascii-render [name]=\"'bigspan'\" class=\"text\">H1</h1>\n\n  <br/>\n  <br/>\n  <span ascii-render [name]=\"'new'\" class=\"text\">SPA LABYRINTH</span>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\">BTN LABYRINTH</button>\n  <br/>\n  <button ascii-render [name]=\"'new'\" class=\"text\"><span app-ascii [content]=\"'BTN \\nLABYRINTH'\"></span></button>\n  <br/>\n  <br/>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <div ascii-border class=\"zone outside background-ui\"\n       [xRepeat]=\"0\"\n       [yRepeat]=\"0\"\n       [borderTemplate]=\"outsideZone\"\n  >\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <button ascii-render class=\"asciiArt\">button</button>\n  <br/>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\">text div</div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\" [borderTemplate]=\"parchemin\"><span app-ascii\n                                                                                      [content]=\"'div \\nmulti\\n line'\"></span>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n line'\"></span></div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"text\"><span app-ascii [content]=\"'div \\nmulti\\n with content'\"></span>\n    <span ascii-render [name]=\"'bigspan'\" class=\"text\">span</span>\n\n    <div ascii-render> another div</div>\n  </div>\n  <br/>\n  <input ascii-render [defaultValue]=\"'input'\"/>\n  <div style=\"width:300px\">\n    <p> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz hiehfozehfnhoif zz</p>\n    <p ascii-render> some exemple of text lorelum ipsum blbkuuhiue hfue hfuezhfuhz efuhezfez hfizofhioezhfoz\n      hiehfozehfnhoif zz</p>\n  </div>\n  <div ascii-render [name]=\"'diiiiv'\" class=\"asciiArt\" borderTemplateName=\"paper\">div</div>\n\n\n</div>\n\n\n\n<!-- -->\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {CharacterFormComponent} from \"./characterEditor/character-form/character-form.component\";\nimport {NewLabyrinthFormComponent} from \"./labyrinth/new-form/new-labyrinth-form.component\";\nimport {LabyrinthGameComponent} from \"./labyrinth/game-view/labyrinth-game.component\";\nimport {MenuComponent} from \"./labyrinth/menu/menu.component\";\nimport {MusicViewComponent} from \"./music-view/music-view.component\";\nimport {AsciiGalleryComponent} from \"./ascii-gallery/ascii-gallery.component\";\n\nconst routes: Routes = [{path: 'character', component: CharacterFormComponent},\n  {path: 'new', component: NewLabyrinthFormComponent},\n  {path: 'menu', component: MenuComponent},\n  {path: 'game', component: LabyrinthGameComponent},\n  {path: 'music', component: MusicViewComponent},\n  {path: 'ascii', component: AsciiGalleryComponent},\n  {path: '**', redirectTo: '/menu'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {compositionUtils, chooseNoteUtils, Note, utils, selector, harmoniqueUtils} from \"music-generator\";\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameMusiqueService {\n\n  constructor() {\n  }\n\n  gameDeprimanteMusicRandom(): any {\n    function choseNoteFromRandomNWhoRespect(sizeOfChoice) {\n      let chooseNoteWhoRespect = (note: string, possibilites: Array<string>, filters: Array<(n1: string, n2: string) => boolean>) => {\n        const values = possibilites.filter((newNote) => {\n          return filters.every((f) => {\n            return f.bind(this)(note, newNote)\n          })\n        });\n        return utils.randomFromArray(values.slice(0, sizeOfChoice));\n      }\n      return chooseNoteWhoRespect;\n    }\n\n    let chooseNoteWhoRespect = choseNoteFromRandomNWhoRespect(3);\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  menuDeprimanteMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstTuneWhoRespect;\n    return this.generateMusicDeprimante(chooseNoteWhoRespect)\n  }\n\n  gameMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getRandomFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n  menuMusicRandom(): any {\n\n    let chooseNoteWhoRespect = chooseNoteUtils.getFirstFromBestsWhoRespect;\n    return this.generateMusicAngoissante(chooseNoteWhoRespect)\n  }\n\n\n  generateMusicDeprimante(chooseNoteWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytme = utils.shuffle([[\"4n\", \"4n\"], [\"4n\", \"4n\"], [\"4n\", \"4n.\"]]);\n\n    mainRhytme[0] = [\"4n\"].concat(mainRhytme[0])\n    mainRhytme[2] = mainRhytme[2].concat([\"4n.\"])\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 4))\n    let mainTheme = compositionUtils.fillPatternWithNoteDescendantes(firstNoteTheme, mainRhytme, mainNotes, chooseNoteWhoRespect);\n\n\n    let firstNoteIntro = utils.randomFromArray(mainNotes.slice(0, 4).filter(n => firstNoteTheme != n))\n\n    let intro = compositionUtils.fillPatternWithNoteDescendantes(firstNoteIntro, mainRhytme, mainNotes, chooseNoteWhoRespect);\n    let beforeLastNoteIntro = compositionUtils.flatPartition(intro).reverse()[1].tune\n\n    let lastNoteIntro = chooseNoteWhoRespect(firstNoteTheme, mainNotes, [selector.isConsonnanteOf, (n, n2) => {\n      return selector.isConsonnanteOf(n2, beforeLastNoteIntro)\n    }])\n    compositionUtils.flatPartition(intro).reverse()[0].tune = lastNoteIntro;\n\n    let variation1 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune), chooseNoteWhoRespect);\n    let variation2 = compositionUtils.fillPatternWithNoteDescendantes(mainTheme[0][0].tune, mainRhytme, mainNotes.filter(n => n != mainTheme[0].tune && n != variation1[0].tune), chooseNoteWhoRespect);\n\n\n    let conclusion = compositionUtils.fillWithNotesRespecting(mainNotes.filter(n => n != mainTheme.reverse()[0].tune && n != variation1.reverse()[0].tune && n != variation2.reverse()[0].tune), mainRhytme, mainTheme[0][0].tune, chooseNoteWhoRespect);\n\n    let form = [intro, mainTheme, variation1, mainTheme, variation2, mainTheme, conclusion]\n    let partition = compositionUtils.flatPartition(form)\n\n    return partition\n\n  }\n\n\n  generateMusicAngoissante(chooseNoteWhoRespect=chooseNoteUtils.getRandomFromBestsWhoRespect) {\n\n\n    let mainNotes = harmoniqueUtils.getNNextDescendante('B4', 24)\n    let mainRhytmePart1 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"4n\", \"4n\", \"4n\"]]).slice(0, 2);\n    let mainRhytmePart2 = utils.shuffle([[\"4n\", \"4n\", \"8n\", \"8n\"], [\"8n\", \"8n\", \"4n\", \"4n\",], [\"4n\", \"4n\", \"4n\"], [\"8n\", \"8n\", \"8n\", \"8n\", \"4n\",],]).slice(0, 2);\n    ;\n    //mainRhytmePart1[0] = [\"4n\"].concat(mainRhytmePart1[0])\n    //mainRhytmePart1[2] = mainRhytmePart1[2].concat([\"8n\", \"4n\"])\n    let mainRhytme = mainRhytmePart1.concat(mainRhytmePart2)\n\n\n    let firstNoteTheme = utils.randomFromArray(mainNotes.slice(0, 3))\n\n    let lastNotePreviousPattern = firstNoteTheme\n    let mainThemePart1;\n    try {\n      let previousPattern = [null, new Note(firstNoteTheme, \"\"), null]\n      mainThemePart1 = mainRhytmePart1.map((pattern, indexP) => {\n        let firstNote = previousPattern.length > 2 ? utils.randomFromArray(previousPattern.slice(1, -1)).tune : utils.randomFromArray(harmoniqueUtils.getTunesBeetween(previousPattern[0].tune, previousPattern[1].tune))\n        let maxNoteIndex = Math.round((indexP + pattern.length * 2) * mainNotes.length / (mainRhytmePart1.length + pattern.length * 2));\n        let firstNoteIndex = mainNotes.findIndex((n) => n === firstNote)\n        let currentNotes = mainNotes.slice(firstNoteIndex, maxNoteIndex);\n        let result = compositionUtils.fillWithNotesRespecting2(currentNotes, pattern, lastNotePreviousPattern, [selector.isDescendanceOf, selector.isDiffOf], chooseNoteWhoRespect);\n        compositionUtils.insertResolutionAtEndIfNeed(result, mainNotes, chooseNoteWhoRespect);\n        lastNotePreviousPattern = harmoniqueUtils.getTuneAt(harmoniqueUtils.getLevel(result[0].tune) - 1)\n        previousPattern = result;\n        return result;\n      })\n    } catch (e) {\n      console.error(e)\n      console.error(\"fail create main theme\")\n    }\n\n    //  let mainThemePart1 = fillWithNotesRespecting(mainNotes, mainRhytmePart1, firstNoteTheme, [isInIntervalConsonnance(-1), isInIntervalDegres(6, 3), isDiffOf], chooseNoteWhoRespect);\n    let flatMainThemePart1 = compositionUtils.flatPartition(mainThemePart1);\n    let noteFromPart1 = harmoniqueUtils.getSuroundingTunes(flatMainThemePart1.map(n => n.tune));\n    let noteForPart2 = noteFromPart1.slice(noteFromPart1.length / 4, -noteFromPart1.length / 4)\n    //noteForPart2 = mainNotes.concat(getSuroundingTunes(noteForPart2));\n    if (noteForPart2.length < 2) {\n      console.error(\"not enought note\")\n    }\n\n    let mainThemePart2 = utils.shuffle(mainThemePart1).map((pattern: Array<Note>) => {\n      let shufflePattern = utils.shuffle(pattern)\n      let rythme = compositionUtils.flatPartition(shufflePattern).map(n => n.value);\n      let newPattern = compositionUtils.fillWithRandomNote([rythme], noteForPart2)\n      compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(newPattern), noteForPart2, chooseNoteWhoRespect)\n      return newPattern;\n\n    });\n\n\n    let mainTheme = mainThemePart1.concat(mainThemePart2)\n    let mainThemeNotes = compositionUtils.flatPartition(mainTheme).map(n => n.tune);\n\n\n    let intro = compositionUtils.fillWithNotesRespecting(harmoniqueUtils.getSuroundingTunes(mainThemePart1[0].map(n => n.tune)), mainRhytmePart2, utils.randomFromArray(mainThemeNotes), [selector.isInIntervalDegres(-3, 3)]);\n    compositionUtils.insertDisconnanceAndResolutionAtEnd(compositionUtils.flatPartition(intro), mainNotes, chooseNoteWhoRespect)\n    let flatIntro = compositionUtils.flatPartition(intro);\n\n\n    let noteForVariation = harmoniqueUtils.getSuroundingTunes((utils.last(mainThemePart1) as Array<Note>).map(n => n.tune))\n    let variation1 = utils.shuffle(mainThemePart2).map(pattern => compositionUtils.fillWithRandomNote(compositionUtils.flatPartition(pattern).map(n => n.value), noteForVariation))\n\n    let variation2 = (utils.shuffle(variation1))\n\n\n    let conclusion;\n    try {\n      conclusion = compositionUtils.fillWithNotesRespecting(mainThemeNotes,\n        mainRhytmePart2,\n        utils.last(compositionUtils.flatPartition(variation2)).tune,\n        [selector.isConsonnanteOf, selector.isDiffOf]);\n    } catch (e) {\n      console.log(e)\n    }\n\n\n    let form = [intro, mainThemePart1, mainThemePart2, mainThemePart1, variation1, mainThemePart1, variation2, mainThemePart1, mainThemePart2, conclusion]\n\n\n    return form\n\n  }\n\n\n  moveMusic() {\n    return [new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"D3\", \"8n\"),new Note(\"E3\", \"8n\")];\n  }  noMusic() {\n    return [new Note(\"C3\", \"8n\"),new Note(\"B3\", \"8n\")];\n  }\n\n  takeMusic() {\n    return  [new Note(\"C3\", \"8n\"),new Note(\"E3\", \"8n\"),new Note(\"G3\", \"8n\")];;\n  }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiModule} from \"../../utils/ascii/ascii.module\";\nimport {LoadingComponent} from \"../loading/loading.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n\n@NgModule({\n  declarations: [LoadingComponent\n    ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AsciiModule,\n\n  ],\n    exports: [LoadingComponent]\n})\nexport class LoadingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport {mu} from \"kotlin-logging\";\n\nmu.KotlinLoggingConfiguration.LOG_LEVEL = mu.KotlinLoggingLevel.ERROR;\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}